1,14c1
< config TESTA tristate {
<  prompt "TestA" if []
< }
< config 64BIT boolean {
<  prompt "64-bit kernel" if [ARCH="x86"]
<  default [ARCH="x86_64"] if []
< }
< config X86_32 boolean {
<  default [!64BIT] if []
< }
< config X86_64 boolean {
<  default [64BIT] if []
< }
< config X86 boolean {
---
> config ARM boolean {
16,19c3
<  select HAVE_AOUT if [X86_32]
<  select HAVE_READQ if []
<  select HAVE_WRITEQ if []
<  select HAVE_UNSTABLE_SCHED_CLOCK if []
---
>  select HAVE_AOUT if []
20a5,6
>  select RTC_LIB if []
>  select SYS_SUPPORTS_APM_EMULATION if []
22,37d7
<  select HAVE_PERF_EVENTS if [!M386 && !M486]
<  select HAVE_IOREMAP_PROT if []
<  select HAVE_KPROBES if []
<  select ARCH_WANT_OPTIONAL_GPIOLIB if []
<  select ARCH_WANT_FRAME_POINTERS if []
<  select HAVE_DMA_ATTRS if []
<  select HAVE_KRETPROBES if []
<  select HAVE_FTRACE_MCOUNT_RECORD if []
<  select HAVE_DYNAMIC_FTRACE if []
<  select HAVE_FUNCTION_TRACER if []
<  select HAVE_FUNCTION_GRAPH_TRACER if []
<  select HAVE_FUNCTION_GRAPH_FP_TEST if []
<  select HAVE_FUNCTION_TRACE_MCOUNT_TEST if []
<  select HAVE_FTRACE_NMI_ENTER if [DYNAMIC_FTRACE]
<  select HAVE_SYSCALL_TRACEPOINTS if []
<  select HAVE_KVM if []
39,43c9,12
<  select HAVE_ARCH_TRACEHOOK if []
<  select HAVE_GENERIC_DMA_COHERENT if [X86_32]
<  select HAVE_EFFICIENT_UNALIGNED_ACCESS if []
<  select USER_STACKTRACE_SUPPORT if []
<  select HAVE_DMA_API_DEBUG if []
---
>  select HAVE_KPROBES if [!XIP_KERNEL]
>  select HAVE_KRETPROBES if [HAVE_KPROBES]
>  select HAVE_FUNCTION_TRACER if [!XIP_KERNEL]
>  select HAVE_GENERIC_DMA_COHERENT if []
45,46d13
<  select HAVE_KERNEL_BZIP2 if []
<  select HAVE_KERNEL_LZMA if []
48,60d14
<  select HAVE_HW_BREAKPOINT if []
<  select PERF_EVENTS if []
<  select ANON_INODES if []
<  select HAVE_ARCH_KMEMCHECK if []
<  select HAVE_USER_RETURN_NOTIFIER if []
< }
< config OUTPUT_FORMAT string {
<  default ["elf32-i386"] if [X86_32]
<  default ["elf64-x86-64"] if [X86_64]
< }
< config ARCH_DEFCONFIG string {
<  default ["arch/x86/configs/i386_defconfig"] if [X86_32]
<  default ["arch/x86/configs/x86_64_defconfig"] if [X86_64]
62,63c16
< config GENERIC_TIME boolean {
<  default [y] if []
---
> config HAVE_PWM boolean {
65,66c18
< config GENERIC_CMOS_UPDATE boolean {
<  default [y] if []
---
> config SYS_SUPPORTS_APM_EMULATION boolean {
68,69c20,22
< config CLOCKSOURCE_WATCHDOG boolean {
<  default [y] if []
---
> config GENERIC_GPIO boolean {
> }
> config GENERIC_TIME boolean {
72d24
<  default [y] if []
75,77c27,29
<  default [y] if [X86_64 || X86_32 && X86_LOCAL_APIC]
<  depends on [X86_64 || X86_32 && X86_LOCAL_APIC]
<  inherited [X86_64 || X86_32 && X86_LOCAL_APIC]
---
>  depends on [GENERIC_CLOCKEVENTS]
>  default [y] if [GENERIC_CLOCKEVENTS && SMP && !LOCAL_TIMERS]
>  inherited [GENERIC_CLOCKEVENTS]
79,80c31,32
< config LOCKDEP_SUPPORT boolean {
<  default [y] if []
---
> config HAVE_TCM boolean {
>  select GENERIC_ALLOCATOR if []
82,86c34
< config STACKTRACE_SUPPORT boolean {
<  default [y] if []
< }
< config HAVE_LATENCYTOP_SUPPORT boolean {
<  default [y] if []
---
> config NO_IOPORT boolean {
88,92c36
< config MMU boolean {
<  default [y] if []
< }
< config ZONE_DMA boolean {
<  default [y] if []
---
> config EISA boolean {
96,97c40
< config GENERIC_ISA_DMA boolean {
<  default [y] if []
---
> config MCA boolean {
99c42
< config GENERIC_IOMAP boolean {
---
> config GENERIC_HARDIRQS boolean {
102,110c45
< config GENERIC_BUG boolean {
<  default [y] if [BUG]
<  depends on [BUG]
<  select GENERIC_BUG_RELATIVE_POINTERS if [BUG && X86_64]
<  inherited [BUG]
< }
< config GENERIC_BUG_RELATIVE_POINTERS boolean {
< }
< config GENERIC_HWEIGHT boolean {
---
> config STACKTRACE_SUPPORT boolean {
113c48,51
< config GENERIC_GPIO boolean {
---
> config HAVE_LATENCYTOP_SUPPORT boolean {
>  depends on [!SMP]
>  default [y] if [!SMP]
>  inherited [!SMP]
115c53
< config ARCH_MAY_HAVE_PC_FDC boolean {
---
> config LOCKDEP_SUPPORT boolean {
118,124c56
< config RWSEM_GENERIC_SPINLOCK boolean {
<  default [!X86_XADD] if []
< }
< config RWSEM_XCHGADD_ALGORITHM boolean {
<  default [X86_XADD] if []
< }
< config ARCH_HAS_CPU_IDLE_WAIT boolean {
---
> config TRACE_IRQFLAGS_SUPPORT boolean {
127c59
< config GENERIC_CALIBRATE_DELAY boolean {
---
> config HARDIRQS_SW_RESEND boolean {
130,133c62
< config GENERIC_TIME_VSYSCALL boolean {
<  default [X86_64] if []
< }
< config ARCH_HAS_CPU_RELAX boolean {
---
> config GENERIC_IRQ_PROBE boolean {
136,137c65,68
< config ARCH_HAS_DEFAULT_IDLE boolean {
<  default [y] if []
---
> config GENERIC_LOCKBREAK boolean {
>  default [y] if [SMP && PREEMPT]
>  depends on [SMP && PREEMPT]
>  inherited [SMP && PREEMPT]
139c70
< config ARCH_HAS_CACHE_LINE_SIZE boolean {
---
> config RWSEM_GENERIC_SPINLOCK boolean {
142,143c73
< config HAVE_SETUP_PER_CPU_AREA boolean {
<  default [y] if []
---
> config RWSEM_XCHGADD_ALGORITHM boolean {
145,146c75
< config NEED_PER_CPU_EMBED_FIRST_CHUNK boolean {
<  default [y] if []
---
> config ARCH_HAS_ILOG2_U32 boolean {
148,149c77
< config NEED_PER_CPU_PAGE_FIRST_CHUNK boolean {
<  default [y] if []
---
> config ARCH_HAS_ILOG2_U64 boolean {
151,152c79
< config HAVE_CPUMASK_OF_CPU_MAP boolean {
<  default [X86_64_SMP] if []
---
> config ARCH_HAS_CPUFREQ boolean {
154c81
< config ARCH_HIBERNATION_POSSIBLE boolean {
---
> config GENERIC_HWEIGHT boolean {
157c84
< config ARCH_SUSPEND_POSSIBLE boolean {
---
> config GENERIC_CALIBRATE_DELAY boolean {
160,164c87
< config ZONE_DMA32 boolean {
<  default [X86_64] if []
< }
< config ARCH_POPULATES_NODE_MAP boolean {
<  default [y] if []
---
> config ARCH_MAY_HAVE_PC_FDC boolean {
166,167c89
< config AUDIT_ARCH boolean {
<  default [X86_64] if []
---
> config ZONE_DMA boolean {
169,170c91
< config ARCH_SUPPORTS_OPTIMIZED_INLINING boolean {
<  default [y] if []
---
> config GENERIC_ISA_DMA boolean {
172,173c93
< config ARCH_SUPPORTS_DEBUG_PAGEALLOC boolean {
<  default [y] if []
---
> config FIQ boolean {
175,181c95
< config HAVE_INTEL_TXT boolean {
<  default [y] if [EXPERIMENTAL && DMAR && ACPI]
<  depends on [EXPERIMENTAL && DMAR && ACPI]
<  inherited [EXPERIMENTAL && DMAR && ACPI]
< }
< config GENERIC_HARDIRQS boolean {
<  default [y] if []
---
> config ARCH_MTD_XIP boolean {
186,225c100,125
< config GENERIC_IRQ_PROBE boolean {
<  default [y] if []
< }
< config GENERIC_PENDING_IRQ boolean {
<  depends on [GENERIC_HARDIRQS && SMP]
<  default [y] if [GENERIC_HARDIRQS && SMP]
<  inherited [GENERIC_HARDIRQS && SMP]
< }
< config USE_GENERIC_SMP_HELPERS boolean {
<  default [y] if [SMP]
<  depends on [SMP]
<  inherited [SMP]
< }
< config X86_32_SMP boolean {
<  default [y] if [X86_32 && SMP]
<  depends on [X86_32 && SMP]
<  inherited [X86_32 && SMP]
< }
< config X86_64_SMP boolean {
<  default [y] if [X86_64 && SMP]
<  depends on [X86_64 && SMP]
<  inherited [X86_64 && SMP]
< }
< config X86_HT boolean {
<  depends on [SMP]
<  default [y] if [SMP]
<  inherited [SMP]
< }
< config X86_TRAMPOLINE boolean {
<  depends on [SMP || 64BIT && ACPI_SLEEP]
<  default [y] if [SMP || 64BIT && ACPI_SLEEP]
<  inherited [SMP || 64BIT && ACPI_SLEEP]
< }
< config X86_32_LAZY_GS boolean {
<  default [y] if [X86_32 && !CC_STACKPROTECTOR]
<  depends on [X86_32 && !CC_STACKPROTECTOR]
<  inherited [X86_32 && !CC_STACKPROTECTOR]
< }
< config KTIME_SCALAR boolean {
<  default [X86_32] if []
---
> if [OPROFILE] {
>  config OPROFILE_ARMV6 boolean {
>   default [y] if [OPROFILE && CPU_V6 && !SMP]
>   depends on [CPU_V6 && !SMP]
>   select OPROFILE_ARM11_CORE if [OPROFILE && CPU_V6 && !SMP]
>   inherited [OPROFILE && CPU_V6 && !SMP]
>  }
>  config OPROFILE_MPCORE boolean {
>   default [y] if [OPROFILE && CPU_V6 && SMP]
>   depends on [CPU_V6 && SMP]
>   select OPROFILE_ARM11_CORE if [OPROFILE && CPU_V6 && SMP]
>   inherited [OPROFILE && CPU_V6 && SMP]
>  }
>  config OPROFILE_ARM11_CORE boolean {
>   inherited [OPROFILE]
>  }
>  config OPROFILE_ARMV7 boolean {
>   default [y] if [OPROFILE && CPU_V7 && !SMP]
>   depends on [CPU_V7 && !SMP]
>   inherited [OPROFILE && CPU_V7 && !SMP]
>  }
> }
> config VECTORS_BASE hex {
>  default [0xffff0000] if [MMU || CPU_HIGH_VECTOR]
>  default [DRAM_BASE] if [REMAP_VECTORS_TO_RAM]
>  default [0x00000000] if []
886,887d785
<   default [y] if [SMP]
<   depends on [SMP]
1214,1235c1112,1115
< menu "Processor type and features" {
<  config TICK_ONESHOT boolean {
<  }
<  config NO_HZ boolean {
<   prompt "Tickless System (Dynamic Ticks)" if [GENERIC_TIME && GENERIC_CLOCKEVENTS]
<   depends on [GENERIC_TIME && GENERIC_CLOCKEVENTS]
<   select TICK_ONESHOT if [GENERIC_TIME && GENERIC_CLOCKEVENTS]
<   inherited [GENERIC_TIME && GENERIC_CLOCKEVENTS]
<  }
<  config HIGH_RES_TIMERS boolean {
<   prompt "High Resolution Timer Support" if [GENERIC_TIME && GENERIC_CLOCKEVENTS]
<   depends on [GENERIC_TIME && GENERIC_CLOCKEVENTS]
<   select TICK_ONESHOT if [GENERIC_TIME && GENERIC_CLOCKEVENTS]
<   inherited [GENERIC_TIME && GENERIC_CLOCKEVENTS]
<  }
<  config GENERIC_CLOCKEVENTS_BUILD boolean {
<   default [y] if [GENERIC_CLOCKEVENTS || GENERIC_CLOCKEVENTS_MIGR]
<   depends on [GENERIC_CLOCKEVENTS || GENERIC_CLOCKEVENTS_MIGR]
<   inherited [GENERIC_CLOCKEVENTS || GENERIC_CLOCKEVENTS_MIGR]
<  }
<  config SMP boolean {
<   prompt "Symmetric multi-processing support" if []
---
> menu "System Type" {
>  config MMU boolean {
>   prompt "MMU-based Paged Memory Management Support" if []
>   default [y] if []
1237,1269c1117,1125
<  config X86_X2APIC boolean {
<   prompt "Support x2apic" if [X86_LOCAL_APIC && X86_64 && INTR_REMAP]
<   depends on [X86_LOCAL_APIC && X86_64 && INTR_REMAP]
<   inherited [X86_LOCAL_APIC && X86_64 && INTR_REMAP]
<  }
<  config SPARSE_IRQ boolean {
<   prompt "Support sparse irq numbering" if [PCI_MSI || HT_IRQ]
<   depends on [PCI_MSI || HT_IRQ]
<   inherited [PCI_MSI || HT_IRQ]
<   config NUMA_IRQ_DESC boolean {
<    default [y] if [SPARSE_IRQ && NUMA]
<    depends on [SPARSE_IRQ && NUMA]
<    inherited [SPARSE_IRQ && NUMA]
<   }
<  }
<  config X86_MPPARSE boolean {
<   prompt "Enable MPS table" if [X86_LOCAL_APIC && ACPI]
<   default [y] if [X86_LOCAL_APIC]
<   depends on [X86_LOCAL_APIC]
<   inherited [X86_LOCAL_APIC]
<  }
<  config X86_BIGSMP boolean {
<   prompt "Support for big SMP systems with more than 8 CPUs" if [X86_32 && SMP]
<   depends on [X86_32 && SMP]
<   inherited [X86_32 && SMP]
<  }
<  if [X86_32] {
<   config X86_EXTENDED_PLATFORM boolean {
<    prompt "Support for extended (non-PC) x86 platforms" if [X86_32]
<    default [y] if [X86_32]
<    prompt "Support for extended (non-PC) x86 platforms" if [X86_64]
<    default [y] if [X86_64]
<    inherited [X86_32]
---
>  choice boolean {
>   prompt "ARM system type" if []
>   default [ARCH_VERSATILE] if []
>   config ARCH_AAEC2000 boolean {
>    prompt "Agilent AAEC-2000 based" if [<choice>]
>    select CPU_ARM920T if [<choice>]
>    select ARM_AMBA if [<choice>]
>    select HAVE_CLK if [<choice>]
>    inherited [<choice>]
1271,1426c1127,1134
<  }
<  if [X86_64] {
<   config X86_EXTENDED_PLATFORM boolean {
<    prompt "Support for extended (non-PC) x86 platforms" if [X86_32]
<    default [y] if [X86_32]
<    prompt "Support for extended (non-PC) x86 platforms" if [X86_64]
<    default [y] if [X86_64]
<    inherited [X86_64]
<   }
<  }
<  config X86_VSMP boolean {
<   prompt "ScaleMP vSMP" if [X86_64 && PCI && X86_EXTENDED_PLATFORM]
<   select PARAVIRT if [X86_64 && PCI && X86_EXTENDED_PLATFORM]
<   depends on [X86_64 && PCI]
<   depends on [X86_EXTENDED_PLATFORM]
<   inherited [X86_64 && PCI && X86_EXTENDED_PLATFORM]
<  }
<  config X86_UV boolean {
<   prompt "SGI Ultraviolet" if [X86_64 && X86_EXTENDED_PLATFORM && NUMA && X86_X2APIC]
<   depends on [X86_64]
<   depends on [X86_EXTENDED_PLATFORM]
<   depends on [NUMA]
<   depends on [X86_X2APIC]
<   inherited [X86_64 && X86_EXTENDED_PLATFORM && NUMA && X86_X2APIC]
<  }
<  config X86_ELAN boolean {
<   prompt "AMD Elan" if [X86_32 && X86_EXTENDED_PLATFORM]
<   depends on [X86_32]
<   depends on [X86_EXTENDED_PLATFORM]
<   inherited [X86_32 && X86_EXTENDED_PLATFORM]
<  }
<  config X86_MRST boolean {
<   prompt "Moorestown MID platform" if [X86_32 && X86_EXTENDED_PLATFORM]
<   depends on [X86_32]
<   depends on [X86_EXTENDED_PLATFORM]
<   inherited [X86_32 && X86_EXTENDED_PLATFORM]
<  }
<  config X86_RDC321X boolean {
<   prompt "RDC R-321x SoC" if [X86_32 && X86_EXTENDED_PLATFORM]
<   depends on [X86_32]
<   depends on [X86_EXTENDED_PLATFORM]
<   select M486 if [X86_32 && X86_EXTENDED_PLATFORM]
<   select X86_REBOOTFIXUPS if [X86_32 && X86_EXTENDED_PLATFORM]
<   inherited [X86_32 && X86_EXTENDED_PLATFORM]
<  }
<  config X86_32_NON_STANDARD boolean {
<   prompt "Support non-standard 32-bit SMP architectures" if [X86_32 && SMP && X86_EXTENDED_PLATFORM]
<   depends on [X86_32 && SMP]
<   depends on [X86_EXTENDED_PLATFORM]
<   inherited [X86_32 && SMP && X86_EXTENDED_PLATFORM]
<   config X86_NUMAQ boolean {
<    prompt "NUMAQ (IBM/Sequent)" if [X86_32_NON_STANDARD]
<    depends on [X86_32_NON_STANDARD]
<    select NUMA if [X86_32_NON_STANDARD]
<    select X86_MPPARSE if [X86_32_NON_STANDARD]
<    inherited [X86_32_NON_STANDARD]
<   }
<  }
<  config X86_SUPPORTS_MEMORY_FAILURE boolean {
<   depends on [X86_MCE]
<   depends on [!X86_NUMAQ]
<   depends on [X86_64 || !SPARSEMEM]
<   select ARCH_SUPPORTS_MEMORY_FAILURE if [X86_MCE && !X86_NUMAQ && (X86_64 || !SPARSEMEM)]
<   default [y] if [X86_MCE && !X86_NUMAQ && (X86_64 || !SPARSEMEM)]
<   inherited [X86_MCE && !X86_NUMAQ && (X86_64 || !SPARSEMEM)]
<  }
<  config X86_VISWS boolean {
<   prompt "SGI 320/540 (Visual Workstation)" if [X86_32 && PCI && X86_MPPARSE && PCI_GODIRECT && X86_32_NON_STANDARD]
<   depends on [X86_32 && PCI && X86_MPPARSE && PCI_GODIRECT]
<   depends on [X86_32_NON_STANDARD]
<   inherited [X86_32 && PCI && X86_MPPARSE && PCI_GODIRECT && X86_32_NON_STANDARD]
<  }
<  config X86_SUMMIT boolean {
<   prompt "Summit/EXA (IBM x440)" if [X86_32_NON_STANDARD]
<   depends on [X86_32_NON_STANDARD]
<   inherited [X86_32_NON_STANDARD]
<  }
<  config X86_ES7000 boolean {
<   prompt "Unisys ES7000 IA32 series" if [X86_32_NON_STANDARD && X86_BIGSMP]
<   depends on [X86_32_NON_STANDARD && X86_BIGSMP]
<   inherited [X86_32_NON_STANDARD && X86_BIGSMP]
<  }
<  config SCHED_OMIT_FRAME_POINTER boolean {
<   default [y] if [X86]
<   prompt "Single-depth WCHAN output" if [X86]
<   depends on [X86]
<   inherited [X86]
<  }
<  menuconfig PARAVIRT_GUEST boolean {
<   prompt "Paravirtualized guest support" if []
<   if [PARAVIRT_GUEST] {
<    config XEN boolean {
<     prompt "Xen guest support" if [PARAVIRT_GUEST && (X86_64 || X86_32 && X86_PAE && !X86_VISWS) && X86_CMPXCHG && X86_TSC]
<     select PARAVIRT if [PARAVIRT_GUEST && (X86_64 || X86_32 && X86_PAE && !X86_VISWS) && X86_CMPXCHG && X86_TSC]
<     select PARAVIRT_CLOCK if [PARAVIRT_GUEST && (X86_64 || X86_32 && X86_PAE && !X86_VISWS) && X86_CMPXCHG && X86_TSC]
<     depends on [X86_64 || X86_32 && X86_PAE && !X86_VISWS]
<     depends on [X86_CMPXCHG && X86_TSC]
<     inherited [PARAVIRT_GUEST && (X86_64 || X86_32 && X86_PAE && !X86_VISWS) && X86_CMPXCHG && X86_TSC]
<     config XEN_MAX_DOMAIN_MEMORY integer {
<      prompt "Maximum allowed size of a domain in gigabytes" if [PARAVIRT_GUEST && XEN]
<      default [8] if [PARAVIRT_GUEST && XEN && X86_32]
<      default [32] if [PARAVIRT_GUEST && XEN && X86_64]
<      depends on [XEN]
<      inherited [PARAVIRT_GUEST && XEN]
<     }
<     config XEN_SAVE_RESTORE boolean {
<      depends on [XEN && PM]
<      default [y] if [PARAVIRT_GUEST && XEN && PM]
<      inherited [PARAVIRT_GUEST && XEN && PM]
<     }
<     config XEN_DEBUG_FS boolean {
<      prompt "Enable Xen debug and tuning parameters in debugfs" if [PARAVIRT_GUEST && XEN && DEBUG_FS]
<      depends on [XEN && DEBUG_FS]
<      default [n] if [PARAVIRT_GUEST && XEN && DEBUG_FS]
<      inherited [PARAVIRT_GUEST && XEN && DEBUG_FS]
<     }
<    }
<    config VMI boolean {
<     prompt "VMI Guest support (DEPRECATED)" if [PARAVIRT_GUEST && X86_32]
<     select PARAVIRT if [PARAVIRT_GUEST && X86_32]
<     depends on [X86_32]
<     inherited [PARAVIRT_GUEST && X86_32]
<    }
<    config KVM_CLOCK boolean {
<     prompt "KVM paravirtualized clock" if [PARAVIRT_GUEST]
<     select PARAVIRT if [PARAVIRT_GUEST]
<     select PARAVIRT_CLOCK if [PARAVIRT_GUEST]
<     inherited [PARAVIRT_GUEST]
<    }
<    config KVM_GUEST boolean {
<     prompt "KVM Guest support" if [PARAVIRT_GUEST]
<     select PARAVIRT if [PARAVIRT_GUEST]
<     inherited [PARAVIRT_GUEST]
<    }
<    config LGUEST_GUEST boolean {
<     prompt "Lguest guest support" if [PARAVIRT_GUEST && X86_32]
<     select PARAVIRT if [PARAVIRT_GUEST && X86_32]
<     depends on [X86_32]
<     select VIRTIO if [PARAVIRT_GUEST && X86_32]
<     select VIRTIO_RING if [PARAVIRT_GUEST && X86_32]
<     select VIRTIO_CONSOLE if [PARAVIRT_GUEST && X86_32]
<     inherited [PARAVIRT_GUEST && X86_32]
<    }
<    config PARAVIRT boolean {
<     prompt "Enable paravirtualization code" if [PARAVIRT_GUEST]
<     inherited [PARAVIRT_GUEST]
<     config PARAVIRT_SPINLOCKS boolean {
<      prompt "Paravirtualization layer for spinlocks" if [PARAVIRT_GUEST && PARAVIRT && SMP && EXPERIMENTAL]
<      depends on [PARAVIRT && SMP && EXPERIMENTAL]
<      inherited [PARAVIRT_GUEST && PARAVIRT && SMP && EXPERIMENTAL]
<     }
<    }
<    config PARAVIRT_CLOCK boolean {
<     default [n] if [PARAVIRT_GUEST]
<     inherited [PARAVIRT_GUEST]
<    }
---
>   config ARCH_INTEGRATOR boolean {
>    prompt "ARM Ltd. Integrator family" if [<choice>]
>    select ARM_AMBA if [<choice>]
>    select ARCH_HAS_CPUFREQ if [<choice>]
>    select HAVE_CLK if [<choice>]
>    select COMMON_CLKDEV if [<choice>]
>    select ICST525 if [<choice>]
>    inherited [<choice>]
1428,1578c1136,1145
<  }
<  config PARAVIRT_DEBUG boolean {
<   prompt "paravirt-ops debugging" if [PARAVIRT && DEBUG_KERNEL]
<   depends on [PARAVIRT && DEBUG_KERNEL]
<   inherited [PARAVIRT && DEBUG_KERNEL]
<  }
<  config MEMTEST boolean {
<   prompt "Memtest" if []
<  }
<  config X86_SUMMIT_NUMA boolean {
<   default [y] if [X86_32 && NUMA && X86_32_NON_STANDARD]
<   depends on [X86_32 && NUMA && X86_32_NON_STANDARD]
<   inherited [X86_32 && NUMA && X86_32_NON_STANDARD]
<  }
<  config X86_CYCLONE_TIMER boolean {
<   default [y] if [X86_32_NON_STANDARD]
<   depends on [X86_32_NON_STANDARD]
<   inherited [X86_32_NON_STANDARD]
<  }
<  if [!X86_ELAN] {
<   choice boolean {
<    prompt "Processor family" if [!X86_ELAN]
<    default [M686] if [!X86_ELAN && X86_32]
<    default [GENERIC_CPU] if [!X86_ELAN && X86_64]
<    config M386 boolean {
<     prompt "386" if [<choice> && X86_32 && !UML]
<     depends on [X86_32 && !UML]
<     inherited [<choice> && X86_32 && !UML]
<    }
<    config M486 boolean {
<     prompt "486" if [<choice> && X86_32]
<     depends on [X86_32]
<     inherited [<choice> && X86_32]
<    }
<    config M586 boolean {
<     prompt "586/K5/5x86/6x86/6x86MX" if [<choice> && X86_32]
<     depends on [X86_32]
<     inherited [<choice> && X86_32]
<    }
<    config M586TSC boolean {
<     prompt "Pentium-Classic" if [<choice> && X86_32]
<     depends on [X86_32]
<     inherited [<choice> && X86_32]
<    }
<    config M586MMX boolean {
<     prompt "Pentium-MMX" if [<choice> && X86_32]
<     depends on [X86_32]
<     inherited [<choice> && X86_32]
<    }
<    config M686 boolean {
<     prompt "Pentium-Pro" if [<choice> && X86_32]
<     depends on [X86_32]
<     inherited [<choice> && X86_32]
<    }
<    config MPENTIUMII boolean {
<     prompt "Pentium-II/Celeron(pre-Coppermine)" if [<choice> && X86_32]
<     depends on [X86_32]
<     inherited [<choice> && X86_32]
<    }
<    config MPENTIUMIII boolean {
<     prompt "Pentium-III/Celeron(Coppermine)/Pentium-III Xeon" if [<choice> && X86_32]
<     depends on [X86_32]
<     inherited [<choice> && X86_32]
<    }
<    config MPENTIUMM boolean {
<     prompt "Pentium M" if [<choice> && X86_32]
<     depends on [X86_32]
<     inherited [<choice> && X86_32]
<    }
<    config MPENTIUM4 boolean {
<     prompt "Pentium-4/Celeron(P4-based)/Pentium-4 M/older Xeon" if [<choice> && X86_32]
<     depends on [X86_32]
<     inherited [<choice> && X86_32]
<    }
<    config MK6 boolean {
<     prompt "K6/K6-II/K6-III" if [<choice> && X86_32]
<     depends on [X86_32]
<     inherited [<choice> && X86_32]
<    }
<    config MK7 boolean {
<     prompt "Athlon/Duron/K7" if [<choice> && X86_32]
<     depends on [X86_32]
<     inherited [<choice> && X86_32]
<    }
<    config MK8 boolean {
<     prompt "Opteron/Athlon64/Hammer/K8" if [<choice>]
<     inherited [<choice>]
<    }
<    config MCRUSOE boolean {
<     prompt "Crusoe" if [<choice> && X86_32]
<     depends on [X86_32]
<     inherited [<choice> && X86_32]
<    }
<    config MEFFICEON boolean {
<     prompt "Efficeon" if [<choice> && X86_32]
<     depends on [X86_32]
<     inherited [<choice> && X86_32]
<    }
<    config MWINCHIPC6 boolean {
<     prompt "Winchip-C6" if [<choice> && X86_32]
<     depends on [X86_32]
<     inherited [<choice> && X86_32]
<    }
<    config MWINCHIP3D boolean {
<     prompt "Winchip-2/Winchip-2A/Winchip-3" if [<choice> && X86_32]
<     depends on [X86_32]
<     inherited [<choice> && X86_32]
<    }
<    config MGEODEGX1 boolean {
<     prompt "GeodeGX1" if [<choice> && X86_32]
<     depends on [X86_32]
<     inherited [<choice> && X86_32]
<    }
<    config MGEODE_LX boolean {
<     prompt "Geode GX/LX" if [<choice> && X86_32]
<     depends on [X86_32]
<     inherited [<choice> && X86_32]
<    }
<    config MCYRIXIII boolean {
<     prompt "CyrixIII/VIA-C3" if [<choice> && X86_32]
<     depends on [X86_32]
<     inherited [<choice> && X86_32]
<    }
<    config MVIAC3_2 boolean {
<     prompt "VIA C3-2 (Nehemiah)" if [<choice> && X86_32]
<     depends on [X86_32]
<     inherited [<choice> && X86_32]
<    }
<    config MVIAC7 boolean {
<     prompt "VIA C7" if [<choice> && X86_32]
<     depends on [X86_32]
<     inherited [<choice> && X86_32]
<    }
<    config MPSC boolean {
<     prompt "Intel P4 / older Netburst based Xeon" if [<choice> && X86_64]
<     depends on [X86_64]
<     inherited [<choice> && X86_64]
<    }
<    config MCORE2 boolean {
<     prompt "Core 2/newer Xeon" if [<choice>]
<     inherited [<choice>]
<    }
<    config MATOM boolean {
<     prompt "Intel Atom" if [<choice>]
<     inherited [<choice>]
<    }
<    config GENERIC_CPU boolean {
<     prompt "Generic-x86-64" if [<choice> && X86_64]
<     depends on [X86_64]
<     inherited [<choice> && X86_64]
<    }
---
>   config ARCH_REALVIEW boolean {
>    prompt "ARM Ltd. RealView family" if [<choice>]
>    select ARM_AMBA if [<choice>]
>    select HAVE_CLK if [<choice>]
>    select COMMON_CLKDEV if [<choice>]
>    select ICST307 if [<choice>]
>    select GENERIC_TIME if [<choice>]
>    select GENERIC_CLOCKEVENTS if [<choice>]
>    select ARCH_WANT_OPTIONAL_GPIOLIB if [<choice>]
>    inherited [<choice>]
1580,1583c1147,1157
<   config X86_GENERIC boolean {
<    prompt "Generic x86 support" if [!X86_ELAN && X86_32]
<    depends on [X86_32]
<    inherited [!X86_ELAN && X86_32]
---
>   config ARCH_VERSATILE boolean {
>    prompt "ARM Ltd. Versatile family" if [<choice>]
>    select ARM_AMBA if [<choice>]
>    select ARM_VIC if [<choice>]
>    select HAVE_CLK if [<choice>]
>    select COMMON_CLKDEV if [<choice>]
>    select ICST307 if [<choice>]
>    select GENERIC_TIME if [<choice>]
>    select GENERIC_CLOCKEVENTS if [<choice>]
>    select ARCH_WANT_OPTIONAL_GPIOLIB if [<choice>]
>    inherited [<choice>]
1585,1702c1159,1164
<  }
<  config X86_CPU boolean {
<   default [y] if []
<   select GENERIC_FIND_FIRST_BIT if []
<   select GENERIC_FIND_NEXT_BIT if []
<  }
<  config X86_INTERNODE_CACHE_SHIFT integer {
<   default [12] if [X86_VSMP]
<   default [7] if [NUMA]
<   default [X86_L1_CACHE_SHIFT] if []
<  }
<  config X86_CMPXCHG boolean {
<   default [X86_64 || X86_32 && !M386] if []
<  }
<  config X86_L1_CACHE_SHIFT integer {
<   default [7] if [MPENTIUM4 || MPSC]
<   default [6] if [MK7 || MK8 || MPENTIUMM || MCORE2 || MATOM || MVIAC7 || X86_GENERIC || GENERIC_CPU]
<   default [4] if [X86_ELAN || M486 || M386 || MGEODEGX1]
<   default [5] if [MWINCHIP3D || MWINCHIPC6 || MCRUSOE || MEFFICEON || MCYRIXIII || MK6 || MPENTIUMIII || MPENTIUMII || M686 || M586MMX || M586TSC || M586 || MVIAC3_2 || MGEODE_LX]
<  }
<  config X86_XADD boolean {
<   default [y] if [X86_64 || !M386]
<   depends on [X86_64 || !M386]
<   inherited [X86_64 || !M386]
<  }
<  config X86_PPRO_FENCE boolean {
<   prompt "PentiumPro memory ordering errata workaround" if [M686 || M586MMX || M586TSC || M586 || M486 || M386 || MGEODEGX1]
<   depends on [M686 || M586MMX || M586TSC || M586 || M486 || M386 || MGEODEGX1]
<   inherited [M686 || M586MMX || M586TSC || M586 || M486 || M386 || MGEODEGX1]
<  }
<  config X86_F00F_BUG boolean {
<   default [y] if [M586MMX || M586TSC || M586 || M486 || M386]
<   depends on [M586MMX || M586TSC || M586 || M486 || M386]
<   inherited [M586MMX || M586TSC || M586 || M486 || M386]
<  }
<  config X86_WP_WORKS_OK boolean {
<   default [y] if [!M386]
<   depends on [!M386]
<   inherited [!M386]
<  }
<  config X86_INVLPG boolean {
<   default [y] if [X86_32 && !M386]
<   depends on [X86_32 && !M386]
<   inherited [X86_32 && !M386]
<  }
<  config X86_BSWAP boolean {
<   default [y] if [X86_32 && !M386]
<   depends on [X86_32 && !M386]
<   inherited [X86_32 && !M386]
<  }
<  config X86_POPAD_OK boolean {
<   default [y] if [X86_32 && !M386]
<   depends on [X86_32 && !M386]
<   inherited [X86_32 && !M386]
<  }
<  config X86_ALIGNMENT_16 boolean {
<   default [y] if [MWINCHIP3D || MWINCHIPC6 || MCYRIXIII || X86_ELAN || MK6 || M586MMX || M586TSC || M586 || M486 || MVIAC3_2 || MGEODEGX1]
<   depends on [MWINCHIP3D || MWINCHIPC6 || MCYRIXIII || X86_ELAN || MK6 || M586MMX || M586TSC || M586 || M486 || MVIAC3_2 || MGEODEGX1]
<   inherited [MWINCHIP3D || MWINCHIPC6 || MCYRIXIII || X86_ELAN || MK6 || M586MMX || M586TSC || M586 || M486 || MVIAC3_2 || MGEODEGX1]
<  }
<  config X86_INTEL_USERCOPY boolean {
<   default [y] if [MPENTIUM4 || MPENTIUMM || MPENTIUMIII || MPENTIUMII || M586MMX || X86_GENERIC || MK8 || MK7 || MEFFICEON || MCORE2]
<   depends on [MPENTIUM4 || MPENTIUMM || MPENTIUMIII || MPENTIUMII || M586MMX || X86_GENERIC || MK8 || MK7 || MEFFICEON || MCORE2]
<   inherited [MPENTIUM4 || MPENTIUMM || MPENTIUMIII || MPENTIUMII || M586MMX || X86_GENERIC || MK8 || MK7 || MEFFICEON || MCORE2]
<  }
<  config X86_USE_PPRO_CHECKSUM boolean {
<   default [y] if [MWINCHIP3D || MWINCHIPC6 || MCYRIXIII || MK7 || MK6 || MPENTIUM4 || MPENTIUMM || MPENTIUMIII || MPENTIUMII || M686 || MK8 || MVIAC3_2 || MEFFICEON || MGEODE_LX || MCORE2 || MATOM]
<   depends on [MWINCHIP3D || MWINCHIPC6 || MCYRIXIII || MK7 || MK6 || MPENTIUM4 || MPENTIUMM || MPENTIUMIII || MPENTIUMII || M686 || MK8 || MVIAC3_2 || MEFFICEON || MGEODE_LX || MCORE2 || MATOM]
<   inherited [MWINCHIP3D || MWINCHIPC6 || MCYRIXIII || MK7 || MK6 || MPENTIUM4 || MPENTIUMM || MPENTIUMIII || MPENTIUMII || M686 || MK8 || MVIAC3_2 || MEFFICEON || MGEODE_LX || MCORE2 || MATOM]
<  }
<  config X86_USE_3DNOW boolean {
<   default [y] if [(MCYRIXIII || MK7 || MGEODE_LX) && !UML]
<   depends on [(MCYRIXIII || MK7 || MGEODE_LX) && !UML]
<   inherited [(MCYRIXIII || MK7 || MGEODE_LX) && !UML]
<  }
<  config X86_OOSTORE boolean {
<   default [y] if [(MWINCHIP3D || MWINCHIPC6) && MTRR]
<   depends on [(MWINCHIP3D || MWINCHIPC6) && MTRR]
<   inherited [(MWINCHIP3D || MWINCHIPC6) && MTRR]
<  }
<  config X86_P6_NOP boolean {
<   default [y] if [X86_64 && (MCORE2 || MPENTIUM4 || MPSC)]
<   depends on [X86_64]
<   depends on [MCORE2 || MPENTIUM4 || MPSC]
<   inherited [X86_64 && (MCORE2 || MPENTIUM4 || MPSC)]
<  }
<  config X86_TSC boolean {
<   default [y] if [(MWINCHIP3D || MCRUSOE || MEFFICEON || MCYRIXIII || MK7 || MK6 || MPENTIUM4 || MPENTIUMM || MPENTIUMIII || MPENTIUMII || M686 || M586MMX || M586TSC || MK8 || MVIAC3_2 || MVIAC7 || MGEODEGX1 || MGEODE_LX || MCORE2 || MATOM) && !X86_NUMAQ || X86_64]
<   depends on [(MWINCHIP3D || MCRUSOE || MEFFICEON || MCYRIXIII || MK7 || MK6 || MPENTIUM4 || MPENTIUMM || MPENTIUMIII || MPENTIUMII || M686 || M586MMX || M586TSC || MK8 || MVIAC3_2 || MVIAC7 || MGEODEGX1 || MGEODE_LX || MCORE2 || MATOM) && !X86_NUMAQ || X86_64]
<   inherited [(MWINCHIP3D || MCRUSOE || MEFFICEON || MCYRIXIII || MK7 || MK6 || MPENTIUM4 || MPENTIUMM || MPENTIUMIII || MPENTIUMII || M686 || M586MMX || M586TSC || MK8 || MVIAC3_2 || MVIAC7 || MGEODEGX1 || MGEODE_LX || MCORE2 || MATOM) && !X86_NUMAQ || X86_64]
<  }
<  config X86_CMPXCHG64 boolean {
<   default [y] if [X86_PAE || X86_64 || MCORE2 || MPENTIUM4 || MPENTIUMM || MPENTIUMIII || MPENTIUMII || M686 || MATOM]
<   depends on [X86_PAE || X86_64 || MCORE2 || MPENTIUM4 || MPENTIUMM || MPENTIUMIII || MPENTIUMII || M686 || MATOM]
<   inherited [X86_PAE || X86_64 || MCORE2 || MPENTIUM4 || MPENTIUMM || MPENTIUMIII || MPENTIUMII || M686 || MATOM]
<  }
<  config X86_CMOV boolean {
<   default [y] if [MK8 || MK7 || MCORE2 || MPENTIUM4 || MPENTIUMM || MPENTIUMIII || MPENTIUMII || M686 || MVIAC3_2 || MVIAC7 || MCRUSOE || MEFFICEON || X86_64 || MATOM || MGEODE_LX]
<   depends on [MK8 || MK7 || MCORE2 || MPENTIUM4 || MPENTIUMM || MPENTIUMIII || MPENTIUMII || M686 || MVIAC3_2 || MVIAC7 || MCRUSOE || MEFFICEON || X86_64 || MATOM || MGEODE_LX]
<   inherited [MK8 || MK7 || MCORE2 || MPENTIUM4 || MPENTIUMM || MPENTIUMIII || MPENTIUMII || M686 || MVIAC3_2 || MVIAC7 || MCRUSOE || MEFFICEON || X86_64 || MATOM || MGEODE_LX]
<  }
<  config X86_MINIMUM_CPU_FAMILY integer {
<   default [64] if [X86_64]
<   default [6] if [X86_32 && X86_P6_NOP]
<   default [5] if [X86_32 && X86_CMPXCHG64]
<   default [4] if [X86_32 && (X86_XADD || X86_CMPXCHG || X86_BSWAP || X86_WP_WORKS_OK)]
<   default [3] if []
<  }
<  config X86_DEBUGCTLMSR boolean {
<   default [y] if [!MK6 && !MWINCHIPC6 && !MWINCHIP3D && !MCYRIXIII && !M586MMX && !M586TSC && !M586 && !M486 && !M386 && !UML]
<   depends on [!(MK6 || MWINCHIPC6 || MWINCHIP3D || MCYRIXIII || M586MMX || M586TSC || M586 || M486 || M386) && !UML]
<   inherited [!MK6 && !MWINCHIPC6 && !MWINCHIP3D && !MCYRIXIII && !M586MMX && !M586TSC && !M586 && !M486 && !M386 && !UML]
<  }
<  menuconfig PROCESSOR_SELECT boolean {
<   prompt "Supported processor vendors" if [EMBEDDED]
<   config CPU_SUP_INTEL boolean {
<    default [y] if []
<    prompt "Support Intel processors" if [PROCESSOR_SELECT]
---
>   config ARCH_AT91 boolean {
>    prompt "Atmel AT91" if [<choice>]
>    select GENERIC_GPIO if [<choice>]
>    select ARCH_REQUIRE_GPIOLIB if [<choice>]
>    select HAVE_CLK if [<choice>]
>    inherited [<choice>]
1704,1708c1166,1169
<   config CPU_SUP_CYRIX_32 boolean {
<    default [y] if [!64BIT]
<    prompt "Support Cyrix processors" if [!64BIT && PROCESSOR_SELECT]
<    depends on [!64BIT]
<    inherited [!64BIT]
---
>   config ARCH_CLPS711X boolean {
>    prompt "Cirrus Logic CLPS711x/EP721x-based" if [<choice>]
>    select CPU_ARM720T if [<choice>]
>    inherited [<choice>]
1710,1712c1171,1176
<   config CPU_SUP_AMD boolean {
<    default [y] if []
<    prompt "Support AMD processors" if [PROCESSOR_SELECT]
---
>   config ARCH_GEMINI boolean {
>    prompt "Cortina Systems Gemini" if [<choice>]
>    select CPU_FA526 if [<choice>]
>    select GENERIC_GPIO if [<choice>]
>    select ARCH_REQUIRE_GPIOLIB if [<choice>]
>    inherited [<choice>]
1714,1716c1178,1183
<   config CPU_SUP_CENTAUR boolean {
<    default [y] if []
<    prompt "Support Centaur processors" if [PROCESSOR_SELECT]
---
>   config ARCH_EBSA110 boolean {
>    prompt "EBSA-110" if [<choice>]
>    select CPU_SA110 if [<choice>]
>    select ISA if [<choice>]
>    select NO_IOPORT if [<choice>]
>    inherited [<choice>]
1718,1722c1185,1195
<   config CPU_SUP_TRANSMETA_32 boolean {
<    default [y] if [!64BIT]
<    prompt "Support Transmeta processors" if [!64BIT && PROCESSOR_SELECT]
<    depends on [!64BIT]
<    inherited [!64BIT]
---
>   config ARCH_EP93XX boolean {
>    prompt "EP93xx-based" if [<choice>]
>    select CPU_ARM920T if [<choice>]
>    select ARM_AMBA if [<choice>]
>    select ARM_VIC if [<choice>]
>    select GENERIC_GPIO if [<choice>]
>    select HAVE_CLK if [<choice>]
>    select COMMON_CLKDEV if [<choice>]
>    select ARCH_REQUIRE_GPIOLIB if [<choice>]
>    select ARCH_HAS_HOLES_MEMORYMODEL if [<choice>]
>    inherited [<choice>]
1724,1728c1197,1201
<   config CPU_SUP_UMC_32 boolean {
<    default [y] if [!64BIT]
<    prompt "Support UMC processors" if [!64BIT && PROCESSOR_SELECT]
<    depends on [!64BIT]
<    inherited [!64BIT]
---
>   config ARCH_FOOTBRIDGE boolean {
>    prompt "FootBridge" if [<choice>]
>    select CPU_SA110 if [<choice>]
>    select FOOTBRIDGE if [<choice>]
>    inherited [<choice>]
1730,1750c1203,1211
<  }
<  config X86_DS boolean {
<   default [X86_PTRACE_BTS] if [X86_DEBUGCTLMSR]
<   depends on [X86_DEBUGCTLMSR]
<   select HAVE_HW_BRANCH_TRACER if [X86_DEBUGCTLMSR]
<   inherited [X86_DEBUGCTLMSR]
<  }
<  config X86_PTRACE_BTS boolean {
<   prompt "Branch Trace Store" if [X86_DEBUGCTLMSR && BROKEN]
<   default [y] if [X86_DEBUGCTLMSR && BROKEN]
<   depends on [X86_DEBUGCTLMSR]
<   depends on [BROKEN]
<   inherited [X86_DEBUGCTLMSR && BROKEN]
<  }
<  config HPET_TIMER boolean {
<   default [X86_64] if []
<   prompt "HPET Timer Support" if [X86_32]
<   config HPET_EMULATE_RTC boolean {
<    default [y] if [HPET_TIMER && (RTC || RTC_DRV_CMOS)]
<    depends on [HPET_TIMER && (RTC="y" || RTC="m" || RTC_DRV_CMOS="m" || RTC_DRV_CMOS="y")]
<    inherited [HPET_TIMER && (RTC || RTC_DRV_CMOS)]
---
>   config ARCH_MXC boolean {
>    prompt "Freescale MXC/iMX-based" if [<choice>]
>    select GENERIC_TIME if [<choice>]
>    select GENERIC_CLOCKEVENTS if [<choice>]
>    select ARCH_MTD_XIP if [<choice>]
>    select GENERIC_GPIO if [<choice>]
>    select ARCH_REQUIRE_GPIOLIB if [<choice>]
>    select HAVE_CLK if [<choice>]
>    inherited [<choice>]
1752,1829c1213,1222
<  }
<  config DMI boolean {
<   default [y] if []
<   prompt "Enable DMI scanning" if [EMBEDDED]
<  }
<  config GART_IOMMU boolean {
<   prompt "GART IOMMU support" if [X86_64 && PCI && EMBEDDED]
<   default [y] if [X86_64 && PCI]
<   select SWIOTLB if [X86_64 && PCI]
<   depends on [X86_64 && PCI]
<   inherited [X86_64 && PCI]
<  }
<  config CALGARY_IOMMU boolean {
<   prompt "IBM Calgary IOMMU support" if [X86_64 && PCI && EXPERIMENTAL]
<   select SWIOTLB if [X86_64 && PCI && EXPERIMENTAL]
<   depends on [X86_64 && PCI && EXPERIMENTAL]
<   inherited [X86_64 && PCI && EXPERIMENTAL]
<   config CALGARY_IOMMU_ENABLED_BY_DEFAULT boolean {
<    default [y] if [CALGARY_IOMMU]
<    prompt "Should Calgary be enabled by default?" if [CALGARY_IOMMU]
<    depends on [CALGARY_IOMMU]
<    inherited [CALGARY_IOMMU]
<   }
<  }
<  config AMD_IOMMU boolean {
<   prompt "AMD IOMMU support" if [X86_64 && PCI && ACPI]
<   select SWIOTLB if [X86_64 && PCI && ACPI]
<   select PCI_MSI if [X86_64 && PCI && ACPI]
<   depends on [X86_64 && PCI && ACPI]
<   inherited [X86_64 && PCI && ACPI]
<   config AMD_IOMMU_STATS boolean {
<    prompt "Export AMD IOMMU statistics to debugfs" if [AMD_IOMMU]
<    depends on [AMD_IOMMU]
<    select DEBUG_FS if [AMD_IOMMU]
<    inherited [AMD_IOMMU]
<   }
<  }
<  config SWIOTLB boolean {
<   default [y] if [X86_64]
<  }
<  config IOMMU_HELPER boolean {
<   default [CALGARY_IOMMU || GART_IOMMU || SWIOTLB || AMD_IOMMU] if []
<  }
<  config IOMMU_API boolean {
<   default [AMD_IOMMU || DMAR] if []
<  }
<  config MAXSMP boolean {
<   prompt "Configure Maximum number of SMP Processors and NUMA Nodes" if [X86_64 && SMP && DEBUG_KERNEL && EXPERIMENTAL]
<   depends on [X86_64 && SMP && DEBUG_KERNEL && EXPERIMENTAL]
<   select CPUMASK_OFFSTACK if [X86_64 && SMP && DEBUG_KERNEL && EXPERIMENTAL]
<   default [n] if [X86_64 && SMP && DEBUG_KERNEL && EXPERIMENTAL]
<   inherited [X86_64 && SMP && DEBUG_KERNEL && EXPERIMENTAL]
<  }
<  config NR_CPUS integer {
<   prompt "Maximum number of CPUs" if [SMP && !MAXSMP]
<   range [2 8] if [SMP && X86_32 && !X86_BIGSMP]
<   range [2 512] if [SMP && !MAXSMP]
<   default [1] if [!SMP]
<   default [4096] if [MAXSMP]
<   default [32] if [SMP && (X86_NUMAQ || X86_SUMMIT || X86_BIGSMP || X86_ES7000)]
<   default [8] if [SMP]
<  }
<  config SCHED_SMT boolean {
<   prompt "SMT (Hyperthreading) scheduler support" if [X86_HT]
<   depends on [X86_HT]
<   inherited [X86_HT]
<  }
<  config SCHED_MC boolean {
<   default [y] if [X86_HT]
<   prompt "Multi-core scheduler support" if [X86_HT]
<   depends on [X86_HT]
<   inherited [X86_HT]
<  }
<  choice boolean {
<   prompt "Preemption Model" if []
<   default [PREEMPT_NONE] if []
<   config PREEMPT_NONE boolean {
<    prompt "No Forced Preemption (Server)" if [<choice>]
---
>   config ARCH_STMP3XXX boolean {
>    prompt "Freescale STMP3xxx" if [<choice>]
>    select CPU_ARM926T if [<choice>]
>    select HAVE_CLK if [<choice>]
>    select COMMON_CLKDEV if [<choice>]
>    select ARCH_REQUIRE_GPIOLIB if [<choice>]
>    select GENERIC_TIME if [<choice>]
>    select GENERIC_CLOCKEVENTS if [<choice>]
>    select GENERIC_GPIO if [<choice>]
>    select USB_ARCH_HAS_EHCI if [<choice>]
1832,1833c1225,1230
<   config PREEMPT_VOLUNTARY boolean {
<    prompt "Voluntary Kernel Preemption (Desktop)" if [<choice>]
---
>   config ARCH_NETX boolean {
>    prompt "Hilscher NetX based" if [<choice>]
>    select CPU_ARM926T if [<choice>]
>    select ARM_VIC if [<choice>]
>    select GENERIC_CLOCKEVENTS if [<choice>]
>    select GENERIC_TIME if [<choice>]
1836,1837c1233,1236
<   config PREEMPT boolean {
<    prompt "Preemptible Kernel (Low-Latency Desktop)" if [<choice>]
---
>   config ARCH_H720X boolean {
>    prompt "Hynix HMS720x-based" if [<choice>]
>    select CPU_ARM720T if [<choice>]
>    select ISA_DMA_API if [<choice>]
1840,1946c1239,1250
<  }
<  config X86_UP_APIC boolean {
<   prompt "Local APIC support on uniprocessors" if [X86_32 && !SMP && !X86_32_NON_STANDARD]
<   depends on [X86_32 && !SMP && !X86_32_NON_STANDARD]
<   inherited [X86_32 && !SMP && !X86_32_NON_STANDARD]
<   config X86_UP_IOAPIC boolean {
<    prompt "IO-APIC support on uniprocessors" if [X86_UP_APIC]
<    depends on [X86_UP_APIC]
<    inherited [X86_UP_APIC]
<   }
<  }
<  config X86_LOCAL_APIC boolean {
<   default [y] if [X86_64 || SMP || X86_32_NON_STANDARD || X86_UP_APIC]
<   depends on [X86_64 || SMP || X86_32_NON_STANDARD || X86_UP_APIC]
<   inherited [X86_64 || SMP || X86_32_NON_STANDARD || X86_UP_APIC]
<  }
<  config X86_IO_APIC boolean {
<   default [y] if [X86_64 || SMP || X86_32_NON_STANDARD || X86_UP_APIC]
<   depends on [X86_64 || SMP || X86_32_NON_STANDARD || X86_UP_APIC]
<   inherited [X86_64 || SMP || X86_32_NON_STANDARD || X86_UP_APIC]
<  }
<  config X86_VISWS_APIC boolean {
<   default [y] if [X86_32 && X86_VISWS]
<   depends on [X86_32 && X86_VISWS]
<   inherited [X86_32 && X86_VISWS]
<  }
<  config X86_REROUTE_FOR_BROKEN_BOOT_IRQS boolean {
<   prompt "Reroute for broken boot IRQs" if [X86_IO_APIC]
<   default [n] if [X86_IO_APIC]
<   depends on [X86_IO_APIC]
<   inherited [X86_IO_APIC]
<  }
<  config X86_MCE boolean {
<   prompt "Machine Check / overheating reporting" if []
<   config X86_MCE_INTEL boolean {
<    default [y] if [X86_MCE && X86_LOCAL_APIC]
<    prompt "Intel MCE features" if [X86_MCE && X86_LOCAL_APIC]
<    depends on [X86_MCE && X86_LOCAL_APIC]
<    inherited [X86_MCE && X86_LOCAL_APIC]
<   }
<   config X86_MCE_AMD boolean {
<    default [y] if [X86_MCE && X86_LOCAL_APIC]
<    prompt "AMD MCE features" if [X86_MCE && X86_LOCAL_APIC]
<    depends on [X86_MCE && X86_LOCAL_APIC]
<    inherited [X86_MCE && X86_LOCAL_APIC]
<   }
<   config X86_ANCIENT_MCE boolean {
<    default [n] if [X86_32 && X86_MCE]
<    depends on [X86_32 && X86_MCE]
<    prompt "Support for old Pentium 5 / WinChip machine checks" if [X86_32 && X86_MCE]
<    inherited [X86_32 && X86_MCE]
<   }
<  }
<  config X86_MCE_THRESHOLD boolean {
<   depends on [X86_MCE_AMD || X86_MCE_INTEL]
<   default [y] if [X86_MCE_AMD || X86_MCE_INTEL]
<   inherited [X86_MCE_AMD || X86_MCE_INTEL]
<  }
<  config X86_MCE_INJECT tristate {
<   depends on [X86_MCE]
<   prompt "Machine check injector support" if [X86_MCE]
<   inherited [X86_MCE]
<  }
<  config X86_THERMAL_VECTOR boolean {
<   default [y] if [X86_MCE_INTEL]
<   depends on [X86_MCE_INTEL]
<   inherited [X86_MCE_INTEL]
<  }
<  config VM86 boolean {
<   prompt "Enable VM86 support" if [X86_32 && EMBEDDED]
<   default [y] if [X86_32]
<   depends on [X86_32]
<   inherited [X86_32]
<  }
<  config TOSHIBA tristate {
<   prompt "Toshiba Laptop support" if [X86_32]
<   depends on [X86_32]
<   inherited [X86_32]
<  }
<  config I8K tristate {
<   prompt "Dell laptop support" if []
<  }
<  config X86_REBOOTFIXUPS boolean {
<   prompt "Enable X86 board specific fixups for reboot" if [X86_32]
<   depends on [X86_32]
<   inherited [X86_32]
<  }
<  config MICROCODE tristate {
<   prompt "/dev/cpu/microcode - microcode support" if []
<   select FW_LOADER if []
<   config MICROCODE_INTEL boolean {
<    prompt "Intel microcode patch loading support" if [MICROCODE]
<    depends on [MICROCODE]
<    default [MICROCODE] if [MICROCODE]
<    select FW_LOADER if [MICROCODE]
<    inherited [MICROCODE]
<   }
<   config MICROCODE_AMD boolean {
<    prompt "AMD microcode patch loading support" if [MICROCODE]
<    depends on [MICROCODE]
<    select FW_LOADER if [MICROCODE]
<    inherited [MICROCODE]
<   }
<   config MICROCODE_OLD_INTERFACE boolean {
<    default [y] if [MICROCODE]
<    depends on [MICROCODE]
<    inherited [MICROCODE]
---
>   config ARCH_NOMADIK boolean {
>    prompt "STMicroelectronics Nomadik" if [<choice>]
>    select ARM_AMBA if [<choice>]
>    select ARM_VIC if [<choice>]
>    select CPU_ARM926T if [<choice>]
>    select HAVE_CLK if [<choice>]
>    select COMMON_CLKDEV if [<choice>]
>    select GENERIC_TIME if [<choice>]
>    select GENERIC_CLOCKEVENTS if [<choice>]
>    select GENERIC_GPIO if [<choice>]
>    select ARCH_REQUIRE_GPIOLIB if [<choice>]
>    inherited [<choice>]
1948,1974c1252,1260
<  }
<  config X86_MSR tristate {
<   prompt "/dev/cpu/*/msr - Model-specific register support" if []
<  }
<  config X86_CPUID tristate {
<   prompt "/dev/cpu/*/cpuid - CPU information support" if []
<  }
<  choice boolean {
<   prompt "High Memory Support" if [X86_32]
<   default [HIGHMEM4G] if [X86_32 && !X86_NUMAQ]
<   default [HIGHMEM64G] if [X86_32 && X86_NUMAQ]
<   depends on [X86_32]
<   config NOHIGHMEM boolean {
<    prompt "off" if [<choice> && !X86_NUMAQ]
<    depends on [!X86_NUMAQ]
<    inherited [<choice> && !X86_NUMAQ]
<   }
<   config HIGHMEM4G boolean {
<    prompt "4GB" if [<choice> && !X86_NUMAQ]
<    depends on [!X86_NUMAQ]
<    inherited [<choice> && !X86_NUMAQ]
<   }
<   config HIGHMEM64G boolean {
<    prompt "64GB" if [<choice> && !M386 && !M486]
<    depends on [!M386 && !M486]
<    select X86_PAE if [<choice> && !M386 && !M486]
<    inherited [<choice> && !M386 && !M486]
---
>   config ARCH_IOP13XX boolean {
>    prompt "IOP13xx-based" if [<choice> && MMU]
>    depends on [MMU]
>    select CPU_XSC3 if [<choice> && MMU]
>    select PLAT_IOP if [<choice> && MMU]
>    select PCI if [<choice> && MMU]
>    select ARCH_SUPPORTS_MSI if [<choice> && MMU]
>    select VMSPLIT_1G if [<choice> && MMU]
>    inherited [<choice> && MMU]
1976,1983c1262,1309
<  }
<  choice boolean {
<   depends on [EXPERIMENTAL]
<   prompt "Memory split" if [EXPERIMENTAL && X86_32 && EMBEDDED]
<   default [VMSPLIT_3G] if [EXPERIMENTAL && X86_32]
<   depends on [X86_32]
<   config VMSPLIT_3G boolean {
<    prompt "3G/1G user/kernel split" if [<choice>]
---
>   config ARCH_IOP32X boolean {
>    prompt "IOP32x-based" if [<choice> && MMU]
>    depends on [MMU]
>    select CPU_XSCALE if [<choice> && MMU]
>    select PLAT_IOP if [<choice> && MMU]
>    select PCI if [<choice> && MMU]
>    select GENERIC_GPIO if [<choice> && MMU]
>    select ARCH_REQUIRE_GPIOLIB if [<choice> && MMU]
>    inherited [<choice> && MMU]
>   }
>   config ARCH_IOP33X boolean {
>    prompt "IOP33x-based" if [<choice> && MMU]
>    depends on [MMU]
>    select CPU_XSCALE if [<choice> && MMU]
>    select PLAT_IOP if [<choice> && MMU]
>    select PCI if [<choice> && MMU]
>    select GENERIC_GPIO if [<choice> && MMU]
>    select ARCH_REQUIRE_GPIOLIB if [<choice> && MMU]
>    inherited [<choice> && MMU]
>   }
>   config ARCH_IXP23XX boolean {
>    prompt "IXP23XX-based" if [<choice> && MMU]
>    depends on [MMU]
>    select CPU_XSC3 if [<choice> && MMU]
>    select PCI if [<choice> && MMU]
>    inherited [<choice> && MMU]
>   }
>   config ARCH_IXP2000 boolean {
>    prompt "IXP2400/2800-based" if [<choice> && MMU]
>    depends on [MMU]
>    select CPU_XSCALE if [<choice> && MMU]
>    select PCI if [<choice> && MMU]
>    inherited [<choice> && MMU]
>   }
>   config ARCH_IXP4XX boolean {
>    prompt "IXP4xx-based" if [<choice> && MMU]
>    depends on [MMU]
>    select CPU_XSCALE if [<choice> && MMU]
>    select GENERIC_GPIO if [<choice> && MMU]
>    select GENERIC_TIME if [<choice> && MMU]
>    select GENERIC_CLOCKEVENTS if [<choice> && MMU]
>    select DMABOUNCE if [<choice> && MMU && PCI]
>    inherited [<choice> && MMU]
>   }
>   config ARCH_L7200 boolean {
>    prompt "LinkUp-L7200" if [<choice>]
>    select CPU_ARM720T if [<choice>]
>    select FIQ if [<choice>]
1986,1989c1312,1320
<   config VMSPLIT_3G_OPT boolean {
<    depends on [!X86_PAE]
<    prompt "3G/1G user/kernel split (for full 1G low memory)" if [<choice> && !X86_PAE]
<    inherited [<choice> && !X86_PAE]
---
>   config ARCH_DOVE boolean {
>    prompt "Marvell Dove" if [<choice>]
>    select PCI if [<choice>]
>    select GENERIC_GPIO if [<choice>]
>    select ARCH_REQUIRE_GPIOLIB if [<choice>]
>    select GENERIC_TIME if [<choice>]
>    select GENERIC_CLOCKEVENTS if [<choice>]
>    select PLAT_ORION if [<choice>]
>    inherited [<choice>]
1991,1992c1322,1330
<   config VMSPLIT_2G boolean {
<    prompt "2G/2G user/kernel split" if [<choice>]
---
>   config ARCH_KIRKWOOD boolean {
>    prompt "Marvell Kirkwood" if [<choice>]
>    select CPU_FEROCEON if [<choice>]
>    select PCI if [<choice>]
>    select GENERIC_GPIO if [<choice>]
>    select ARCH_REQUIRE_GPIOLIB if [<choice>]
>    select GENERIC_TIME if [<choice>]
>    select GENERIC_CLOCKEVENTS if [<choice>]
>    select PLAT_ORION if [<choice>]
1995,1998c1333,1339
<   config VMSPLIT_2G_OPT boolean {
<    depends on [!X86_PAE]
<    prompt "2G/2G user/kernel split (for full 2G low memory)" if [<choice> && !X86_PAE]
<    inherited [<choice> && !X86_PAE]
---
>   config ARCH_LOKI boolean {
>    prompt "Marvell Loki (88RC8480)" if [<choice>]
>    select CPU_FEROCEON if [<choice>]
>    select GENERIC_TIME if [<choice>]
>    select GENERIC_CLOCKEVENTS if [<choice>]
>    select PLAT_ORION if [<choice>]
>    inherited [<choice>]
2000,2001c1341,1349
<   config VMSPLIT_1G boolean {
<    prompt "1G/3G user/kernel split" if [<choice>]
---
>   config ARCH_MV78XX0 boolean {
>    prompt "Marvell MV78xx0" if [<choice>]
>    select CPU_FEROCEON if [<choice>]
>    select PCI if [<choice>]
>    select GENERIC_GPIO if [<choice>]
>    select ARCH_REQUIRE_GPIOLIB if [<choice>]
>    select GENERIC_TIME if [<choice>]
>    select GENERIC_CLOCKEVENTS if [<choice>]
>    select PLAT_ORION if [<choice>]
2004,2153c1352,1362
<  }
<  config PAGE_OFFSET hex {
<   default [0xB0000000] if [X86_32 && VMSPLIT_3G_OPT]
<   default [0x80000000] if [X86_32 && VMSPLIT_2G]
<   default [0x78000000] if [X86_32 && VMSPLIT_2G_OPT]
<   default [0x40000000] if [X86_32 && VMSPLIT_1G]
<   default [0xC0000000] if [X86_32]
<   depends on [X86_32]
<   inherited [X86_32]
<  }
<  config HIGHMEM boolean {
<   default [y] if [X86_32 && (HIGHMEM64G || HIGHMEM4G)]
<   depends on [X86_32 && (HIGHMEM64G || HIGHMEM4G)]
<   inherited [X86_32 && (HIGHMEM64G || HIGHMEM4G)]
<  }
<  config X86_PAE boolean {
<   prompt "PAE (Physical Address Extension) Support" if [X86_32 && !HIGHMEM4G]
<   depends on [X86_32 && !HIGHMEM4G]
<   inherited [X86_32 && !HIGHMEM4G]
<  }
<  config ARCH_PHYS_ADDR_T_64BIT boolean {
<   default [X86_64 || X86_PAE] if []
<  }
<  config DIRECT_GBPAGES boolean {
<   prompt "Enable 1GB pages for kernel pagetables" if [X86_64 && EMBEDDED]
<   default [y] if [X86_64]
<   depends on [X86_64]
<   inherited [X86_64]
<  }
<  config NUMA boolean {
<   prompt "Numa Memory Allocation and Scheduler Support" if [SMP && (X86_64 || X86_32 && HIGHMEM64G && (X86_NUMAQ || X86_BIGSMP || X86_SUMMIT && ACPI) && EXPERIMENTAL)]
<   depends on [SMP]
<   depends on [X86_64 || X86_32 && HIGHMEM64G && (X86_NUMAQ || X86_BIGSMP || X86_SUMMIT && ACPI) && EXPERIMENTAL]
<   default [y] if [SMP && (X86_64 || X86_32 && HIGHMEM64G && (X86_NUMAQ || X86_BIGSMP || X86_SUMMIT && ACPI) && EXPERIMENTAL) && (X86_NUMAQ || X86_SUMMIT || X86_BIGSMP)]
<   inherited [SMP && (X86_64 || X86_32 && HIGHMEM64G && (X86_NUMAQ || X86_BIGSMP || X86_SUMMIT && ACPI) && EXPERIMENTAL)]
<  }
<  config K8_NUMA boolean {
<   default [y] if [X86_64 && NUMA && PCI]
<   prompt "Old style AMD Opteron NUMA detection" if [X86_64 && NUMA && PCI]
<   depends on [X86_64 && NUMA && PCI]
<   inherited [X86_64 && NUMA && PCI]
<  }
<  config X86_64_ACPI_NUMA boolean {
<   default [y] if [X86_64 && NUMA && ACPI && PCI]
<   prompt "ACPI NUMA detection" if [X86_64 && NUMA && ACPI && PCI]
<   depends on [X86_64 && NUMA && ACPI && PCI]
<   select ACPI_NUMA if [X86_64 && NUMA && ACPI && PCI]
<   inherited [X86_64 && NUMA && ACPI && PCI]
<   config NODES_SPAN_OTHER_NODES boolean {
<    default [y] if [X86_64_ACPI_NUMA]
<    depends on [X86_64_ACPI_NUMA]
<    inherited [X86_64_ACPI_NUMA]
<   }
<  }
<  config NUMA_EMU boolean {
<   prompt "NUMA emulation" if [X86_64 && NUMA]
<   depends on [X86_64 && NUMA]
<   inherited [X86_64 && NUMA]
<  }
<  config NODES_SHIFT integer {
<   prompt "Maximum NUMA Nodes (as a power of 2)" if [NEED_MULTIPLE_NODES && !MAXSMP]
<   range [1 9] if [NEED_MULTIPLE_NODES]
<   default [9] if [NEED_MULTIPLE_NODES && MAXSMP]
<   default [6] if [NEED_MULTIPLE_NODES && X86_64]
<   default [4] if [NEED_MULTIPLE_NODES && X86_NUMAQ]
<   default [3] if [NEED_MULTIPLE_NODES]
<   depends on [NEED_MULTIPLE_NODES]
<   inherited [NEED_MULTIPLE_NODES]
<  }
<  config HAVE_ARCH_BOOTMEM boolean {
<   default [y] if [X86_32 && NUMA]
<   depends on [X86_32 && NUMA]
<   inherited [X86_32 && NUMA]
<  }
<  config ARCH_HAVE_MEMORY_PRESENT boolean {
<   default [y] if [X86_32 && DISCONTIGMEM]
<   depends on [X86_32 && DISCONTIGMEM]
<   inherited [X86_32 && DISCONTIGMEM]
<  }
<  config NEED_NODE_MEMMAP_SIZE boolean {
<   default [y] if [X86_32 && (DISCONTIGMEM || SPARSEMEM)]
<   depends on [X86_32 && (DISCONTIGMEM || SPARSEMEM)]
<   inherited [X86_32 && (DISCONTIGMEM || SPARSEMEM)]
<  }
<  config HAVE_ARCH_ALLOC_REMAP boolean {
<   default [y] if [X86_32 && NUMA]
<   depends on [X86_32 && NUMA]
<   inherited [X86_32 && NUMA]
<  }
<  config ARCH_FLATMEM_ENABLE boolean {
<   default [y] if [X86_32 && ARCH_SELECT_MEMORY_MODEL && !NUMA]
<   depends on [X86_32 && ARCH_SELECT_MEMORY_MODEL && !NUMA]
<   inherited [X86_32 && ARCH_SELECT_MEMORY_MODEL && !NUMA]
<  }
<  config ARCH_DISCONTIGMEM_ENABLE boolean {
<   default [y] if [NUMA && X86_32]
<   depends on [NUMA && X86_32]
<   inherited [NUMA && X86_32]
<  }
<  config ARCH_DISCONTIGMEM_DEFAULT boolean {
<   default [y] if [NUMA && X86_32]
<   depends on [NUMA && X86_32]
<   inherited [NUMA && X86_32]
<  }
<  config ARCH_PROC_KCORE_TEXT boolean {
<   default [y] if [X86_64 && PROC_KCORE]
<   depends on [X86_64 && PROC_KCORE]
<   inherited [X86_64 && PROC_KCORE]
<  }
<  config ARCH_SPARSEMEM_DEFAULT boolean {
<   default [y] if [X86_64]
<   depends on [X86_64]
<   inherited [X86_64]
<  }
<  config ARCH_SPARSEMEM_ENABLE boolean {
<   default [y] if [X86_64 || NUMA || EXPERIMENTAL && X86_32 || X86_32_NON_STANDARD]
<   depends on [X86_64 || NUMA || EXPERIMENTAL && X86_32 || X86_32_NON_STANDARD]
<   select SPARSEMEM_STATIC if [(X86_64 || NUMA || EXPERIMENTAL && X86_32 || X86_32_NON_STANDARD) && X86_32]
<   select SPARSEMEM_VMEMMAP_ENABLE if [(X86_64 || NUMA || EXPERIMENTAL && X86_32 || X86_32_NON_STANDARD) && X86_64]
<   inherited [X86_64 || NUMA || EXPERIMENTAL && X86_32 || X86_32_NON_STANDARD]
<  }
<  config ARCH_SELECT_MEMORY_MODEL boolean {
<   default [y] if [ARCH_SPARSEMEM_ENABLE]
<   depends on [ARCH_SPARSEMEM_ENABLE]
<   inherited [ARCH_SPARSEMEM_ENABLE]
<  }
<  config ARCH_MEMORY_PROBE boolean {
<   default [X86_64] if [MEMORY_HOTPLUG]
<   depends on [MEMORY_HOTPLUG]
<   inherited [MEMORY_HOTPLUG]
<  }
<  config ILLEGAL_POINTER_VALUE hex {
<   default [0] if [X86_32]
<   default [0xdead000000000000] if [X86_64]
<  }
<  config SELECT_MEMORY_MODEL boolean {
<   default [y] if [EXPERIMENTAL || ARCH_SELECT_MEMORY_MODEL]
<   depends on [EXPERIMENTAL || ARCH_SELECT_MEMORY_MODEL]
<   inherited [EXPERIMENTAL || ARCH_SELECT_MEMORY_MODEL]
<  }
<  choice boolean {
<   prompt "Memory model" if [SELECT_MEMORY_MODEL]
<   depends on [SELECT_MEMORY_MODEL]
<   default [DISCONTIGMEM_MANUAL] if [SELECT_MEMORY_MODEL && ARCH_DISCONTIGMEM_DEFAULT]
<   default [SPARSEMEM_MANUAL] if [SELECT_MEMORY_MODEL && ARCH_SPARSEMEM_DEFAULT]
<   default [FLATMEM_MANUAL] if [SELECT_MEMORY_MODEL]
<   config FLATMEM_MANUAL boolean {
<    prompt "Flat Memory" if [<choice> && (!ARCH_DISCONTIGMEM_ENABLE && !ARCH_SPARSEMEM_ENABLE || ARCH_FLATMEM_ENABLE)]
<    depends on [!(ARCH_DISCONTIGMEM_ENABLE || ARCH_SPARSEMEM_ENABLE) || ARCH_FLATMEM_ENABLE]
<    inherited [<choice> && (!ARCH_DISCONTIGMEM_ENABLE && !ARCH_SPARSEMEM_ENABLE || ARCH_FLATMEM_ENABLE)]
---
>   config ARCH_ORION5X boolean {
>    prompt "Marvell Orion" if [<choice> && MMU]
>    depends on [MMU]
>    select CPU_FEROCEON if [<choice> && MMU]
>    select PCI if [<choice> && MMU]
>    select GENERIC_GPIO if [<choice> && MMU]
>    select ARCH_REQUIRE_GPIOLIB if [<choice> && MMU]
>    select GENERIC_TIME if [<choice> && MMU]
>    select GENERIC_CLOCKEVENTS if [<choice> && MMU]
>    select PLAT_ORION if [<choice> && MMU]
>    inherited [<choice> && MMU]
2155,2158c1364,1382
<   config DISCONTIGMEM_MANUAL boolean {
<    prompt "Discontiguous Memory" if [<choice> && ARCH_DISCONTIGMEM_ENABLE]
<    depends on [ARCH_DISCONTIGMEM_ENABLE]
<    inherited [<choice> && ARCH_DISCONTIGMEM_ENABLE]
---
>   config ARCH_MMP boolean {
>    prompt "Marvell PXA168/910" if [<choice> && MMU]
>    depends on [MMU]
>    select GENERIC_GPIO if [<choice> && MMU]
>    select ARCH_REQUIRE_GPIOLIB if [<choice> && MMU]
>    select HAVE_CLK if [<choice> && MMU]
>    select COMMON_CLKDEV if [<choice> && MMU]
>    select GENERIC_TIME if [<choice> && MMU]
>    select GENERIC_CLOCKEVENTS if [<choice> && MMU]
>    select TICK_ONESHOT if [<choice> && MMU]
>    select PLAT_PXA if [<choice> && MMU]
>    inherited [<choice> && MMU]
>   }
>   config ARCH_KS8695 boolean {
>    prompt "Micrel/Kendin KS8695" if [<choice>]
>    select CPU_ARM922T if [<choice>]
>    select GENERIC_GPIO if [<choice>]
>    select ARCH_REQUIRE_GPIOLIB if [<choice>]
>    inherited [<choice>]
2160,2163c1384,1391
<   config SPARSEMEM_MANUAL boolean {
<    prompt "Sparse Memory" if [<choice> && ARCH_SPARSEMEM_ENABLE]
<    depends on [ARCH_SPARSEMEM_ENABLE]
<    inherited [<choice> && ARCH_SPARSEMEM_ENABLE]
---
>   config ARCH_NS9XXX boolean {
>    prompt "NetSilicon NS9xxx" if [<choice>]
>    select CPU_ARM926T if [<choice>]
>    select GENERIC_GPIO if [<choice>]
>    select GENERIC_TIME if [<choice>]
>    select GENERIC_CLOCKEVENTS if [<choice>]
>    select HAVE_CLK if [<choice>]
>    inherited [<choice>]
2165,2220c1393,1402
<  }
<  config DISCONTIGMEM boolean {
<   default [y] if [!SELECT_MEMORY_MODEL && ARCH_DISCONTIGMEM_ENABLE || DISCONTIGMEM_MANUAL]
<   depends on [!SELECT_MEMORY_MODEL && ARCH_DISCONTIGMEM_ENABLE || DISCONTIGMEM_MANUAL]
<   inherited [!SELECT_MEMORY_MODEL && ARCH_DISCONTIGMEM_ENABLE || DISCONTIGMEM_MANUAL]
<  }
<  config SPARSEMEM boolean {
<   default [y] if [!SELECT_MEMORY_MODEL && ARCH_SPARSEMEM_ENABLE || SPARSEMEM_MANUAL]
<   depends on [!SELECT_MEMORY_MODEL && ARCH_SPARSEMEM_ENABLE || SPARSEMEM_MANUAL]
<   inherited [!SELECT_MEMORY_MODEL && ARCH_SPARSEMEM_ENABLE || SPARSEMEM_MANUAL]
<  }
<  config FLATMEM boolean {
<   default [y] if [!DISCONTIGMEM && !SPARSEMEM || FLATMEM_MANUAL]
<   depends on [!DISCONTIGMEM && !SPARSEMEM || FLATMEM_MANUAL]
<   inherited [!DISCONTIGMEM && !SPARSEMEM || FLATMEM_MANUAL]
<  }
<  config FLAT_NODE_MEM_MAP boolean {
<   default [y] if [!SPARSEMEM]
<   depends on [!SPARSEMEM]
<   inherited [!SPARSEMEM]
<  }
<  config NEED_MULTIPLE_NODES boolean {
<   default [y] if [DISCONTIGMEM || NUMA]
<   depends on [DISCONTIGMEM || NUMA]
<   inherited [DISCONTIGMEM || NUMA]
<  }
<  config HAVE_MEMORY_PRESENT boolean {
<   default [y] if [ARCH_HAVE_MEMORY_PRESENT || SPARSEMEM]
<   depends on [ARCH_HAVE_MEMORY_PRESENT || SPARSEMEM]
<   inherited [ARCH_HAVE_MEMORY_PRESENT || SPARSEMEM]
<  }
<  config SPARSEMEM_STATIC boolean {
<  }
<  config SPARSEMEM_EXTREME boolean {
<   default [y] if [SPARSEMEM && !SPARSEMEM_STATIC]
<   depends on [SPARSEMEM && !SPARSEMEM_STATIC]
<   inherited [SPARSEMEM && !SPARSEMEM_STATIC]
<  }
<  config SPARSEMEM_VMEMMAP_ENABLE boolean {
<  }
<  config SPARSEMEM_VMEMMAP boolean {
<   prompt "Sparse Memory virtual memmap" if [SPARSEMEM && SPARSEMEM_VMEMMAP_ENABLE]
<   depends on [SPARSEMEM && SPARSEMEM_VMEMMAP_ENABLE]
<   default [y] if [SPARSEMEM && SPARSEMEM_VMEMMAP_ENABLE]
<   inherited [SPARSEMEM && SPARSEMEM_VMEMMAP_ENABLE]
<  }
<  config MEMORY_HOTPLUG boolean {
<   prompt "Allow for memory hot-add" if [(SPARSEMEM || X86_64_ACPI_NUMA) && HOTPLUG && ARCH_ENABLE_MEMORY_HOTPLUG && (IA64 || X86 || PPC_BOOK3S_64 || SUPERH || S390)]
<   depends on [SPARSEMEM || X86_64_ACPI_NUMA]
<   depends on [HOTPLUG && ARCH_ENABLE_MEMORY_HOTPLUG]
<   depends on [IA64 || X86 || PPC_BOOK3S_64 || SUPERH || S390]
<   inherited [(SPARSEMEM || X86_64_ACPI_NUMA) && HOTPLUG && ARCH_ENABLE_MEMORY_HOTPLUG && (IA64 || X86 || PPC_BOOK3S_64 || SUPERH || S390)]
<   config MEMORY_HOTPLUG_SPARSE boolean {
<    default [y] if [SPARSEMEM && MEMORY_HOTPLUG]
<    depends on [SPARSEMEM && MEMORY_HOTPLUG]
<    inherited [SPARSEMEM && MEMORY_HOTPLUG]
---
>   config ARCH_W90X900 boolean {
>    prompt "Nuvoton W90X900 CPU" if [<choice>]
>    select CPU_ARM926T if [<choice>]
>    select ARCH_REQUIRE_GPIOLIB if [<choice>]
>    select GENERIC_GPIO if [<choice>]
>    select HAVE_CLK if [<choice>]
>    select COMMON_CLKDEV if [<choice>]
>    select GENERIC_TIME if [<choice>]
>    select GENERIC_CLOCKEVENTS if [<choice>]
>    inherited [<choice>]
2222,2226c1404,1408
<   config MEMORY_HOTREMOVE boolean {
<    prompt "Allow for memory hot remove" if [MEMORY_HOTPLUG && ARCH_ENABLE_MEMORY_HOTREMOVE && MIGRATION]
<    depends on [MEMORY_HOTPLUG && ARCH_ENABLE_MEMORY_HOTREMOVE]
<    depends on [MIGRATION]
<    inherited [MEMORY_HOTPLUG && ARCH_ENABLE_MEMORY_HOTREMOVE && MIGRATION]
---
>   config ARCH_PNX4008 boolean {
>    prompt "Philips Nexperia PNX4008 Mobile" if [<choice>]
>    select CPU_ARM926T if [<choice>]
>    select HAVE_CLK if [<choice>]
>    inherited [<choice>]
2228,2293c1410,1430
<  }
<  config PAGEFLAGS_EXTENDED boolean {
<   default [y] if [64BIT || SPARSEMEM_VMEMMAP || !SPARSEMEM]
<   depends on [64BIT || SPARSEMEM_VMEMMAP || !SPARSEMEM]
<   inherited [64BIT || SPARSEMEM_VMEMMAP || !SPARSEMEM]
<  }
<  config SPLIT_PTLOCK_CPUS integer {
<   default [999999] if [ARM && !CPU_CACHE_VIPT]
<   default [999999] if [PARISC && !PA20]
<   default [999999] if [DEBUG_SPINLOCK || DEBUG_LOCK_ALLOC]
<   default [4] if []
<  }
<  config MIGRATION boolean {
<   prompt "Page migration" if [NUMA || ARCH_ENABLE_MEMORY_HOTREMOVE]
<   default [y] if [NUMA || ARCH_ENABLE_MEMORY_HOTREMOVE]
<   depends on [NUMA || ARCH_ENABLE_MEMORY_HOTREMOVE]
<   inherited [NUMA || ARCH_ENABLE_MEMORY_HOTREMOVE]
<  }
<  config PHYS_ADDR_T_64BIT boolean {
<   default [64BIT || ARCH_PHYS_ADDR_T_64BIT] if []
<  }
<  config ZONE_DMA_FLAG integer {
<   default [0] if [!ZONE_DMA]
<   default [1] if []
<  }
<  config BOUNCE boolean {
<   default [y] if [BLOCK && MMU && (ZONE_DMA || HIGHMEM)]
<   depends on [BLOCK && MMU && (ZONE_DMA || HIGHMEM)]
<   inherited [BLOCK && MMU && (ZONE_DMA || HIGHMEM)]
<  }
<  config NR_QUICK integer {
<   depends on [QUICKLIST]
<   default [2] if [QUICKLIST && (SUPERH || AVR32)]
<   default [1] if [QUICKLIST]
<   inherited [QUICKLIST]
<  }
<  config VIRT_TO_BUS boolean {
<   default [y] if [!ARCH_NO_VIRT_TO_BUS]
<   depends on [!ARCH_NO_VIRT_TO_BUS]
<   inherited [!ARCH_NO_VIRT_TO_BUS]
<  }
<  config MMU_NOTIFIER boolean {
<  }
<  config KSM boolean {
<   prompt "Enable KSM for page merging" if [MMU]
<   depends on [MMU]
<   inherited [MMU]
<  }
<  config DEFAULT_MMAP_MIN_ADDR integer {
<   prompt "Low address space to protect from user allocation" if [MMU]
<   depends on [MMU]
<   default [4096] if [MMU]
<   inherited [MMU]
<  }
<  config ARCH_SUPPORTS_MEMORY_FAILURE boolean {
<  }
<  config MEMORY_FAILURE boolean {
<   depends on [MMU]
<   depends on [ARCH_SUPPORTS_MEMORY_FAILURE]
<   prompt "Enable recovery from hardware memory errors" if [MMU && ARCH_SUPPORTS_MEMORY_FAILURE]
<   inherited [MMU && ARCH_SUPPORTS_MEMORY_FAILURE]
<   config HWPOISON_INJECT tristate {
<    prompt "HWPoison pages injector" if [MEMORY_FAILURE && DEBUG_KERNEL && PROC_FS]
<    depends on [MEMORY_FAILURE && DEBUG_KERNEL && PROC_FS]
<    select PROC_PAGE_MONITOR if [MEMORY_FAILURE && DEBUG_KERNEL && PROC_FS]
<    inherited [MEMORY_FAILURE && DEBUG_KERNEL && PROC_FS]
---
>   config ARCH_PXA boolean {
>    prompt "PXA2xx/PXA3xx-based" if [<choice> && MMU]
>    depends on [MMU]
>    select ARCH_MTD_XIP if [<choice> && MMU]
>    select ARCH_HAS_CPUFREQ if [<choice> && MMU]
>    select GENERIC_GPIO if [<choice> && MMU]
>    select HAVE_CLK if [<choice> && MMU]
>    select COMMON_CLKDEV if [<choice> && MMU]
>    select ARCH_REQUIRE_GPIOLIB if [<choice> && MMU]
>    select GENERIC_TIME if [<choice> && MMU]
>    select GENERIC_CLOCKEVENTS if [<choice> && MMU]
>    select TICK_ONESHOT if [<choice> && MMU]
>    select PLAT_PXA if [<choice> && MMU]
>    inherited [<choice> && MMU]
>   }
>   config ARCH_MSM boolean {
>    prompt "Qualcomm MSM" if [<choice>]
>    select CPU_V6 if [<choice>]
>    select GENERIC_TIME if [<choice>]
>    select GENERIC_CLOCKEVENTS if [<choice>]
>    inherited [<choice>]
2295,2313c1432,1442
<  }
<  config NOMMU_INITIAL_TRIM_EXCESS integer {
<   prompt "Turn on mmap() excess space trimming before booting" if [!MMU]
<   depends on [!MMU]
<   default [1] if [!MMU]
<   inherited [!MMU]
<  }
<  config HIGHPTE boolean {
<   prompt "Allocate 3rd-level pagetables from highmem" if [X86_32 && (HIGHMEM4G || HIGHMEM64G)]
<   depends on [X86_32 && (HIGHMEM4G || HIGHMEM64G)]
<   inherited [X86_32 && (HIGHMEM4G || HIGHMEM64G)]
<  }
<  config X86_CHECK_BIOS_CORRUPTION boolean {
<   prompt "Check for low memory corruption" if []
<   config X86_BOOTPARAM_MEMORY_CORRUPTION_CHECK boolean {
<    prompt "Set the default setting of memory_corruption_check" if [X86_CHECK_BIOS_CORRUPTION]
<    depends on [X86_CHECK_BIOS_CORRUPTION]
<    default [y] if [X86_CHECK_BIOS_CORRUPTION]
<    inherited [X86_CHECK_BIOS_CORRUPTION]
---
>   config ARCH_RPC boolean {
>    prompt "RiscPC" if [<choice>]
>    select ARCH_ACORN if [<choice>]
>    select FIQ if [<choice>]
>    select TIMER_ACORN if [<choice>]
>    select ARCH_MAY_HAVE_PC_FDC if [<choice>]
>    select HAVE_PATA_PLATFORM if [<choice>]
>    select ISA_DMA_API if [<choice>]
>    select NO_IOPORT if [<choice>]
>    select ARCH_SPARSEMEM_ENABLE if [<choice>]
>    inherited [<choice>]
2315,2355c1444,1458
<  }
<  config X86_RESERVE_LOW_64K boolean {
<   prompt "Reserve low 64K of RAM on AMI/Phoenix BIOSen" if []
<   default [y] if []
<  }
<  config MATH_EMULATION boolean {
<   prompt "Math emulation" if [X86_32]
<  }
<  config MTRR boolean {
<   default [y] if []
<   prompt "MTRR (Memory Type Range Register) support" if [EMBEDDED]
<   config MTRR_SANITIZER boolean {
<    default [y] if [MTRR]
<    prompt "MTRR cleanup support" if [MTRR]
<    depends on [MTRR]
<    inherited [MTRR]
<    config MTRR_SANITIZER_ENABLE_DEFAULT integer {
<     prompt "MTRR cleanup enable value (0-1)" if [MTRR_SANITIZER]
<     range [0 1] if [MTRR_SANITIZER]
<     default [0] if [MTRR_SANITIZER]
<     depends on [MTRR_SANITIZER]
<     inherited [MTRR_SANITIZER]
<    }
<    config MTRR_SANITIZER_SPARE_REG_NR_DEFAULT integer {
<     prompt "MTRR cleanup spare reg num (0-7)" if [MTRR_SANITIZER]
<     range [0 7] if [MTRR_SANITIZER]
<     default [1] if [MTRR_SANITIZER]
<     depends on [MTRR_SANITIZER]
<     inherited [MTRR_SANITIZER]
<    }
<   }
<   config X86_PAT boolean {
<    default [y] if [MTRR]
<    prompt "x86 PAT support" if [MTRR && EMBEDDED]
<    depends on [MTRR]
<    inherited [MTRR]
<    config ARCH_USES_PG_UNCACHED boolean {
<     default [y] if [X86_PAT]
<     depends on [X86_PAT]
<     inherited [X86_PAT]
<    }
---
>   config ARCH_SA1100 boolean {
>    prompt "SA1100-based" if [<choice>]
>    select CPU_SA1100 if [<choice>]
>    select ISA if [<choice>]
>    select ARCH_SPARSEMEM_ENABLE if [<choice>]
>    select ARCH_MTD_XIP if [<choice>]
>    select ARCH_HAS_CPUFREQ if [<choice>]
>    select CPU_FREQ if [<choice>]
>    select GENERIC_GPIO if [<choice>]
>    select GENERIC_TIME if [<choice>]
>    select GENERIC_CLOCKEVENTS if [<choice>]
>    select HAVE_CLK if [<choice>]
>    select TICK_ONESHOT if [<choice>]
>    select ARCH_REQUIRE_GPIOLIB if [<choice>]
>    inherited [<choice>]
2357,2374c1460,1464
<  }
<  config EFI boolean {
<   prompt "EFI runtime service support" if [ACPI]
<   depends on [ACPI]
<   inherited [ACPI]
<  }
<  config SECCOMP boolean {
<   default [y] if []
<   prompt "Enable seccomp to safely compute untrusted bytecode" if []
<  }
<  config CC_STACKPROTECTOR boolean {
<   prompt "Enable -fstack-protector buffer overflow detection (EXPERIMENTAL)" if []
<  }
<  choice boolean {
<   prompt "Timer frequency" if []
<   default [HZ_250] if []
<   config HZ_100 boolean {
<    prompt "100 HZ" if [<choice>]
---
>   config ARCH_S3C2410 boolean {
>    prompt "Samsung S3C2410, S3C2412, S3C2413, S3C2440, S3C2442, S3C2443" if [<choice>]
>    select GENERIC_GPIO if [<choice>]
>    select ARCH_HAS_CPUFREQ if [<choice>]
>    select HAVE_CLK if [<choice>]
2377,2378c1467,1471
<   config HZ_250 boolean {
<    prompt "250 HZ" if [<choice>]
---
>   config ARCH_S3C64XX boolean {
>    prompt "Samsung S3C64XX" if [<choice>]
>    select GENERIC_GPIO if [<choice>]
>    select HAVE_CLK if [<choice>]
>    select ARCH_HAS_CPUFREQ if [<choice>]
2381,2382c1474,1478
<   config HZ_300 boolean {
<    prompt "300 HZ" if [<choice>]
---
>   config ARCH_S5PC1XX boolean {
>    prompt "Samsung S5PC1XX" if [<choice>]
>    select GENERIC_GPIO if [<choice>]
>    select HAVE_CLK if [<choice>]
>    select CPU_V7 if [<choice>]
2385,2386c1481,1487
<   config HZ_1000 boolean {
<    prompt "1000 HZ" if [<choice>]
---
>   config ARCH_SHARK boolean {
>    prompt "Shark" if [<choice>]
>    select CPU_SA110 if [<choice>]
>    select ISA if [<choice>]
>    select ISA_DMA if [<choice>]
>    select ZONE_DMA if [<choice>]
>    select PCI if [<choice>]
2389,2423c1490,1555
<  }
<  config HZ integer {
<   default [100] if [HZ_100]
<   default [250] if [HZ_250]
<   default [300] if [HZ_300]
<   default [1000] if [HZ_1000]
<  }
<  config SCHED_HRTICK boolean {
<   default [HIGH_RES_TIMERS && (!SMP || USE_GENERIC_SMP_HELPERS)] if []
<  }
<  config KEXEC boolean {
<   prompt "kexec system call" if []
<  }
<  config CRASH_DUMP boolean {
<   prompt "kernel crash dumps" if [X86_64 || X86_32 && HIGHMEM]
<   depends on [X86_64 || X86_32 && HIGHMEM]
<   inherited [X86_64 || X86_32 && HIGHMEM]
<  }
<  config KEXEC_JUMP boolean {
<   prompt "kexec jump (EXPERIMENTAL)" if [EXPERIMENTAL && KEXEC && HIBERNATION]
<   depends on [EXPERIMENTAL]
<   depends on [KEXEC && HIBERNATION]
<   inherited [EXPERIMENTAL && KEXEC && HIBERNATION]
<  }
<  config PHYSICAL_START hex {
<   prompt "Physical address where the kernel is loaded" if [EMBEDDED || CRASH_DUMP]
<   default [0x1000000] if []
<  }
<  config RELOCATABLE boolean {
<   prompt "Build a relocatable kernel" if []
<   default [y] if []
<   config X86_NEED_RELOCS boolean {
<    default [y] if [X86_32 && RELOCATABLE]
<    depends on [X86_32 && RELOCATABLE]
<    inherited [X86_32 && RELOCATABLE]
---
>   config ARCH_LH7A40X boolean {
>    prompt "Sharp LH7A40X" if [<choice>]
>    select CPU_ARM922T if [<choice>]
>    select ARCH_DISCONTIGMEM_ENABLE if [<choice> && !LH7A40X_CONTIGMEM]
>    select ARCH_SPARSEMEM_ENABLE if [<choice> && !LH7A40X_CONTIGMEM]
>    inherited [<choice>]
>   }
>   config ARCH_U300 boolean {
>    prompt "ST-Ericsson U300 Series" if [<choice> && MMU]
>    depends on [MMU]
>    select CPU_ARM926T if [<choice> && MMU]
>    select HAVE_TCM if [<choice> && MMU]
>    select ARM_AMBA if [<choice> && MMU]
>    select ARM_VIC if [<choice> && MMU]
>    select GENERIC_TIME if [<choice> && MMU]
>    select GENERIC_CLOCKEVENTS if [<choice> && MMU]
>    select HAVE_CLK if [<choice> && MMU]
>    select COMMON_CLKDEV if [<choice> && MMU]
>    select GENERIC_GPIO if [<choice> && MMU]
>    inherited [<choice> && MMU]
>   }
>   config ARCH_DAVINCI boolean {
>    prompt "TI DaVinci" if [<choice>]
>    select CPU_ARM926T if [<choice>]
>    select GENERIC_TIME if [<choice>]
>    select GENERIC_CLOCKEVENTS if [<choice>]
>    select GENERIC_GPIO if [<choice>]
>    select ARCH_REQUIRE_GPIOLIB if [<choice>]
>    select HAVE_CLK if [<choice>]
>    select ZONE_DMA if [<choice>]
>    select HAVE_IDE if [<choice>]
>    select COMMON_CLKDEV if [<choice>]
>    select GENERIC_ALLOCATOR if [<choice>]
>    select ARCH_HAS_HOLES_MEMORYMODEL if [<choice>]
>    inherited [<choice>]
>   }
>   config ARCH_OMAP boolean {
>    prompt "TI OMAP" if [<choice>]
>    select GENERIC_GPIO if [<choice>]
>    select HAVE_CLK if [<choice>]
>    select ARCH_REQUIRE_GPIOLIB if [<choice>]
>    select ARCH_HAS_CPUFREQ if [<choice>]
>    select GENERIC_TIME if [<choice>]
>    select GENERIC_CLOCKEVENTS if [<choice>]
>    select ARCH_HAS_HOLES_MEMORYMODEL if [<choice>]
>    inherited [<choice>]
>   }
>   config ARCH_BCMRING boolean {
>    prompt "Broadcom BCMRING" if [<choice> && MMU]
>    depends on [MMU]
>    select CPU_V6 if [<choice> && MMU]
>    select ARM_AMBA if [<choice> && MMU]
>    select COMMON_CLKDEV if [<choice> && MMU]
>    select GENERIC_TIME if [<choice> && MMU]
>    select GENERIC_CLOCKEVENTS if [<choice> && MMU]
>    select ARCH_WANT_OPTIONAL_GPIOLIB if [<choice> && MMU]
>    inherited [<choice> && MMU]
>   }
>   config ARCH_U8500 boolean {
>    prompt "ST-Ericsson U8500 Series" if [<choice>]
>    select CPU_V7 if [<choice>]
>    select ARM_AMBA if [<choice>]
>    select GENERIC_TIME if [<choice>]
>    select GENERIC_CLOCKEVENTS if [<choice>]
>    select COMMON_CLKDEV if [<choice>]
>    inherited [<choice>]
2426,2440c1558,1566
<  config PHYSICAL_ALIGN hex {
<   prompt "Alignment value to which kernel should be aligned" if [X86_32]
<   default [0x1000000] if []
<   range [0x2000 0x1000000] if []
<  }
<  config HOTPLUG_CPU boolean {
<   prompt "Support for hot-pluggable CPUs" if [SMP && HOTPLUG]
<   depends on [SMP && HOTPLUG]
<   inherited [SMP && HOTPLUG]
<  }
<  config COMPAT_VDSO boolean {
<   default [y] if [X86_32 || IA32_EMULATION]
<   prompt "Compat VDSO support" if [X86_32 || IA32_EMULATION]
<   depends on [X86_32 || IA32_EMULATION]
<   inherited [X86_32 || IA32_EMULATION]
---
>  if [ARCH_AAEC2000] {
>   menu "Agilent AAEC-2000 Implementations" {
>    depends on [ARCH_AAEC2000]
>    config MACH_AAED2000 boolean {
>     prompt "Agilent AAED-2000 Development Platform" if [ARCH_AAEC2000]
>     select CPU_ARM920T if [ARCH_AAEC2000]
>     inherited [ARCH_AAEC2000]
>    }
>   }
2442,2455c1568,1911
<  config CMDLINE_BOOL boolean {
<   prompt "Built-in kernel command line" if []
<   default [n] if []
<   config CMDLINE string {
<    prompt "Built-in kernel command string" if [CMDLINE_BOOL]
<    depends on [CMDLINE_BOOL]
<    default [""] if [CMDLINE_BOOL]
<    inherited [CMDLINE_BOOL]
<   }
<   config CMDLINE_OVERRIDE boolean {
<    prompt "Built-in command line overrides boot loader arguments" if [CMDLINE_BOOL]
<    default [n] if [CMDLINE_BOOL]
<    depends on [CMDLINE_BOOL]
<    inherited [CMDLINE_BOOL]
---
>  if [ARCH_AT91] {
>   config HAVE_AT91_DATAFLASH_CARD boolean {
>    inherited [ARCH_AT91]
>   }
>   config HAVE_NAND_ATMEL_BUSWIDTH_16 boolean {
>    inherited [ARCH_AT91]
>   }
>   config HAVE_AT91_USART3 boolean {
>    inherited [ARCH_AT91]
>   }
>   config HAVE_AT91_USART4 boolean {
>    inherited [ARCH_AT91]
>   }
>   config HAVE_AT91_USART5 boolean {
>    inherited [ARCH_AT91]
>   }
>   menu "Atmel AT91 System-on-Chip" {
>    depends on [ARCH_AT91]
>    choice boolean {
>     prompt "Atmel AT91 Processor" if [ARCH_AT91]
>     config ARCH_AT91RM9200 boolean {
>      prompt "AT91RM9200" if [<choice>]
>      select CPU_ARM920T if [<choice>]
>      select GENERIC_TIME if [<choice>]
>      select GENERIC_CLOCKEVENTS if [<choice>]
>      select HAVE_AT91_USART3 if [<choice>]
>      inherited [<choice>]
>     }
>     config ARCH_AT91SAM9260 boolean {
>      prompt "AT91SAM9260 or AT91SAM9XE" if [<choice>]
>      select CPU_ARM926T if [<choice>]
>      select GENERIC_TIME if [<choice>]
>      select GENERIC_CLOCKEVENTS if [<choice>]
>      select HAVE_AT91_USART3 if [<choice>]
>      select HAVE_AT91_USART4 if [<choice>]
>      select HAVE_AT91_USART5 if [<choice>]
>      inherited [<choice>]
>     }
>     config ARCH_AT91SAM9261 boolean {
>      prompt "AT91SAM9261" if [<choice>]
>      select CPU_ARM926T if [<choice>]
>      select GENERIC_TIME if [<choice>]
>      select GENERIC_CLOCKEVENTS if [<choice>]
>      select HAVE_FB_ATMEL if [<choice>]
>      inherited [<choice>]
>     }
>     config ARCH_AT91SAM9G10 boolean {
>      prompt "AT91SAM9G10" if [<choice>]
>      select CPU_ARM926T if [<choice>]
>      select GENERIC_TIME if [<choice>]
>      select GENERIC_CLOCKEVENTS if [<choice>]
>      select HAVE_FB_ATMEL if [<choice>]
>      inherited [<choice>]
>     }
>     config ARCH_AT91SAM9263 boolean {
>      prompt "AT91SAM9263" if [<choice>]
>      select CPU_ARM926T if [<choice>]
>      select GENERIC_TIME if [<choice>]
>      select GENERIC_CLOCKEVENTS if [<choice>]
>      select HAVE_FB_ATMEL if [<choice>]
>      inherited [<choice>]
>     }
>     config ARCH_AT91SAM9RL boolean {
>      prompt "AT91SAM9RL" if [<choice>]
>      select CPU_ARM926T if [<choice>]
>      select GENERIC_TIME if [<choice>]
>      select GENERIC_CLOCKEVENTS if [<choice>]
>      select HAVE_AT91_USART3 if [<choice>]
>      select HAVE_FB_ATMEL if [<choice>]
>      inherited [<choice>]
>     }
>     config ARCH_AT91SAM9G20 boolean {
>      prompt "AT91SAM9G20" if [<choice>]
>      select CPU_ARM926T if [<choice>]
>      select GENERIC_TIME if [<choice>]
>      select GENERIC_CLOCKEVENTS if [<choice>]
>      select HAVE_AT91_USART3 if [<choice>]
>      select HAVE_AT91_USART4 if [<choice>]
>      select HAVE_AT91_USART5 if [<choice>]
>      inherited [<choice>]
>     }
>     config ARCH_AT91SAM9G45 boolean {
>      prompt "AT91SAM9G45" if [<choice>]
>      select CPU_ARM926T if [<choice>]
>      select GENERIC_TIME if [<choice>]
>      select GENERIC_CLOCKEVENTS if [<choice>]
>      select HAVE_AT91_USART3 if [<choice>]
>      select HAVE_FB_ATMEL if [<choice>]
>      inherited [<choice>]
>     }
>     config ARCH_AT91CAP9 boolean {
>      prompt "AT91CAP9" if [<choice>]
>      select CPU_ARM926T if [<choice>]
>      select GENERIC_TIME if [<choice>]
>      select GENERIC_CLOCKEVENTS if [<choice>]
>      select HAVE_FB_ATMEL if [<choice>]
>      inherited [<choice>]
>     }
>     config ARCH_AT91X40 boolean {
>      prompt "AT91x40" if [<choice>]
>      inherited [<choice>]
>     }
>    }
>    config AT91_PMC_UNIT boolean {
>     default [!ARCH_AT91X40] if [ARCH_AT91]
>     inherited [ARCH_AT91]
>    }
>    if [ARCH_AT91 && ARCH_AT91RM9200] {
>     config MACH_ONEARM boolean {
>      prompt "Ajeco 1ARM Single Board Computer" if [ARCH_AT91 && ARCH_AT91RM9200]
>      inherited [ARCH_AT91 && ARCH_AT91RM9200]
>     }
>     config ARCH_AT91RM9200DK boolean {
>      prompt "Atmel AT91RM9200-DK Development board" if [ARCH_AT91 && ARCH_AT91RM9200]
>      select HAVE_AT91_DATAFLASH_CARD if [ARCH_AT91 && ARCH_AT91RM9200]
>      inherited [ARCH_AT91 && ARCH_AT91RM9200]
>     }
>     config MACH_AT91RM9200EK boolean {
>      prompt "Atmel AT91RM9200-EK Evaluation Kit" if [ARCH_AT91 && ARCH_AT91RM9200]
>      select HAVE_AT91_DATAFLASH_CARD if [ARCH_AT91 && ARCH_AT91RM9200]
>      inherited [ARCH_AT91 && ARCH_AT91RM9200]
>     }
>     config MACH_CSB337 boolean {
>      prompt "Cogent CSB337" if [ARCH_AT91 && ARCH_AT91RM9200]
>      inherited [ARCH_AT91 && ARCH_AT91RM9200]
>     }
>     config MACH_CSB637 boolean {
>      prompt "Cogent CSB637" if [ARCH_AT91 && ARCH_AT91RM9200]
>      inherited [ARCH_AT91 && ARCH_AT91RM9200]
>     }
>     config MACH_CARMEVA boolean {
>      prompt "Conitec ARM&EVA" if [ARCH_AT91 && ARCH_AT91RM9200]
>      inherited [ARCH_AT91 && ARCH_AT91RM9200]
>     }
>     config MACH_ATEB9200 boolean {
>      prompt "Embest ATEB9200" if [ARCH_AT91 && ARCH_AT91RM9200]
>      inherited [ARCH_AT91 && ARCH_AT91RM9200]
>     }
>     config MACH_KB9200 boolean {
>      prompt "KwikByte KB920x" if [ARCH_AT91 && ARCH_AT91RM9200]
>      inherited [ARCH_AT91 && ARCH_AT91RM9200]
>     }
>     config MACH_PICOTUX2XX boolean {
>      prompt "picotux 200" if [ARCH_AT91 && ARCH_AT91RM9200]
>      inherited [ARCH_AT91 && ARCH_AT91RM9200]
>     }
>     config MACH_KAFA boolean {
>      prompt "Sperry-Sun KAFA board" if [ARCH_AT91 && ARCH_AT91RM9200]
>      inherited [ARCH_AT91 && ARCH_AT91RM9200]
>     }
>     config MACH_ECBAT91 boolean {
>      prompt "emQbit ECB_AT91 SBC" if [ARCH_AT91 && ARCH_AT91RM9200]
>      select HAVE_AT91_DATAFLASH_CARD if [ARCH_AT91 && ARCH_AT91RM9200]
>      inherited [ARCH_AT91 && ARCH_AT91RM9200]
>     }
>     config MACH_YL9200 boolean {
>      prompt "ucDragon YL-9200" if [ARCH_AT91 && ARCH_AT91RM9200]
>      inherited [ARCH_AT91 && ARCH_AT91RM9200]
>     }
>     config MACH_CPUAT91 boolean {
>      prompt "Eukrea CPUAT91" if [ARCH_AT91 && ARCH_AT91RM9200]
>      inherited [ARCH_AT91 && ARCH_AT91RM9200]
>     }
>     config MACH_ECO920 boolean {
>      prompt "eco920" if [ARCH_AT91 && ARCH_AT91RM9200]
>      inherited [ARCH_AT91 && ARCH_AT91RM9200]
>     }
>    }
>    if [ARCH_AT91 && ARCH_AT91SAM9260] {
>     config ARCH_AT91SAM9260_SAM9XE boolean {
>      prompt "AT91SAM9XE" if [ARCH_AT91 && ARCH_AT91SAM9260]
>      inherited [ARCH_AT91 && ARCH_AT91SAM9260]
>     }
>     config MACH_AT91SAM9260EK boolean {
>      prompt "Atmel AT91SAM9260-EK / AT91SAM9XE Evaluation Kit" if [ARCH_AT91 && ARCH_AT91SAM9260]
>      select HAVE_AT91_DATAFLASH_CARD if [ARCH_AT91 && ARCH_AT91SAM9260]
>      select HAVE_NAND_ATMEL_BUSWIDTH_16 if [ARCH_AT91 && ARCH_AT91SAM9260]
>      inherited [ARCH_AT91 && ARCH_AT91SAM9260]
>     }
>     config MACH_CAM60 boolean {
>      prompt "KwikByte KB9260 (CAM60) board" if [ARCH_AT91 && ARCH_AT91SAM9260]
>      inherited [ARCH_AT91 && ARCH_AT91SAM9260]
>     }
>     config MACH_SAM9_L9260 boolean {
>      prompt "Olimex SAM9-L9260 board" if [ARCH_AT91 && ARCH_AT91SAM9260]
>      select HAVE_AT91_DATAFLASH_CARD if [ARCH_AT91 && ARCH_AT91SAM9260]
>      inherited [ARCH_AT91 && ARCH_AT91SAM9260]
>     }
>     config MACH_AFEB9260 boolean {
>      prompt "Custom afeb9260 board v1" if [ARCH_AT91 && ARCH_AT91SAM9260]
>      inherited [ARCH_AT91 && ARCH_AT91SAM9260]
>     }
>     config MACH_USB_A9260 boolean {
>      prompt "CALAO USB-A9260" if [ARCH_AT91 && ARCH_AT91SAM9260]
>      inherited [ARCH_AT91 && ARCH_AT91SAM9260]
>     }
>     config MACH_QIL_A9260 boolean {
>      prompt "CALAO QIL-A9260 board" if [ARCH_AT91 && ARCH_AT91SAM9260]
>      inherited [ARCH_AT91 && ARCH_AT91SAM9260]
>     }
>     config MACH_CPU9260 boolean {
>      prompt "Eukrea CPU9260 board" if [ARCH_AT91 && ARCH_AT91SAM9260]
>      inherited [ARCH_AT91 && ARCH_AT91SAM9260]
>     }
>    }
>    if [ARCH_AT91 && ARCH_AT91SAM9261] {
>     config MACH_AT91SAM9261EK boolean {
>      prompt "Atmel AT91SAM9261-EK Evaluation Kit" if [ARCH_AT91 && ARCH_AT91SAM9261]
>      select HAVE_AT91_DATAFLASH_CARD if [ARCH_AT91 && ARCH_AT91SAM9261]
>      select HAVE_NAND_ATMEL_BUSWIDTH_16 if [ARCH_AT91 && ARCH_AT91SAM9261]
>      inherited [ARCH_AT91 && ARCH_AT91SAM9261]
>     }
>    }
>    if [ARCH_AT91 && ARCH_AT91SAM9G10] {
>     config MACH_AT91SAM9G10EK boolean {
>      prompt "Atmel AT91SAM9G10-EK Evaluation Kit" if [ARCH_AT91 && ARCH_AT91SAM9G10]
>      select HAVE_AT91_DATAFLASH_CARD if [ARCH_AT91 && ARCH_AT91SAM9G10]
>      select HAVE_NAND_ATMEL_BUSWIDTH_16 if [ARCH_AT91 && ARCH_AT91SAM9G10]
>      inherited [ARCH_AT91 && ARCH_AT91SAM9G10]
>     }
>    }
>    if [ARCH_AT91 && ARCH_AT91SAM9263] {
>     config MACH_AT91SAM9263EK boolean {
>      prompt "Atmel AT91SAM9263-EK Evaluation Kit" if [ARCH_AT91 && ARCH_AT91SAM9263]
>      select HAVE_AT91_DATAFLASH_CARD if [ARCH_AT91 && ARCH_AT91SAM9263]
>      select HAVE_NAND_ATMEL_BUSWIDTH_16 if [ARCH_AT91 && ARCH_AT91SAM9263]
>      inherited [ARCH_AT91 && ARCH_AT91SAM9263]
>     }
>     config MACH_USB_A9263 boolean {
>      prompt "CALAO USB-A9263" if [ARCH_AT91 && ARCH_AT91SAM9263]
>      inherited [ARCH_AT91 && ARCH_AT91SAM9263]
>     }
>     config MACH_NEOCORE926 boolean {
>      prompt "Adeneo NEOCORE926" if [ARCH_AT91 && ARCH_AT91SAM9263]
>      select HAVE_AT91_DATAFLASH_CARD if [ARCH_AT91 && ARCH_AT91SAM9263]
>      inherited [ARCH_AT91 && ARCH_AT91SAM9263]
>     }
>    }
>    if [ARCH_AT91 && ARCH_AT91SAM9RL] {
>     config MACH_AT91SAM9RLEK boolean {
>      prompt "Atmel AT91SAM9RL-EK Evaluation Kit" if [ARCH_AT91 && ARCH_AT91SAM9RL]
>      inherited [ARCH_AT91 && ARCH_AT91SAM9RL]
>     }
>    }
>    if [ARCH_AT91 && ARCH_AT91SAM9G20] {
>     config MACH_AT91SAM9G20EK boolean {
>      prompt "Atmel AT91SAM9G20-EK Evaluation Kit" if [ARCH_AT91 && ARCH_AT91SAM9G20]
>      select HAVE_AT91_DATAFLASH_CARD if [ARCH_AT91 && ARCH_AT91SAM9G20]
>      select HAVE_NAND_ATMEL_BUSWIDTH_16 if [ARCH_AT91 && ARCH_AT91SAM9G20]
>      inherited [ARCH_AT91 && ARCH_AT91SAM9G20]
>     }
>     config MACH_AT91SAM9G20EK_2MMC boolean {
>      prompt "Atmel AT91SAM9G20-EK Evaluation Kit with 2 SD/MMC Slots" if [ARCH_AT91 && ARCH_AT91SAM9G20]
>      select HAVE_NAND_ATMEL_BUSWIDTH_16 if [ARCH_AT91 && ARCH_AT91SAM9G20]
>      inherited [ARCH_AT91 && ARCH_AT91SAM9G20]
>     }
>     config MACH_CPU9G20 boolean {
>      prompt "Eukrea CPU9G20 board" if [ARCH_AT91 && ARCH_AT91SAM9G20]
>      inherited [ARCH_AT91 && ARCH_AT91SAM9G20]
>     }
>    }
>    if [ARCH_AT91 && ARCH_AT91SAM9G45] {
>     config MACH_AT91SAM9G45EKES boolean {
>      prompt "Atmel AT91SAM9G45-EKES Evaluation Kit" if [ARCH_AT91 && ARCH_AT91SAM9G45]
>      select HAVE_NAND_ATMEL_BUSWIDTH_16 if [ARCH_AT91 && ARCH_AT91SAM9G45]
>      inherited [ARCH_AT91 && ARCH_AT91SAM9G45]
>     }
>    }
>    if [ARCH_AT91 && ARCH_AT91CAP9] {
>     config MACH_AT91CAP9ADK boolean {
>      prompt "Atmel AT91CAP9A-DK Evaluation Kit" if [ARCH_AT91 && ARCH_AT91CAP9]
>      select HAVE_AT91_DATAFLASH_CARD if [ARCH_AT91 && ARCH_AT91CAP9]
>      select HAVE_NAND_ATMEL_BUSWIDTH_16 if [ARCH_AT91 && ARCH_AT91CAP9]
>      inherited [ARCH_AT91 && ARCH_AT91CAP9]
>     }
>    }
>    if [ARCH_AT91 && ARCH_AT91X40] {
>     config MACH_AT91EB01 boolean {
>      prompt "Atmel AT91EB01 Evaluation Kit" if [ARCH_AT91 && ARCH_AT91X40]
>      inherited [ARCH_AT91 && ARCH_AT91X40]
>     }
>    }
>    config MTD_AT91_DATAFLASH_CARD boolean {
>     prompt "Enable DataFlash Card support" if [ARCH_AT91 && HAVE_AT91_DATAFLASH_CARD]
>     depends on [HAVE_AT91_DATAFLASH_CARD]
>     inherited [ARCH_AT91 && HAVE_AT91_DATAFLASH_CARD]
>    }
>    config MTD_NAND_ATMEL_BUSWIDTH_16 boolean {
>     prompt "Enable 16-bit data bus interface to NAND flash" if [ARCH_AT91 && HAVE_NAND_ATMEL_BUSWIDTH_16]
>     depends on [HAVE_NAND_ATMEL_BUSWIDTH_16]
>     inherited [ARCH_AT91 && HAVE_NAND_ATMEL_BUSWIDTH_16]
>    }
>    config AT91_PROGRAMMABLE_CLOCKS boolean {
>     prompt "Programmable Clocks" if [ARCH_AT91]
>     inherited [ARCH_AT91]
>    }
>    config AT91_SLOW_CLOCK boolean {
>     prompt "Suspend-to-RAM disables main oscillator" if [ARCH_AT91 && SUSPEND]
>     depends on [SUSPEND]
>     inherited [ARCH_AT91 && SUSPEND]
>    }
>    config AT91_TIMER_HZ integer {
>     prompt "Kernel HZ (jiffies per second)" if [ARCH_AT91]
>     range [32 1024] if [ARCH_AT91]
>     depends on [ARCH_AT91]
>     default [128] if [ARCH_AT91 && ARCH_AT91RM9200]
>     default [100] if [ARCH_AT91]
>     inherited [ARCH_AT91]
>    }
>    choice boolean {
>     prompt "Select a UART for early kernel messages" if [ARCH_AT91]
>     config AT91_EARLY_DBGU boolean {
>      prompt "DBGU" if [<choice>]
>      inherited [<choice>]
>     }
>     config AT91_EARLY_USART0 boolean {
>      prompt "USART0" if [<choice>]
>      inherited [<choice>]
>     }
>     config AT91_EARLY_USART1 boolean {
>      prompt "USART1" if [<choice>]
>      inherited [<choice>]
>     }
>     config AT91_EARLY_USART2 boolean {
>      prompt "USART2" if [<choice> && !ARCH_AT91X40]
>      depends on [!ARCH_AT91X40]
>      inherited [<choice> && !ARCH_AT91X40]
>     }
>     config AT91_EARLY_USART3 boolean {
>      prompt "USART3" if [<choice> && HAVE_AT91_USART3]
>      depends on [HAVE_AT91_USART3]
>      inherited [<choice> && HAVE_AT91_USART3]
>     }
>     config AT91_EARLY_USART4 boolean {
>      prompt "USART4" if [<choice> && HAVE_AT91_USART4]
>      depends on [HAVE_AT91_USART4]
>      inherited [<choice> && HAVE_AT91_USART4]
>     }
>     config AT91_EARLY_USART5 boolean {
>      prompt "USART5" if [<choice> && HAVE_AT91_USART5]
>      depends on [HAVE_AT91_USART5]
>      inherited [<choice> && HAVE_AT91_USART5]
>     }
>    }
2458,2478c1914,1925
< }
< config ARCH_ENABLE_MEMORY_HOTPLUG boolean {
<  default [y] if [X86_64 || X86_32 && HIGHMEM]
<  depends on [X86_64 || X86_32 && HIGHMEM]
<  inherited [X86_64 || X86_32 && HIGHMEM]
< }
< config ARCH_ENABLE_MEMORY_HOTREMOVE boolean {
<  default [y] if [MEMORY_HOTPLUG]
<  depends on [MEMORY_HOTPLUG]
<  inherited [MEMORY_HOTPLUG]
< }
< config HAVE_ARCH_EARLY_PFN_TO_NID boolean {
<  default [X86_64] if [NUMA]
<  depends on [NUMA]
<  inherited [NUMA]
< }
< menu "Power management and ACPI options" {
<  config ARCH_HIBERNATION_HEADER boolean {
<   default [y] if [X86_64 && HIBERNATION]
<   depends on [X86_64 && HIBERNATION]
<   inherited [X86_64 && HIBERNATION]
---
>  choice boolean {
>   prompt "Processor selection in BCMRING family of devices" if [ARCH_BCMRING]
>   depends on [ARCH_BCMRING]
>   default [ARCH_BCM11107] if [ARCH_BCMRING]
>   config ARCH_FPGA11107 boolean {
>    prompt "FPGA11107" if [<choice>]
>    inherited [<choice>]
>   }
>   config ARCH_BCM11107 boolean {
>    prompt "BCM11107" if [<choice>]
>    inherited [<choice>]
>   }
2480,2492c1927,2096
<  config PM boolean {
<   prompt "Power Management support" if [!IA64_HP_SIM]
<   depends on [!IA64_HP_SIM]
<   inherited [!IA64_HP_SIM]
<   config PM_DEBUG boolean {
<    prompt "Power Management Debug Support" if [PM]
<    depends on [PM]
<    inherited [PM]
<    config PM_VERBOSE boolean {
<     prompt "Verbose Power Management debugging" if [PM_DEBUG]
<     depends on [PM_DEBUG]
<     default [n] if [PM_DEBUG]
<     inherited [PM_DEBUG]
---
>  menu "BCMRING Options" {
>   depends on [ARCH_BCMRING]
>   config BCM_ZRELADDR hex {
>    prompt "Compressed ZREL ADDR" if [ARCH_BCMRING]
>    inherited [ARCH_BCMRING]
>   }
>  }
>  if [ARCH_CLPS711X] {
>   menu "CLPS711X/EP721X Implementations" {
>    depends on [ARCH_CLPS711X]
>    config ARCH_AUTCPU12 boolean {
>     prompt "AUTCPU12" if [ARCH_CLPS711X]
>     inherited [ARCH_CLPS711X]
>    }
>    config ARCH_CDB89712 boolean {
>     prompt "CDB89712" if [ARCH_CLPS711X]
>     select ISA if [ARCH_CLPS711X]
>     inherited [ARCH_CLPS711X]
>    }
>    config ARCH_CEIVA boolean {
>     prompt "CEIVA" if [ARCH_CLPS711X]
>     inherited [ARCH_CLPS711X]
>    }
>    config ARCH_CLEP7312 boolean {
>     prompt "CLEP7312" if [ARCH_CLPS711X]
>     inherited [ARCH_CLPS711X]
>    }
>    config ARCH_EDB7211 boolean {
>     prompt "EDB7211" if [ARCH_CLPS711X]
>     select ISA if [ARCH_CLPS711X]
>     select ARCH_DISCONTIGMEM_ENABLE if [ARCH_CLPS711X]
>     select ARCH_SPARSEMEM_ENABLE if [ARCH_CLPS711X]
>     select ARCH_SELECT_MEMORY_MODEL if [ARCH_CLPS711X]
>     inherited [ARCH_CLPS711X]
>    }
>    config ARCH_P720T boolean {
>     prompt "P720T" if [ARCH_CLPS711X]
>     inherited [ARCH_CLPS711X]
>    }
>    config ARCH_FORTUNET boolean {
>     prompt "FORTUNET" if [ARCH_CLPS711X]
>     inherited [ARCH_CLPS711X]
>    }
>    config ARCH_EP7211 boolean {
>     depends on [ARCH_EDB7211]
>     default [y] if [ARCH_CLPS711X && ARCH_EDB7211]
>     inherited [ARCH_CLPS711X && ARCH_EDB7211]
>    }
>    config ARCH_EP7212 boolean {
>     depends on [ARCH_P720T || ARCH_CEIVA]
>     default [y] if [ARCH_CLPS711X && (ARCH_P720T || ARCH_CEIVA)]
>     inherited [ARCH_CLPS711X && (ARCH_P720T || ARCH_CEIVA)]
>    }
>    config EP72XX_ROM_BOOT boolean {
>     prompt "EP72xx ROM boot" if [ARCH_CLPS711X && (ARCH_EP7211 || ARCH_EP7212)]
>     depends on [ARCH_EP7211 || ARCH_EP7212]
>     inherited [ARCH_CLPS711X && (ARCH_EP7211 || ARCH_EP7212)]
>    }
>   }
>  }
>  if [ARCH_DAVINCI] {
>   config AINTC boolean {
>    inherited [ARCH_DAVINCI]
>   }
>   config CP_INTC boolean {
>    inherited [ARCH_DAVINCI]
>   }
>   config ARCH_DAVINCI_DMx boolean {
>    inherited [ARCH_DAVINCI]
>   }
>   menu "TI DaVinci Implementations" {
>    depends on [ARCH_DAVINCI]
>    config ARCH_DAVINCI_DM644x boolean {
>     prompt "DaVinci 644x based system" if [ARCH_DAVINCI]
>     select AINTC if [ARCH_DAVINCI]
>     select ARCH_DAVINCI_DMx if [ARCH_DAVINCI]
>     inherited [ARCH_DAVINCI]
>    }
>    config ARCH_DAVINCI_DM355 boolean {
>     prompt "DaVinci 355 based system" if [ARCH_DAVINCI]
>     select AINTC if [ARCH_DAVINCI]
>     select ARCH_DAVINCI_DMx if [ARCH_DAVINCI]
>     inherited [ARCH_DAVINCI]
>    }
>    config ARCH_DAVINCI_DM646x boolean {
>     prompt "DaVinci 646x based system" if [ARCH_DAVINCI]
>     select AINTC if [ARCH_DAVINCI]
>     select ARCH_DAVINCI_DMx if [ARCH_DAVINCI]
>     inherited [ARCH_DAVINCI]
>    }
>    config ARCH_DAVINCI_DA830 boolean {
>     prompt "DA830/OMAP-L137 based system" if [ARCH_DAVINCI]
>     select CP_INTC if [ARCH_DAVINCI]
>     select ARCH_DAVINCI_DA8XX if [ARCH_DAVINCI]
>     select CPU_DCACHE_WRITETHROUGH if [ARCH_DAVINCI]
>     inherited [ARCH_DAVINCI]
>    }
>    config ARCH_DAVINCI_DA850 boolean {
>     prompt "DA850/OMAP-L138 based system" if [ARCH_DAVINCI]
>     select CP_INTC if [ARCH_DAVINCI]
>     select ARCH_DAVINCI_DA8XX if [ARCH_DAVINCI]
>     select ARCH_HAS_CPUFREQ if [ARCH_DAVINCI]
>     inherited [ARCH_DAVINCI]
>    }
>    config ARCH_DAVINCI_DA8XX boolean {
>     inherited [ARCH_DAVINCI]
>    }
>    config ARCH_DAVINCI_DM365 boolean {
>     prompt "DaVinci 365 based system" if [ARCH_DAVINCI]
>     select AINTC if [ARCH_DAVINCI]
>     select ARCH_DAVINCI_DMx if [ARCH_DAVINCI]
>     inherited [ARCH_DAVINCI]
>    }
>    config MACH_DAVINCI_EVM boolean {
>     prompt "TI DM644x EVM" if [ARCH_DAVINCI && ARCH_DAVINCI_DM644x]
>     default [ARCH_DAVINCI_DM644x] if [ARCH_DAVINCI && ARCH_DAVINCI_DM644x]
>     depends on [ARCH_DAVINCI_DM644x]
>     inherited [ARCH_DAVINCI && ARCH_DAVINCI_DM644x]
>    }
>    config MACH_SFFSDR boolean {
>     prompt "Lyrtech SFFSDR" if [ARCH_DAVINCI && ARCH_DAVINCI_DM644x]
>     depends on [ARCH_DAVINCI_DM644x]
>     inherited [ARCH_DAVINCI && ARCH_DAVINCI_DM644x]
>    }
>    config MACH_NEUROS_OSD2 boolean {
>     prompt "Neuros OSD2 Open Television Set Top Box" if [ARCH_DAVINCI && ARCH_DAVINCI_DM644x]
>     depends on [ARCH_DAVINCI_DM644x]
>     inherited [ARCH_DAVINCI && ARCH_DAVINCI_DM644x]
>    }
>    config MACH_DAVINCI_DM355_EVM boolean {
>     prompt "TI DM355 EVM" if [ARCH_DAVINCI && ARCH_DAVINCI_DM355]
>     default [ARCH_DAVINCI_DM355] if [ARCH_DAVINCI && ARCH_DAVINCI_DM355]
>     depends on [ARCH_DAVINCI_DM355]
>     inherited [ARCH_DAVINCI && ARCH_DAVINCI_DM355]
>    }
>    config MACH_DM355_LEOPARD boolean {
>     prompt "DM355 Leopard board" if [ARCH_DAVINCI && ARCH_DAVINCI_DM355]
>     depends on [ARCH_DAVINCI_DM355]
>     inherited [ARCH_DAVINCI && ARCH_DAVINCI_DM355]
>    }
>    config MACH_DAVINCI_DM6467_EVM boolean {
>     prompt "TI DM6467 EVM" if [ARCH_DAVINCI && ARCH_DAVINCI_DM646x]
>     default [ARCH_DAVINCI_DM646x] if [ARCH_DAVINCI && ARCH_DAVINCI_DM646x]
>     depends on [ARCH_DAVINCI_DM646x]
>     inherited [ARCH_DAVINCI && ARCH_DAVINCI_DM646x]
>    }
>    config MACH_DAVINCI_DM365_EVM boolean {
>     prompt "TI DM365 EVM" if [ARCH_DAVINCI && ARCH_DAVINCI_DM365]
>     default [ARCH_DAVINCI_DM365] if [ARCH_DAVINCI && ARCH_DAVINCI_DM365]
>     depends on [ARCH_DAVINCI_DM365]
>     inherited [ARCH_DAVINCI && ARCH_DAVINCI_DM365]
>    }
>    config MACH_DAVINCI_DA830_EVM boolean {
>     prompt "TI DA830/OMAP-L137 Reference Platform" if [ARCH_DAVINCI && ARCH_DAVINCI_DA830]
>     default [ARCH_DAVINCI_DA830] if [ARCH_DAVINCI && ARCH_DAVINCI_DA830]
>     depends on [ARCH_DAVINCI_DA830]
>     select GPIO_PCF857X if [ARCH_DAVINCI && ARCH_DAVINCI_DA830]
>     inherited [ARCH_DAVINCI && ARCH_DAVINCI_DA830]
>     choice boolean {
>      prompt "Select DA830/OMAP-L137 UI board peripheral" if [ARCH_DAVINCI && MACH_DAVINCI_DA830_EVM]
>      depends on [MACH_DAVINCI_DA830_EVM]
>      config DA830_UI_LCD boolean {
>       prompt "LCD" if [<choice>]
>       inherited [<choice>]
>      }
>      config DA830_UI_NAND boolean {
>       prompt "NAND flash" if [<choice>]
>       inherited [<choice>]
>      }
>     }
2494,2497c2098,2136
<    config CAN_PM_TRACE boolean {
<     default [y] if [PM_DEBUG && PM_SLEEP && EXPERIMENTAL]
<     depends on [PM_DEBUG && PM_SLEEP && EXPERIMENTAL]
<     inherited [PM_DEBUG && PM_SLEEP && EXPERIMENTAL]
---
>    config MACH_DAVINCI_DA850_EVM boolean {
>     prompt "TI DA850/OMAP-L138 Reference Platform" if [ARCH_DAVINCI && ARCH_DAVINCI_DA850]
>     default [ARCH_DAVINCI_DA850] if [ARCH_DAVINCI && ARCH_DAVINCI_DA850]
>     depends on [ARCH_DAVINCI_DA850]
>     select GPIO_PCA953X if [ARCH_DAVINCI && ARCH_DAVINCI_DA850]
>     inherited [ARCH_DAVINCI && ARCH_DAVINCI_DA850]
>     choice boolean {
>      prompt "Select peripherals connected to expander on UI board" if [ARCH_DAVINCI && MACH_DAVINCI_DA850_EVM]
>      depends on [MACH_DAVINCI_DA850_EVM]
>      config DA850_UI_NONE boolean {
>       prompt "No peripheral is enabled" if [<choice>]
>       inherited [<choice>]
>      }
>      config DA850_UI_RMII boolean {
>       prompt "RMII Ethernet PHY" if [<choice>]
>       inherited [<choice>]
>      }
>     }
>    }
>    config DAVINCI_MUX boolean {
>     prompt "DAVINCI multiplexing support" if [ARCH_DAVINCI]
>     depends on [ARCH_DAVINCI]
>     default [y] if [ARCH_DAVINCI]
>     inherited [ARCH_DAVINCI]
>     config DAVINCI_MUX_DEBUG boolean {
>      prompt "Multiplexing debug output" if [ARCH_DAVINCI && DAVINCI_MUX]
>      depends on [DAVINCI_MUX]
>      inherited [ARCH_DAVINCI && DAVINCI_MUX]
>     }
>     config DAVINCI_MUX_WARNINGS boolean {
>      prompt "Warn about pins the bootloader didn't set up" if [ARCH_DAVINCI && DAVINCI_MUX]
>      depends on [DAVINCI_MUX]
>      inherited [ARCH_DAVINCI && DAVINCI_MUX]
>     }
>    }
>    config DAVINCI_RESET_CLOCKS boolean {
>     prompt "Reset unused clocks during boot" if [ARCH_DAVINCI]
>     depends on [ARCH_DAVINCI]
>     inherited [ARCH_DAVINCI]
2501,2509c2140,2148
<  config PM_TRACE boolean {
<  }
<  config PM_TRACE_RTC boolean {
<   prompt "Suspend/resume event tracing" if [CAN_PM_TRACE && X86]
<   depends on [CAN_PM_TRACE]
<   depends on [X86]
<   select PM_TRACE if [CAN_PM_TRACE && X86]
<   default [n] if [CAN_PM_TRACE && X86]
<   inherited [CAN_PM_TRACE && X86]
---
>  if [ARCH_DOVE] {
>   menu "Marvell Dove Implementations" {
>    depends on [ARCH_DOVE]
>    config MACH_DOVE_DB boolean {
>     prompt "Marvell DB-MV88AP510 Development Board" if [ARCH_DOVE]
>     select I2C_BOARDINFO if [ARCH_DOVE]
>     inherited [ARCH_DOVE]
>    }
>   }
2511,2517c2150,2289
<  config PM_SLEEP_SMP boolean {
<   depends on [SMP]
<   depends on [ARCH_SUSPEND_POSSIBLE || ARCH_HIBERNATION_POSSIBLE]
<   depends on [PM_SLEEP]
<   select HOTPLUG_CPU if [SMP && (ARCH_SUSPEND_POSSIBLE || ARCH_HIBERNATION_POSSIBLE) && PM_SLEEP]
<   default [y] if [SMP && (ARCH_SUSPEND_POSSIBLE || ARCH_HIBERNATION_POSSIBLE) && PM_SLEEP]
<   inherited [SMP && (ARCH_SUSPEND_POSSIBLE || ARCH_HIBERNATION_POSSIBLE) && PM_SLEEP]
---
>  if [ARCH_EP93XX] {
>   menu "Cirrus EP93xx Implementation Options" {
>    depends on [ARCH_EP93XX]
>    config CRUNCH boolean {
>     prompt "Support for MaverickCrunch" if [ARCH_EP93XX]
>     inherited [ARCH_EP93XX]
>    }
>    choice boolean {
>     prompt "EP93xx first SDRAM bank selection" if [ARCH_EP93XX]
>     default [EP93XX_SDCE3_SYNC_PHYS_OFFSET] if [ARCH_EP93XX]
>     config EP93XX_SDCE3_SYNC_PHYS_OFFSET boolean {
>      prompt "0x00000000 - SDCE3/SyncBoot" if [<choice>]
>      inherited [<choice>]
>     }
>     config EP93XX_SDCE0_PHYS_OFFSET boolean {
>      prompt "0xc0000000 - SDCEO" if [<choice>]
>      inherited [<choice>]
>     }
>     config EP93XX_SDCE1_PHYS_OFFSET boolean {
>      prompt "0xd0000000 - SDCE1" if [<choice>]
>      inherited [<choice>]
>     }
>     config EP93XX_SDCE2_PHYS_OFFSET boolean {
>      prompt "0xe0000000 - SDCE2" if [<choice>]
>      inherited [<choice>]
>     }
>     config EP93XX_SDCE3_ASYNC_PHYS_OFFSET boolean {
>      prompt "0xf0000000 - SDCE3/AsyncBoot" if [<choice>]
>      inherited [<choice>]
>     }
>    }
>    config MACH_ADSSPHERE boolean {
>     prompt "Support ADS Sphere" if [ARCH_EP93XX && EP93XX_SDCE3_SYNC_PHYS_OFFSET]
>     depends on [EP93XX_SDCE3_SYNC_PHYS_OFFSET]
>     inherited [ARCH_EP93XX && EP93XX_SDCE3_SYNC_PHYS_OFFSET]
>    }
>    config MACH_EDB93XX boolean {
>     inherited [ARCH_EP93XX]
>    }
>    config MACH_EDB9301 boolean {
>     prompt "Support Cirrus Logic EDB9301" if [ARCH_EP93XX && EP93XX_SDCE3_SYNC_PHYS_OFFSET]
>     depends on [EP93XX_SDCE3_SYNC_PHYS_OFFSET]
>     select MACH_EDB93XX if [ARCH_EP93XX && EP93XX_SDCE3_SYNC_PHYS_OFFSET]
>     inherited [ARCH_EP93XX && EP93XX_SDCE3_SYNC_PHYS_OFFSET]
>    }
>    config MACH_EDB9302 boolean {
>     prompt "Support Cirrus Logic EDB9302" if [ARCH_EP93XX && EP93XX_SDCE3_SYNC_PHYS_OFFSET]
>     depends on [EP93XX_SDCE3_SYNC_PHYS_OFFSET]
>     select MACH_EDB93XX if [ARCH_EP93XX && EP93XX_SDCE3_SYNC_PHYS_OFFSET]
>     inherited [ARCH_EP93XX && EP93XX_SDCE3_SYNC_PHYS_OFFSET]
>    }
>    config MACH_EDB9302A boolean {
>     prompt "Support Cirrus Logic EDB9302A" if [ARCH_EP93XX && EP93XX_SDCE0_PHYS_OFFSET]
>     depends on [EP93XX_SDCE0_PHYS_OFFSET]
>     select MACH_EDB93XX if [ARCH_EP93XX && EP93XX_SDCE0_PHYS_OFFSET]
>     inherited [ARCH_EP93XX && EP93XX_SDCE0_PHYS_OFFSET]
>    }
>    config MACH_EDB9307 boolean {
>     prompt "Support Cirrus Logic EDB9307" if [ARCH_EP93XX && EP93XX_SDCE3_SYNC_PHYS_OFFSET]
>     depends on [EP93XX_SDCE3_SYNC_PHYS_OFFSET]
>     select MACH_EDB93XX if [ARCH_EP93XX && EP93XX_SDCE3_SYNC_PHYS_OFFSET]
>     inherited [ARCH_EP93XX && EP93XX_SDCE3_SYNC_PHYS_OFFSET]
>    }
>    config MACH_EDB9307A boolean {
>     prompt "Support Cirrus Logic EDB9307A" if [ARCH_EP93XX && EP93XX_SDCE0_PHYS_OFFSET]
>     depends on [EP93XX_SDCE0_PHYS_OFFSET]
>     select MACH_EDB93XX if [ARCH_EP93XX && EP93XX_SDCE0_PHYS_OFFSET]
>     inherited [ARCH_EP93XX && EP93XX_SDCE0_PHYS_OFFSET]
>    }
>    config MACH_EDB9312 boolean {
>     prompt "Support Cirrus Logic EDB9312" if [ARCH_EP93XX && EP93XX_SDCE3_SYNC_PHYS_OFFSET]
>     depends on [EP93XX_SDCE3_SYNC_PHYS_OFFSET]
>     select MACH_EDB93XX if [ARCH_EP93XX && EP93XX_SDCE3_SYNC_PHYS_OFFSET]
>     inherited [ARCH_EP93XX && EP93XX_SDCE3_SYNC_PHYS_OFFSET]
>    }
>    config MACH_EDB9315 boolean {
>     prompt "Support Cirrus Logic EDB9315" if [ARCH_EP93XX && EP93XX_SDCE3_SYNC_PHYS_OFFSET]
>     depends on [EP93XX_SDCE3_SYNC_PHYS_OFFSET]
>     select MACH_EDB93XX if [ARCH_EP93XX && EP93XX_SDCE3_SYNC_PHYS_OFFSET]
>     inherited [ARCH_EP93XX && EP93XX_SDCE3_SYNC_PHYS_OFFSET]
>    }
>    config MACH_EDB9315A boolean {
>     prompt "Support Cirrus Logic EDB9315A" if [ARCH_EP93XX && EP93XX_SDCE0_PHYS_OFFSET]
>     depends on [EP93XX_SDCE0_PHYS_OFFSET]
>     select MACH_EDB93XX if [ARCH_EP93XX && EP93XX_SDCE0_PHYS_OFFSET]
>     inherited [ARCH_EP93XX && EP93XX_SDCE0_PHYS_OFFSET]
>    }
>    config MACH_GESBC9312 boolean {
>     depends on [EP93XX_SDCE3_SYNC_PHYS_OFFSET]
>     prompt "Support Glomation GESBC-9312-sx" if [ARCH_EP93XX && EP93XX_SDCE3_SYNC_PHYS_OFFSET]
>     inherited [ARCH_EP93XX && EP93XX_SDCE3_SYNC_PHYS_OFFSET]
>    }
>    config MACH_MICRO9 boolean {
>     inherited [ARCH_EP93XX]
>    }
>    config MACH_MICRO9H boolean {
>     prompt "Support Contec Micro9-High" if [ARCH_EP93XX && EP93XX_SDCE3_SYNC_PHYS_OFFSET]
>     depends on [EP93XX_SDCE3_SYNC_PHYS_OFFSET]
>     select MACH_MICRO9 if [ARCH_EP93XX && EP93XX_SDCE3_SYNC_PHYS_OFFSET]
>     inherited [ARCH_EP93XX && EP93XX_SDCE3_SYNC_PHYS_OFFSET]
>    }
>    config MACH_MICRO9M boolean {
>     prompt "Support Contec Micro9-Mid" if [ARCH_EP93XX && EP93XX_SDCE3_ASYNC_PHYS_OFFSET]
>     depends on [EP93XX_SDCE3_ASYNC_PHYS_OFFSET]
>     select MACH_MICRO9 if [ARCH_EP93XX && EP93XX_SDCE3_ASYNC_PHYS_OFFSET]
>     inherited [ARCH_EP93XX && EP93XX_SDCE3_ASYNC_PHYS_OFFSET]
>    }
>    config MACH_MICRO9L boolean {
>     prompt "Support Contec Micro9-Lite" if [ARCH_EP93XX && EP93XX_SDCE3_SYNC_PHYS_OFFSET]
>     depends on [EP93XX_SDCE3_SYNC_PHYS_OFFSET]
>     select MACH_MICRO9 if [ARCH_EP93XX && EP93XX_SDCE3_SYNC_PHYS_OFFSET]
>     inherited [ARCH_EP93XX && EP93XX_SDCE3_SYNC_PHYS_OFFSET]
>    }
>    config MACH_MICRO9S boolean {
>     prompt "Support Contec Micro9-Slim" if [ARCH_EP93XX && EP93XX_SDCE3_ASYNC_PHYS_OFFSET]
>     depends on [EP93XX_SDCE3_ASYNC_PHYS_OFFSET]
>     select MACH_MICRO9 if [ARCH_EP93XX && EP93XX_SDCE3_ASYNC_PHYS_OFFSET]
>     inherited [ARCH_EP93XX && EP93XX_SDCE3_ASYNC_PHYS_OFFSET]
>    }
>    config MACH_TS72XX boolean {
>     prompt "Support Technologic Systems TS-72xx SBC" if [ARCH_EP93XX && EP93XX_SDCE3_SYNC_PHYS_OFFSET]
>     depends on [EP93XX_SDCE3_SYNC_PHYS_OFFSET]
>     inherited [ARCH_EP93XX && EP93XX_SDCE3_SYNC_PHYS_OFFSET]
>    }
>    choice boolean {
>     prompt "Select a UART for early kernel messages" if [ARCH_EP93XX]
>     config EP93XX_EARLY_UART1 boolean {
>      prompt "UART1" if [<choice>]
>      inherited [<choice>]
>     }
>     config EP93XX_EARLY_UART2 boolean {
>      prompt "UART2" if [<choice>]
>      inherited [<choice>]
>     }
>     config EP93XX_EARLY_UART3 boolean {
>      prompt "UART3" if [<choice>]
>      inherited [<choice>]
>     }
>    }
>   }
2519,2522c2291,2586
<  config PM_SLEEP boolean {
<   depends on [SUSPEND || HIBERNATION || XEN_SAVE_RESTORE]
<   default [y] if [SUSPEND || HIBERNATION || XEN_SAVE_RESTORE]
<   inherited [SUSPEND || HIBERNATION || XEN_SAVE_RESTORE]
---
>  if [ARCH_FOOTBRIDGE] {
>   menu "Footbridge Implementations" {
>    depends on [ARCH_FOOTBRIDGE]
>    config ARCH_CATS boolean {
>     prompt "CATS" if [ARCH_FOOTBRIDGE]
>     select FOOTBRIDGE_HOST if [ARCH_FOOTBRIDGE]
>     select ISA if [ARCH_FOOTBRIDGE]
>     select ISA_DMA if [ARCH_FOOTBRIDGE]
>     select PCI if [ARCH_FOOTBRIDGE]
>     inherited [ARCH_FOOTBRIDGE]
>    }
>    config ARCH_PERSONAL_SERVER boolean {
>     prompt "Compaq Personal Server" if [ARCH_FOOTBRIDGE]
>     select FOOTBRIDGE_HOST if [ARCH_FOOTBRIDGE]
>     select ISA if [ARCH_FOOTBRIDGE]
>     select ISA_DMA if [ARCH_FOOTBRIDGE]
>     select PCI if [ARCH_FOOTBRIDGE]
>     inherited [ARCH_FOOTBRIDGE]
>    }
>    config ARCH_EBSA285_ADDIN boolean {
>     prompt "EBSA285 (addin mode)" if [ARCH_FOOTBRIDGE]
>     select ARCH_EBSA285 if [ARCH_FOOTBRIDGE]
>     select FOOTBRIDGE_ADDIN if [ARCH_FOOTBRIDGE]
>     inherited [ARCH_FOOTBRIDGE]
>    }
>    config ARCH_EBSA285_HOST boolean {
>     prompt "EBSA285 (host mode)" if [ARCH_FOOTBRIDGE]
>     select ARCH_EBSA285 if [ARCH_FOOTBRIDGE]
>     select FOOTBRIDGE_HOST if [ARCH_FOOTBRIDGE]
>     select ISA if [ARCH_FOOTBRIDGE]
>     select ISA_DMA if [ARCH_FOOTBRIDGE]
>     select PCI if [ARCH_FOOTBRIDGE]
>     inherited [ARCH_FOOTBRIDGE]
>    }
>    config ARCH_NETWINDER boolean {
>     prompt "NetWinder" if [ARCH_FOOTBRIDGE]
>     select FOOTBRIDGE_HOST if [ARCH_FOOTBRIDGE]
>     select ISA if [ARCH_FOOTBRIDGE]
>     select ISA_DMA if [ARCH_FOOTBRIDGE]
>     select PCI if [ARCH_FOOTBRIDGE]
>     inherited [ARCH_FOOTBRIDGE]
>    }
>   }
>   config FOOTBRIDGE boolean {
>    inherited [ARCH_FOOTBRIDGE]
>   }
>   config FOOTBRIDGE_HOST boolean {
>    inherited [ARCH_FOOTBRIDGE]
>   }
>   config FOOTBRIDGE_ADDIN boolean {
>    inherited [ARCH_FOOTBRIDGE]
>   }
>   config ARCH_EBSA285 boolean {
>    select ARCH_MAY_HAVE_PC_FDC if [ARCH_FOOTBRIDGE]
>    inherited [ARCH_FOOTBRIDGE]
>   }
>  }
>  if [ARCH_GEMINI] {
>   menu "Cortina Systems Gemini Implementations" {
>    depends on [ARCH_GEMINI]
>    config MACH_RUT100 boolean {
>     prompt "Teltonika RUT100" if [ARCH_GEMINI]
>     select GEMINI_MEM_SWAP if [ARCH_GEMINI]
>     inherited [ARCH_GEMINI]
>    }
>   }
>   config GEMINI_MEM_SWAP boolean {
>    prompt "Gemini memory is swapped" if [ARCH_GEMINI]
>    inherited [ARCH_GEMINI]
>   }
>  }
>  if [ARCH_H720X] {
>   menu "h720x Implementations" {
>    depends on [ARCH_H720X]
>    config ARCH_H7201 boolean {
>     prompt "gms30c7201" if [ARCH_H720X]
>     depends on [ARCH_H720X]
>     select CPU_H7201 if [ARCH_H720X]
>     inherited [ARCH_H720X]
>    }
>    config ARCH_H7202 boolean {
>     prompt "hms30c7202" if [ARCH_H720X]
>     select CPU_H7202 if [ARCH_H720X]
>     depends on [ARCH_H720X]
>     inherited [ARCH_H720X]
>    }
>   }
>   config CPU_H7201 boolean {
>    inherited [ARCH_H720X]
>   }
>   config CPU_H7202 boolean {
>    inherited [ARCH_H720X]
>   }
>   config H7202_SERIAL23 boolean {
>    depends on [CPU_H7202]
>    prompt "Use serial ports 2+3" if [ARCH_H720X && CPU_H7202]
>    inherited [ARCH_H720X && CPU_H7202]
>   }
>  }
>  if [ARCH_INTEGRATOR] {
>   menu "Integrator Options" {
>    depends on [ARCH_INTEGRATOR]
>    config ARCH_INTEGRATOR_AP boolean {
>     prompt "Support Integrator/AP and Integrator/PP2 platforms" if [ARCH_INTEGRATOR]
>     inherited [ARCH_INTEGRATOR]
>    }
>    config ARCH_INTEGRATOR_CP boolean {
>     prompt "Support Integrator/CP platform" if [ARCH_INTEGRATOR]
>     select ARCH_CINTEGRATOR if [ARCH_INTEGRATOR]
>     inherited [ARCH_INTEGRATOR]
>    }
>    config ARCH_CINTEGRATOR boolean {
>     inherited [ARCH_INTEGRATOR]
>    }
>    config INTEGRATOR_IMPD1 tristate {
>     prompt "Include support for Integrator/IM-PD1" if [ARCH_INTEGRATOR && ARCH_INTEGRATOR_AP]
>     depends on [ARCH_INTEGRATOR_AP]
>     inherited [ARCH_INTEGRATOR && ARCH_INTEGRATOR_AP]
>    }
>   }
>  }
>  if [ARCH_IOP32X] {
>   menu "IOP32x Implementation Options" {
>    depends on [ARCH_IOP32X]
>    config MACH_EP80219 boolean {
>     inherited [ARCH_IOP32X]
>    }
>    config MACH_GLANTANK boolean {
>     prompt "Enable support for the IO-Data GLAN Tank" if [ARCH_IOP32X]
>     inherited [ARCH_IOP32X]
>    }
>    config ARCH_IQ80321 boolean {
>     prompt "Enable support for IQ80321" if [ARCH_IOP32X]
>     inherited [ARCH_IOP32X]
>    }
>    config ARCH_IQ31244 boolean {
>     prompt "Enable support for EP80219/IQ31244" if [ARCH_IOP32X]
>     select MACH_EP80219 if [ARCH_IOP32X]
>     inherited [ARCH_IOP32X]
>    }
>    config MACH_N2100 boolean {
>     prompt "Enable support for the Thecus n2100" if [ARCH_IOP32X]
>     inherited [ARCH_IOP32X]
>    }
>    config MACH_EM7210 boolean {
>     prompt "Enable support for the Lanner EM7210" if [ARCH_IOP32X]
>     inherited [ARCH_IOP32X]
>    }
>   }
>  }
>  if [ARCH_IOP33X] {
>   menu "IOP33x Implementation Options" {
>    depends on [ARCH_IOP33X]
>    config ARCH_IQ80331 boolean {
>     prompt "Enable support for IQ80331" if [ARCH_IOP33X]
>     inherited [ARCH_IOP33X]
>    }
>    config MACH_IQ80332 boolean {
>     prompt "Enable support for IQ80332" if [ARCH_IOP33X]
>     inherited [ARCH_IOP33X]
>    }
>   }
>  }
>  if [ARCH_IOP13XX] {
>   menu "IOP13XX Implementation Options" {
>    depends on [ARCH_IOP13XX]
>    config MACH_IQ81340SC boolean {
>     prompt "Enable IQ81340SC Hardware Support" if [ARCH_IOP13XX]
>     inherited [ARCH_IOP13XX]
>    }
>    config MACH_IQ81340MC boolean {
>     prompt "Enable IQ81340MC Hardware Support" if [ARCH_IOP13XX]
>     inherited [ARCH_IOP13XX]
>    }
>   }
>  }
>  if [ARCH_IXP4XX] {
>   config ARCH_SUPPORTS_BIG_ENDIAN boolean {
>    default [y] if [ARCH_IXP4XX]
>    default [y] if [ARCH_IXP2000]
>    default [y] if [ARCH_IXP23XX]
>    inherited [ARCH_IXP4XX]
>   }
>   menu "Intel IXP4xx Implementation Options" {
>    depends on [ARCH_IXP4XX]
>    config MACH_NSLU2 boolean {
>     prompt "Linksys NSLU2" if [ARCH_IXP4XX]
>     select PCI if [ARCH_IXP4XX]
>     inherited [ARCH_IXP4XX]
>    }
>    config MACH_AVILA boolean {
>     prompt "Avila" if [ARCH_IXP4XX]
>     select PCI if [ARCH_IXP4XX]
>     inherited [ARCH_IXP4XX]
>     config MACH_LOFT boolean {
>      prompt "Loft" if [ARCH_IXP4XX && MACH_AVILA]
>      depends on [MACH_AVILA]
>      inherited [ARCH_IXP4XX && MACH_AVILA]
>     }
>    }
>    config ARCH_ADI_COYOTE boolean {
>     prompt "Coyote" if [ARCH_IXP4XX]
>     select PCI if [ARCH_IXP4XX]
>     inherited [ARCH_IXP4XX]
>    }
>    config MACH_GATEWAY7001 boolean {
>     prompt "Gateway 7001" if [ARCH_IXP4XX]
>     select PCI if [ARCH_IXP4XX]
>     inherited [ARCH_IXP4XX]
>    }
>    config MACH_WG302V2 boolean {
>     prompt "Netgear WG302 v2 / WAG302 v2" if [ARCH_IXP4XX]
>     select PCI if [ARCH_IXP4XX]
>     inherited [ARCH_IXP4XX]
>    }
>    config ARCH_IXDP425 boolean {
>     prompt "IXDP425" if [ARCH_IXP4XX]
>     inherited [ARCH_IXP4XX]
>    }
>    config MACH_IXDPG425 boolean {
>     prompt "IXDPG425" if [ARCH_IXP4XX]
>     inherited [ARCH_IXP4XX]
>    }
>    config MACH_IXDP465 boolean {
>     prompt "IXDP465" if [ARCH_IXP4XX]
>     inherited [ARCH_IXP4XX]
>    }
>    config MACH_GORAMO_MLR boolean {
>     prompt "GORAMO Multi Link Router" if [ARCH_IXP4XX]
>     inherited [ARCH_IXP4XX]
>    }
>    config MACH_KIXRP435 boolean {
>     prompt "KIXRP435" if [ARCH_IXP4XX]
>     inherited [ARCH_IXP4XX]
>    }
>    config ARCH_IXCDP1100 boolean {
>     depends on [ARCH_IXDP425]
>     default [y] if [ARCH_IXP4XX && ARCH_IXDP425]
>     inherited [ARCH_IXP4XX && ARCH_IXDP425]
>    }
>    config ARCH_PRPMC1100 boolean {
>     prompt "PrPMC1100" if [ARCH_IXP4XX]
>     inherited [ARCH_IXP4XX]
>    }
>    config MACH_NAS100D boolean {
>     prompt "NAS100D" if [ARCH_IXP4XX]
>     select PCI if [ARCH_IXP4XX]
>     inherited [ARCH_IXP4XX]
>    }
>    config MACH_DSMG600 boolean {
>     prompt "D-Link DSM-G600 RevA" if [ARCH_IXP4XX]
>     select PCI if [ARCH_IXP4XX]
>     inherited [ARCH_IXP4XX]
>    }
>    config ARCH_IXDP4XX boolean {
>     depends on [ARCH_IXDP425 || MACH_IXDP465 || MACH_KIXRP435]
>     default [y] if [ARCH_IXP4XX && (ARCH_IXDP425 || MACH_IXDP465 || MACH_KIXRP435)]
>     inherited [ARCH_IXP4XX && (ARCH_IXDP425 || MACH_IXDP465 || MACH_KIXRP435)]
>    }
>    config MACH_FSG boolean {
>     prompt "Freecom FSG-3" if [ARCH_IXP4XX]
>     select PCI if [ARCH_IXP4XX]
>     inherited [ARCH_IXP4XX]
>    }
>    config CPU_IXP46X boolean {
>     depends on [MACH_IXDP465]
>     default [y] if [ARCH_IXP4XX && MACH_IXDP465]
>     inherited [ARCH_IXP4XX && MACH_IXDP465]
>    }
>    config CPU_IXP43X boolean {
>     depends on [MACH_KIXRP435]
>     default [y] if [ARCH_IXP4XX && MACH_KIXRP435]
>     inherited [ARCH_IXP4XX && MACH_KIXRP435]
>    }
>    config MACH_GTWX5715 boolean {
>     prompt "Gemtek WX5715 (Linksys WRV54G)" if [ARCH_IXP4XX]
>     depends on [ARCH_IXP4XX]
>     select PCI if [ARCH_IXP4XX]
>     inherited [ARCH_IXP4XX]
>    }
>    config IXP4XX_INDIRECT_PCI boolean {
>     prompt "Use indirect PCI memory access" if [ARCH_IXP4XX && PCI]
>     depends on [PCI]
>     inherited [ARCH_IXP4XX && PCI]
>    }
>    config IXP4XX_QMGR tristate {
>     prompt "IXP4xx Queue Manager support" if [ARCH_IXP4XX]
>     inherited [ARCH_IXP4XX]
>    }
>    config IXP4XX_NPE tristate {
>     prompt "IXP4xx Network Processor Engine support" if [ARCH_IXP4XX]
>     select HOTPLUG if [ARCH_IXP4XX]
>     select FW_LOADER if [ARCH_IXP4XX]
>     inherited [ARCH_IXP4XX]
>    }
>   }
2524,2532c2588,2593
<  config SUSPEND boolean {
<   prompt "Suspend to RAM and standby" if [PM && ARCH_SUSPEND_POSSIBLE]
<   depends on [PM && ARCH_SUSPEND_POSSIBLE]
<   default [y] if [PM && ARCH_SUSPEND_POSSIBLE]
<   inherited [PM && ARCH_SUSPEND_POSSIBLE]
<   config PM_TEST_SUSPEND boolean {
<    prompt "Test suspend/resume and wakealarm during bootup" if [SUSPEND && PM_DEBUG && RTC_CLASS="y"]
<    depends on [SUSPEND && PM_DEBUG && RTC_CLASS="y"]
<    inherited [SUSPEND && PM_DEBUG && RTC_CLASS="y"]
---
>  if [ARCH_IXP2000] {
>   config ARCH_SUPPORTS_BIG_ENDIAN boolean {
>    default [y] if [ARCH_IXP4XX]
>    default [y] if [ARCH_IXP2000]
>    default [y] if [ARCH_IXP23XX]
>    inherited [ARCH_IXP2000]
2534,2538c2595,2636
<   config SUSPEND_FREEZER boolean {
<    prompt "Enable freezer for suspend to RAM/standby" if [SUSPEND && (ARCH_WANTS_FREEZER_CONTROL || BROKEN)]
<    depends on [SUSPEND]
<    default [y] if [SUSPEND]
<    inherited [SUSPEND]
---
>   menu "Intel IXP2400/2800 Implementation Options" {
>    depends on [ARCH_IXP2000]
>    config ARCH_ENP2611 boolean {
>     prompt "Support Radisys ENP-2611" if [ARCH_IXP2000]
>     inherited [ARCH_IXP2000]
>    }
>    config ARCH_IXDP2400 boolean {
>     prompt "Support Intel IXDP2400" if [ARCH_IXP2000]
>     inherited [ARCH_IXP2000]
>    }
>    config ARCH_IXDP2800 boolean {
>     prompt "Support Intel IXDP2800" if [ARCH_IXP2000]
>     inherited [ARCH_IXP2000]
>     config ARCH_IXDP2X00 boolean {
>      depends on [ARCH_IXDP2400 || ARCH_IXDP2800]
>      default [y] if [ARCH_IXP2000 && (ARCH_IXDP2400 || ARCH_IXDP2800)]
>      inherited [ARCH_IXP2000 && (ARCH_IXDP2400 || ARCH_IXDP2800)]
>     }
>    }
>    config ARCH_IXDP2401 boolean {
>     prompt "Support Intel IXDP2401" if [ARCH_IXP2000]
>     inherited [ARCH_IXP2000]
>    }
>    config ARCH_IXDP2801 boolean {
>     prompt "Support Intel IXDP2801 and IXDP28x5" if [ARCH_IXP2000]
>     inherited [ARCH_IXP2000]
>     config MACH_IXDP28X5 boolean {
>      depends on [ARCH_IXDP2801]
>      default [y] if [ARCH_IXP2000 && ARCH_IXDP2801]
>      inherited [ARCH_IXP2000 && ARCH_IXDP2801]
>     }
>     config ARCH_IXDP2X01 boolean {
>      depends on [ARCH_IXDP2401 || ARCH_IXDP2801]
>      default [y] if [ARCH_IXP2000 && (ARCH_IXDP2401 || ARCH_IXDP2801)]
>      inherited [ARCH_IXP2000 && (ARCH_IXDP2401 || ARCH_IXDP2801)]
>     }
>    }
>    config IXP2000_SUPPORT_BROKEN_PCI_IO boolean {
>     prompt "Support broken PCI I/O on older IXP2000s" if [ARCH_IXP2000]
>     default [y] if [ARCH_IXP2000]
>     inherited [ARCH_IXP2000]
>    }
2541,2552c2639,2659
<  config HIBERNATION_NVS boolean {
<  }
<  config HIBERNATION boolean {
<   prompt "Hibernation (aka 'suspend to disk')" if [PM && SWAP && ARCH_HIBERNATION_POSSIBLE]
<   depends on [PM && SWAP && ARCH_HIBERNATION_POSSIBLE]
<   select HIBERNATION_NVS if [PM && SWAP && ARCH_HIBERNATION_POSSIBLE && HAS_IOMEM]
<   inherited [PM && SWAP && ARCH_HIBERNATION_POSSIBLE]
<   config PM_STD_PARTITION string {
<    prompt "Default resume partition" if [HIBERNATION]
<    depends on [HIBERNATION]
<    default [""] if [HIBERNATION]
<    inherited [HIBERNATION]
---
>  if [ARCH_IXP23XX] {
>   config ARCH_SUPPORTS_BIG_ENDIAN boolean {
>    default [y] if [ARCH_IXP4XX]
>    default [y] if [ARCH_IXP2000]
>    default [y] if [ARCH_IXP23XX]
>    inherited [ARCH_IXP23XX]
>   }
>   menu "Intel IXP23xx Implementation Options" {
>    depends on [ARCH_IXP23XX]
>    config MACH_ESPRESSO boolean {
>     prompt "Support IP Fabrics Double Espresso platform" if [ARCH_IXP23XX]
>     inherited [ARCH_IXP23XX]
>    }
>    config MACH_IXDP2351 boolean {
>     prompt "Support Intel IXDP2351 platform" if [ARCH_IXP23XX]
>     inherited [ARCH_IXP23XX]
>    }
>    config MACH_ROADRUNNER boolean {
>     prompt "Support ADI RoadRunner platform" if [ARCH_IXP23XX]
>     inherited [ARCH_IXP23XX]
>    }
2555,2579c2662,2667
<  config APM_EMULATION tristate {
<   prompt "Advanced Power Management Emulation" if [PM && SYS_SUPPORTS_APM_EMULATION]
<   depends on [PM && SYS_SUPPORTS_APM_EMULATION]
<   inherited [PM && SYS_SUPPORTS_APM_EMULATION]
<  }
<  config PM_RUNTIME boolean {
<   prompt "Run-time PM core functionality" if [PM]
<   depends on [PM]
<   inherited [PM]
<  }
<  menuconfig ACPI boolean {
<   prompt "ACPI (Advanced Configuration and Power Interface) Support" if [!IA64_HP_SIM && (IA64 || X86) && PCI && PM]
<   depends on [!IA64_HP_SIM]
<   depends on [IA64 || X86]
<   depends on [PCI]
<   depends on [PM]
<   select PNP if [!IA64_HP_SIM && (IA64 || X86) && PCI && PM]
<   select CPU_IDLE if [!IA64_HP_SIM && (IA64 || X86) && PCI && PM]
<   default [y] if [!IA64_HP_SIM && (IA64 || X86) && PCI && PM]
<   inherited [!IA64_HP_SIM && (IA64 || X86) && PCI && PM]
<   if [ACPI] {
<    config ACPI_SLEEP boolean {
<     depends on [SUSPEND || HIBERNATION]
<     default [y] if [ACPI && (SUSPEND || HIBERNATION)]
<     inherited [ACPI && (SUSPEND || HIBERNATION)]
---
>  if [ARCH_KIRKWOOD] {
>   menu "Marvell Kirkwood Implementations" {
>    depends on [ARCH_KIRKWOOD]
>    config MACH_DB88F6281_BP boolean {
>     prompt "Marvell DB-88F6281-BP Development Board" if [ARCH_KIRKWOOD]
>     inherited [ARCH_KIRKWOOD]
2581,2584c2669,2671
<    config ACPI_PROCFS boolean {
<     prompt "Deprecated /proc/acpi files" if [ACPI && PROC_FS]
<     depends on [PROC_FS]
<     inherited [ACPI && PROC_FS]
---
>    config MACH_RD88F6192_NAS boolean {
>     prompt "Marvell RD-88F6192-NAS Reference Board" if [ARCH_KIRKWOOD]
>     inherited [ARCH_KIRKWOOD]
2586,2590c2673,2675
<    config ACPI_PROCFS_POWER boolean {
<     prompt "Deprecated power /proc/acpi directories" if [ACPI && PROC_FS]
<     depends on [PROC_FS]
<     default [y] if [ACPI && PROC_FS]
<     inherited [ACPI && PROC_FS]
---
>    config MACH_RD88F6281 boolean {
>     prompt "Marvell RD-88F6281 Reference Board" if [ARCH_KIRKWOOD]
>     inherited [ARCH_KIRKWOOD]
2592,2601c2677,2679
<    config ACPI_POWER_METER tristate {
<     prompt "ACPI 4.0 power meter" if [ACPI && HWMON]
<     depends on [HWMON]
<     inherited [ACPI && HWMON]
<    }
<    config ACPI_SYSFS_POWER boolean {
<     prompt "Future power /sys interface" if [ACPI]
<     select POWER_SUPPLY if [ACPI]
<     default [y] if [ACPI]
<     inherited [ACPI]
---
>    config MACH_MV88F6281GTW_GE boolean {
>     prompt "Marvell 88F6281 GTW GE Board" if [ARCH_KIRKWOOD]
>     inherited [ARCH_KIRKWOOD]
2603,2607c2681,2683
<    config ACPI_PROC_EVENT boolean {
<     prompt "Deprecated /proc/acpi/event support" if [ACPI && PROC_FS]
<     depends on [PROC_FS]
<     default [y] if [ACPI && PROC_FS]
<     inherited [ACPI && PROC_FS]
---
>    config MACH_SHEEVAPLUG boolean {
>     prompt "Marvell SheevaPlug Reference Board" if [ARCH_KIRKWOOD]
>     inherited [ARCH_KIRKWOOD]
2609,2613c2685,2687
<    config ACPI_AC tristate {
<     prompt "AC Adapter" if [ACPI && X86]
<     depends on [X86]
<     default [y] if [ACPI && X86]
<     inherited [ACPI && X86]
---
>    config MACH_TS219 boolean {
>     prompt "QNAP TS-110, TS-119, TS-210, TS-219 and TS-219P Turbo NAS" if [ARCH_KIRKWOOD]
>     inherited [ARCH_KIRKWOOD]
2615,2619c2689,2691
<    config ACPI_BATTERY tristate {
<     prompt "Battery" if [ACPI && X86]
<     depends on [X86]
<     default [y] if [ACPI && X86]
<     inherited [ACPI && X86]
---
>    config MACH_TS41X boolean {
>     prompt "QNAP TS-410, TS-410U, TS-419P and TS-419U Turbo NAS" if [ARCH_KIRKWOOD]
>     inherited [ARCH_KIRKWOOD]
2621,2625c2693,2695
<    config ACPI_BUTTON tristate {
<     prompt "Button" if [ACPI && INPUT]
<     depends on [INPUT]
<     default [y] if [ACPI && INPUT]
<     inherited [ACPI && INPUT]
---
>    config MACH_OPENRD_BASE boolean {
>     prompt "Marvell OpenRD Base Board" if [ARCH_KIRKWOOD]
>     inherited [ARCH_KIRKWOOD]
2627,2632c2697,2699
<    config ACPI_VIDEO tristate {
<     prompt "Video" if [ACPI && X86 && BACKLIGHT_CLASS_DEVICE && VIDEO_OUTPUT_CONTROL && INPUT]
<     depends on [X86 && BACKLIGHT_CLASS_DEVICE && VIDEO_OUTPUT_CONTROL]
<     depends on [INPUT]
<     select THERMAL if [ACPI && X86 && BACKLIGHT_CLASS_DEVICE && VIDEO_OUTPUT_CONTROL && INPUT]
<     inherited [ACPI && X86 && BACKLIGHT_CLASS_DEVICE && VIDEO_OUTPUT_CONTROL && INPUT]
---
>    config MACH_NETSPACE_V2 boolean {
>     prompt "LaCie Network Space v2 NAS Board" if [ARCH_KIRKWOOD]
>     inherited [ARCH_KIRKWOOD]
2634,2638c2701,2708
<    config ACPI_FAN tristate {
<     prompt "Fan" if [ACPI]
<     select THERMAL if [ACPI]
<     default [y] if [ACPI]
<     inherited [ACPI]
---
>   }
>  }
>  if [ARCH_KS8695] {
>   menu "Kendin/Micrel KS8695 Implementations" {
>    depends on [ARCH_KS8695]
>    config MACH_KS8695 boolean {
>     prompt "KS8695 development board" if [ARCH_KS8695]
>     inherited [ARCH_KS8695]
2640,2643c2710,2712
<    config ACPI_DOCK boolean {
<     prompt "Dock" if [ACPI && EXPERIMENTAL]
<     depends on [EXPERIMENTAL]
<     inherited [ACPI && EXPERIMENTAL]
---
>    config MACH_DSM320 boolean {
>     prompt "DSM-320 Wireless Media Player" if [ARCH_KS8695]
>     inherited [ARCH_KS8695]
2645,2702c2714,2716
<    config ACPI_PROCESSOR tristate {
<     prompt "Processor" if [ACPI]
<     select THERMAL if [ACPI]
<     default [y] if [ACPI]
<     inherited [ACPI]
<     config ACPI_HOTPLUG_CPU boolean {
<      depends on [ACPI_PROCESSOR && HOTPLUG_CPU]
<      select ACPI_CONTAINER if [ACPI && ACPI_PROCESSOR && HOTPLUG_CPU]
<      default [y] if [ACPI && ACPI_PROCESSOR && HOTPLUG_CPU]
<      inherited [ACPI && ACPI_PROCESSOR && HOTPLUG_CPU]
<     }
<     config ACPI_PROCESSOR_AGGREGATOR tristate {
<      prompt "Processor Aggregator" if [ACPI && ACPI_PROCESSOR && EXPERIMENTAL && X86]
<      depends on [ACPI_PROCESSOR]
<      depends on [EXPERIMENTAL]
<      depends on [X86]
<      inherited [ACPI && ACPI_PROCESSOR && EXPERIMENTAL && X86]
<     }
<     config ACPI_THERMAL tristate {
<      prompt "Thermal Zone" if [ACPI && ACPI_PROCESSOR]
<      depends on [ACPI_PROCESSOR]
<      select THERMAL if [ACPI && ACPI_PROCESSOR]
<      default [y] if [ACPI && ACPI_PROCESSOR]
<      inherited [ACPI && ACPI_PROCESSOR]
<     }
<    }
<    config ACPI_NUMA boolean {
<     prompt "NUMA support" if [ACPI && NUMA && (X86 || IA64)]
<     depends on [NUMA]
<     depends on [X86 || IA64]
<     default [y] if [ACPI && NUMA && (X86 || IA64) && (IA64_GENERIC || IA64_SGI_SN2)]
<     inherited [ACPI && NUMA && (X86 || IA64)]
<    }
<    config ACPI_CUSTOM_DSDT_FILE string {
<     prompt "Custom DSDT Table file to include" if [ACPI && !STANDALONE]
<     default [""] if [ACPI && !STANDALONE]
<     depends on [!STANDALONE]
<     inherited [ACPI && !STANDALONE]
<    }
<    config ACPI_CUSTOM_DSDT boolean {
<     default [ACPI_CUSTOM_DSDT_FILE!=""] if [ACPI]
<     inherited [ACPI]
<    }
<    config ACPI_BLACKLIST_YEAR integer {
<     prompt "Disable ACPI for systems before Jan 1st this year" if [ACPI && X86_32]
<     default [0] if [ACPI]
<     inherited [ACPI]
<    }
<    config ACPI_DEBUG boolean {
<     prompt "Debug Statements" if [ACPI]
<     default [n] if [ACPI]
<     inherited [ACPI]
<     config ACPI_DEBUG_FUNC_TRACE boolean {
<      prompt "Additionally enable ACPI function tracing" if [ACPI && ACPI_DEBUG]
<      default [n] if [ACPI && ACPI_DEBUG]
<      depends on [ACPI_DEBUG]
<      inherited [ACPI && ACPI_DEBUG]
<     }
---
>    config MACH_ACS5K boolean {
>     prompt "Brivo Systems LLC, ACS-5000 Master board" if [ARCH_KS8695]
>     inherited [ARCH_KS8695]
2704,2708c2718,2726
<    config ACPI_PCI_SLOT tristate {
<     prompt "PCI slot detection driver" if [ACPI && SYSFS]
<     depends on [SYSFS]
<     default [n] if [ACPI && SYSFS]
<     inherited [ACPI && SYSFS]
---
>   }
>  }
>  if [ARCH_LH7A40X] {
>   menu "LH7A40X Implementations" {
>    depends on [ARCH_LH7A40X]
>    config MACH_KEV7A400 boolean {
>     prompt "KEV7A400" if [ARCH_LH7A40X]
>     select ARCH_LH7A400 if [ARCH_LH7A40X]
>     inherited [ARCH_LH7A40X]
2710,2714c2728,2731
<    config X86_PM_TIMER boolean {
<     prompt "Power Management Timer Support" if [ACPI && X86 && EMBEDDED]
<     depends on [X86]
<     default [y] if [ACPI && X86]
<     inherited [ACPI && X86]
---
>    config MACH_LPD7A400 boolean {
>     prompt "LPD7A400 Card Engine" if [ARCH_LH7A40X]
>     select ARCH_LH7A400 if [ARCH_LH7A40X]
>     inherited [ARCH_LH7A40X]
2716,2720c2733,2736
<    config ACPI_CONTAINER tristate {
<     prompt "Container and Module Devices (EXPERIMENTAL)" if [ACPI && EXPERIMENTAL]
<     depends on [EXPERIMENTAL]
<     default [ACPI_HOTPLUG_MEMORY || ACPI_HOTPLUG_CPU || ACPI_HOTPLUG_IO] if [ACPI && EXPERIMENTAL]
<     inherited [ACPI && EXPERIMENTAL]
---
>    config MACH_LPD7A404 boolean {
>     prompt "LPD7A404 Card Engine" if [ARCH_LH7A40X]
>     select ARCH_LH7A404 if [ARCH_LH7A40X]
>     inherited [ARCH_LH7A40X]
2722,2726c2738,2739
<    config ACPI_HOTPLUG_MEMORY tristate {
<     prompt "Memory Hotplug" if [ACPI && MEMORY_HOTPLUG]
<     depends on [MEMORY_HOTPLUG]
<     default [n] if [ACPI && MEMORY_HOTPLUG]
<     inherited [ACPI && MEMORY_HOTPLUG]
---
>    config ARCH_LH7A400 boolean {
>     inherited [ARCH_LH7A40X]
2728,2731c2741,2754
<    config ACPI_SBS tristate {
<     prompt "Smart Battery System" if [ACPI && X86]
<     depends on [X86]
<     inherited [ACPI && X86]
---
>    config ARCH_LH7A404 boolean {
>     inherited [ARCH_LH7A40X]
>    }
>    config LPD7A40X_CPLD_SSP boolean {
>     inherited [ARCH_LH7A40X]
>    }
>    config LH7A40X_CONTIGMEM boolean {
>     prompt "Disable NUMA/SparseMEM Support" if [ARCH_LH7A40X]
>     inherited [ARCH_LH7A40X]
>     config LH7A40X_ONE_BANK_PER_NODE boolean {
>      prompt "Optimize NUMA Node Tables for Size" if [ARCH_LH7A40X && !LH7A40X_CONTIGMEM]
>      depends on [!LH7A40X_CONTIGMEM]
>      inherited [ARCH_LH7A40X && !LH7A40X_CONTIGMEM]
>     }
2735,2741c2758,2765
<  menuconfig SFI boolean {
<   prompt "SFI (Simple Firmware Interface) Support" if []
<  }
<  config X86_APM_BOOT boolean {
<   default [y] if [APM || APM_MODULE]
<   depends on [APM || APM_MODULE]
<   inherited [APM || APM_MODULE]
---
>  if [ARCH_LOKI] {
>   menu "Marvell Loki (88RC8480) Implementations" {
>    depends on [ARCH_LOKI]
>    config MACH_LB88RC8480 boolean {
>     prompt "Marvell LB88RC8480 Development Board" if [ARCH_LOKI]
>     inherited [ARCH_LOKI]
>    }
>   }
2743,2750c2767,2779
<  menuconfig APM tristate {
<   prompt "APM (Advanced Power Management) BIOS support" if [X86_32 && PM_SLEEP]
<   depends on [X86_32 && PM_SLEEP]
<   inherited [X86_32 && PM_SLEEP]
<   if [APM] {
<    config APM_IGNORE_USER_SUSPEND boolean {
<     prompt "Ignore USER SUSPEND" if [APM]
<     inherited [APM]
---
>  if [ARCH_MSM] {
>   config MSM_DEBUG_UART integer {
>    default [1] if [ARCH_MSM && MSM_DEBUG_UART1]
>    default [2] if [ARCH_MSM && MSM_DEBUG_UART2]
>    default [3] if [ARCH_MSM && MSM_DEBUG_UART3]
>    inherited [ARCH_MSM]
>   }
>   choice boolean {
>    prompt "Debug UART" if [ARCH_MSM]
>    default [MSM_DEBUG_UART_NONE] if [ARCH_MSM]
>    config MSM_DEBUG_UART_NONE boolean {
>     prompt "None" if [<choice>]
>     inherited [<choice>]
2752,2754c2781,2783
<    config APM_DO_ENABLE boolean {
<     prompt "Enable PM at boot time" if [APM]
<     inherited [APM]
---
>    config MSM_DEBUG_UART1 boolean {
>     prompt "UART1" if [<choice>]
>     inherited [<choice>]
2756,2758c2785,2787
<    config APM_CPU_IDLE boolean {
<     prompt "Make CPU Idle calls when idle" if [APM]
<     inherited [APM]
---
>    config MSM_DEBUG_UART2 boolean {
>     prompt "UART2" if [<choice>]
>     inherited [<choice>]
2760,2762c2789,2791
<    config APM_DISPLAY_BLANK boolean {
<     prompt "Enable console blanking using APM" if [APM]
<     inherited [APM]
---
>    config MSM_DEBUG_UART3 boolean {
>     prompt "UART3" if [<choice>]
>     inherited [<choice>]
2764,2766c2793,2815
<    config APM_ALLOW_INTS boolean {
<     prompt "Allow interrupts during APM BIOS calls" if [APM]
<     inherited [APM]
---
>   }
>   config MACH_HALIBUT boolean {
>    depends on [ARCH_MSM]
>    default [y] if [ARCH_MSM]
>    prompt "Halibut Board (QCT SURF7201A)" if [ARCH_MSM]
>    inherited [ARCH_MSM]
>   }
>   config MACH_TROUT boolean {
>    default [y] if [ARCH_MSM]
>    prompt "HTC Dream (aka trout)" if [ARCH_MSM]
>    inherited [ARCH_MSM]
>   }
>  }
>  if [ARCH_MV78XX0] {
>   menu "Marvell MV78xx0 Implementations" {
>    depends on [ARCH_MV78XX0]
>    config MACH_DB78X00_BP boolean {
>     prompt "Marvell DB-78x00-BP Development Board" if [ARCH_MV78XX0]
>     inherited [ARCH_MV78XX0]
>    }
>    config MACH_RD78X00_MASA boolean {
>     prompt "Marvell RD-78x00-mASA Reference Design" if [ARCH_MV78XX0]
>     inherited [ARCH_MV78XX0]
2770,2775c2819,2829
<  menu "CPU Frequency scaling" {
<   config CPU_FREQ boolean {
<    prompt "CPU Frequency scaling" if []
<    if [CPU_FREQ] {
<     config CPU_FREQ_TABLE tristate {
<      inherited [CPU_FREQ]
---
>  if [ARCH_MXC] {
>   menu "Freescale MXC Implementations" {
>    depends on [ARCH_MXC]
>    choice boolean {
>     prompt "Freescale CPU family:" if [ARCH_MXC]
>     default [ARCH_MX3] if [ARCH_MXC]
>     config ARCH_MX1 boolean {
>      prompt "MX1-based" if [<choice>]
>      select CPU_ARM920T if [<choice>]
>      select COMMON_CLKDEV if [<choice>]
>      inherited [<choice>]
2777,2779c2831,2835
<     config CPU_FREQ_DEBUG boolean {
<      prompt "Enable CPUfreq debugging" if [CPU_FREQ]
<      inherited [CPU_FREQ]
---
>     config ARCH_MX2 boolean {
>      prompt "MX2-based" if [<choice>]
>      select CPU_ARM926T if [<choice>]
>      select COMMON_CLKDEV if [<choice>]
>      inherited [<choice>]
2781,2790c2837,2867
<     config CPU_FREQ_STAT tristate {
<      prompt "CPU frequency translation statistics" if [CPU_FREQ]
<      select CPU_FREQ_TABLE if [CPU_FREQ]
<      default [y] if [CPU_FREQ]
<      inherited [CPU_FREQ]
<      config CPU_FREQ_STAT_DETAILS boolean {
<       prompt "CPU frequency translation statistics details" if [CPU_FREQ && CPU_FREQ_STAT]
<       depends on [CPU_FREQ_STAT]
<       inherited [CPU_FREQ && CPU_FREQ_STAT]
<      }
---
>     config ARCH_MX25 boolean {
>      prompt "MX25-based" if [<choice>]
>      select CPU_ARM926T if [<choice>]
>      select COMMON_CLKDEV if [<choice>]
>      inherited [<choice>]
>     }
>     config ARCH_MX3 boolean {
>      prompt "MX3-based" if [<choice>]
>      select CPU_V6 if [<choice>]
>      select COMMON_CLKDEV if [<choice>]
>      inherited [<choice>]
>     }
>     config ARCH_MXC91231 boolean {
>      prompt "MXC91231-based" if [<choice>]
>      select CPU_V6 if [<choice>]
>      select COMMON_CLKDEV if [<choice>]
>      inherited [<choice>]
>     }
>    }
>    if [ARCH_MXC && ARCH_MX1] {
>     config MACH_MXLADS boolean {
>      inherited [ARCH_MXC && ARCH_MX1]
>     }
>     config ARCH_MX1ADS boolean {
>      prompt "MX1ADS platform" if [ARCH_MXC && ARCH_MX1]
>      select MACH_MXLADS if [ARCH_MXC && ARCH_MX1]
>      inherited [ARCH_MXC && ARCH_MX1]
>     }
>     config MACH_SCB9328 boolean {
>      prompt "Synertronixx scb9328" if [ARCH_MXC && ARCH_MX1]
>      inherited [ARCH_MXC && ARCH_MX1]
2791a2869,2870
>    }
>    if [ARCH_MXC && ARCH_MX2] {
2793,2798c2872,2876
<      prompt "Default CPUFreq governor" if [CPU_FREQ]
<      default [CPU_FREQ_DEFAULT_GOV_USERSPACE] if [CPU_FREQ && (CPU_FREQ_SA1100 || CPU_FREQ_SA1110)]
<      default [CPU_FREQ_DEFAULT_GOV_PERFORMANCE] if [CPU_FREQ]
<      config CPU_FREQ_DEFAULT_GOV_PERFORMANCE boolean {
<       prompt "performance" if [<choice>]
<       select CPU_FREQ_GOV_PERFORMANCE if [<choice>]
---
>      prompt "CPUs:" if [ARCH_MXC && ARCH_MX2]
>      default [MACH_MX21] if [ARCH_MXC && ARCH_MX2]
>      config MACH_MX21 boolean {
>       prompt "i.MX21 support" if [<choice>]
>       select ARCH_MXC_AUDMUX_V1 if [<choice>]
2801,2809c2879,2881
<      config CPU_FREQ_DEFAULT_GOV_POWERSAVE boolean {
<       prompt "powersave" if [<choice> && EMBEDDED]
<       depends on [EMBEDDED]
<       select CPU_FREQ_GOV_POWERSAVE if [<choice> && EMBEDDED]
<       inherited [<choice> && EMBEDDED]
<      }
<      config CPU_FREQ_DEFAULT_GOV_USERSPACE boolean {
<       prompt "userspace" if [<choice>]
<       select CPU_FREQ_GOV_USERSPACE if [<choice>]
---
>      config MACH_MX27 boolean {
>       prompt "i.MX27 support" if [<choice>]
>       select ARCH_MXC_AUDMUX_V1 if [<choice>]
2812,2822c2884,2906
<      config CPU_FREQ_DEFAULT_GOV_ONDEMAND boolean {
<       prompt "ondemand" if [<choice>]
<       select CPU_FREQ_GOV_ONDEMAND if [<choice>]
<       select CPU_FREQ_GOV_PERFORMANCE if [<choice>]
<       inherited [<choice>]
<      }
<      config CPU_FREQ_DEFAULT_GOV_CONSERVATIVE boolean {
<       prompt "conservative" if [<choice>]
<       select CPU_FREQ_GOV_CONSERVATIVE if [<choice>]
<       select CPU_FREQ_GOV_PERFORMANCE if [<choice>]
<       inherited [<choice>]
---
>     }
>     config MACH_MX21ADS boolean {
>      prompt "MX21ADS platform" if [ARCH_MXC && ARCH_MX2 && MACH_MX21]
>      depends on [MACH_MX21]
>      inherited [ARCH_MXC && ARCH_MX2 && MACH_MX21]
>     }
>     config MACH_MX27ADS boolean {
>      prompt "MX27ADS platform" if [ARCH_MXC && ARCH_MX2 && MACH_MX27]
>      depends on [MACH_MX27]
>      inherited [ARCH_MXC && ARCH_MX2 && MACH_MX27]
>     }
>     config MACH_PCM038 boolean {
>      prompt "Phytec phyCORE-i.MX27 CPU module (pcm038)" if [ARCH_MXC && ARCH_MX2 && MACH_MX27]
>      depends on [MACH_MX27]
>      inherited [ARCH_MXC && ARCH_MX2 && MACH_MX27]
>      choice boolean {
>       prompt "Baseboard" if [ARCH_MXC && ARCH_MX2 && MACH_PCM038]
>       depends on [MACH_PCM038]
>       default [MACH_PCM970_BASEBOARD] if [ARCH_MXC && ARCH_MX2 && MACH_PCM038]
>       config MACH_PCM970_BASEBOARD boolean {
>        prompt "PHYTEC PCM970 development board" if [<choice>]
>        inherited [<choice>]
>       }
2825,2827c2909,2926
<     config CPU_FREQ_GOV_PERFORMANCE tristate {
<      prompt "'performance' governor" if [CPU_FREQ]
<      inherited [CPU_FREQ]
---
>     config MACH_EUKREA_CPUIMX27 boolean {
>      prompt "Eukrea CPUIMX27 module" if [ARCH_MXC && ARCH_MX2 && MACH_MX27]
>      depends on [MACH_MX27]
>      inherited [ARCH_MXC && ARCH_MX2 && MACH_MX27]
>      config MACH_EUKREA_CPUIMX27_USESDHC2 boolean {
>       prompt "CPUIMX27 integrates SDHC2 module" if [ARCH_MXC && ARCH_MX2 && MACH_EUKREA_CPUIMX27]
>       depends on [MACH_EUKREA_CPUIMX27]
>       inherited [ARCH_MXC && ARCH_MX2 && MACH_EUKREA_CPUIMX27]
>      }
>      choice boolean {
>       prompt "Baseboard" if [ARCH_MXC && ARCH_MX2 && MACH_EUKREA_CPUIMX27]
>       depends on [MACH_EUKREA_CPUIMX27]
>       default [MACH_EUKREA_MBIMX27_BASEBOARD] if [ARCH_MXC && ARCH_MX2 && MACH_EUKREA_CPUIMX27]
>       config MACH_EUKREA_MBIMX27_BASEBOARD boolean {
>        prompt "Eukrea MBIMX27 development board" if [<choice>]
>        inherited [<choice>]
>       }
>      }
2829,2831c2928,3174
<     config CPU_FREQ_GOV_POWERSAVE tristate {
<      prompt "'powersave' governor" if [CPU_FREQ]
<      inherited [CPU_FREQ]
---
>     config MACH_MX27_3DS boolean {
>      prompt "MX27PDK platform" if [ARCH_MXC && ARCH_MX2 && MACH_MX27]
>      depends on [MACH_MX27]
>      inherited [ARCH_MXC && ARCH_MX2 && MACH_MX27]
>     }
>     config MACH_MX27LITE boolean {
>      prompt "LogicPD MX27 LITEKIT platform" if [ARCH_MXC && ARCH_MX2 && MACH_MX27]
>      depends on [MACH_MX27]
>      inherited [ARCH_MXC && ARCH_MX2 && MACH_MX27]
>     }
>     config MACH_PCA100 boolean {
>      prompt "Phytec phyCARD-s (pca100)" if [ARCH_MXC && ARCH_MX2 && MACH_MX27]
>      depends on [MACH_MX27]
>      inherited [ARCH_MXC && ARCH_MX2 && MACH_MX27]
>     }
>     config MACH_MXT_TD60 boolean {
>      prompt "Maxtrack i-MXT TD60" if [ARCH_MXC && ARCH_MX2 && MACH_MX27]
>      depends on [MACH_MX27]
>      inherited [ARCH_MXC && ARCH_MX2 && MACH_MX27]
>     }
>    }
>    if [ARCH_MXC && ARCH_MX3] {
>     config ARCH_MX31 boolean {
>      select ARCH_HAS_RNGA if [ARCH_MXC && ARCH_MX3]
>      select ARCH_MXC_AUDMUX_V2 if [ARCH_MXC && ARCH_MX3]
>      inherited [ARCH_MXC && ARCH_MX3]
>     }
>     config ARCH_MX35 boolean {
>      select ARCH_MXC_IOMUX_V3 if [ARCH_MXC && ARCH_MX3]
>      select ARCH_MXC_AUDMUX_V2 if [ARCH_MXC && ARCH_MX3]
>      inherited [ARCH_MXC && ARCH_MX3]
>     }
>     config MACH_MX31ADS boolean {
>      prompt "Support MX31ADS platforms" if [ARCH_MXC && ARCH_MX3]
>      select ARCH_MX31 if [ARCH_MXC && ARCH_MX3]
>      default [y] if [ARCH_MXC && ARCH_MX3]
>      inherited [ARCH_MXC && ARCH_MX3]
>      config MACH_MX31ADS_WM1133_EV1 boolean {
>       prompt "Support Wolfson Microelectronics 1133-EV1 module" if [ARCH_MXC && ARCH_MX3 && MACH_MX31ADS && MFD_WM8350_I2C && REGULATOR_WM8350]
>       depends on [MACH_MX31ADS]
>       depends on [MFD_WM8350_I2C]
>       depends on [REGULATOR_WM8350]
>       select MFD_WM8350_CONFIG_MODE_0 if [ARCH_MXC && ARCH_MX3 && MACH_MX31ADS && MFD_WM8350_I2C && REGULATOR_WM8350]
>       select MFD_WM8352_CONFIG_MODE_0 if [ARCH_MXC && ARCH_MX3 && MACH_MX31ADS && MFD_WM8350_I2C && REGULATOR_WM8350]
>       inherited [ARCH_MXC && ARCH_MX3 && MACH_MX31ADS && MFD_WM8350_I2C && REGULATOR_WM8350]
>      }
>     }
>     config MACH_PCM037 boolean {
>      prompt "Support Phytec pcm037 (i.MX31) platforms" if [ARCH_MXC && ARCH_MX3]
>      select ARCH_MX31 if [ARCH_MXC && ARCH_MX3]
>      inherited [ARCH_MXC && ARCH_MX3]
>      config MACH_PCM037_EET boolean {
>       prompt "Support pcm037 EET board extensions" if [ARCH_MXC && ARCH_MX3 && MACH_PCM037]
>       depends on [MACH_PCM037]
>       inherited [ARCH_MXC && ARCH_MX3 && MACH_PCM037]
>      }
>     }
>     config MACH_MX31LITE boolean {
>      prompt "Support MX31 LITEKIT (LogicPD)" if [ARCH_MXC && ARCH_MX3]
>      select ARCH_MX31 if [ARCH_MXC && ARCH_MX3]
>      select MXC_ULPI if [ARCH_MXC && ARCH_MX3 && USB_ULPI]
>      inherited [ARCH_MXC && ARCH_MX3]
>     }
>     config MACH_MX31_3DS boolean {
>      prompt "Support MX31PDK (3DS)" if [ARCH_MXC && ARCH_MX3]
>      select ARCH_MX31 if [ARCH_MXC && ARCH_MX3]
>      inherited [ARCH_MXC && ARCH_MX3]
>     }
>     config MACH_MX31MOBOARD boolean {
>      prompt "Support mx31moboard platforms (EPFL Mobots group)" if [ARCH_MXC && ARCH_MX3]
>      select ARCH_MX31 if [ARCH_MXC && ARCH_MX3]
>      select MXC_ULPI if [ARCH_MXC && ARCH_MX3 && USB_ULPI]
>      inherited [ARCH_MXC && ARCH_MX3]
>     }
>     config MACH_MX31LILLY boolean {
>      prompt "Support MX31 LILLY-1131 platforms (INCO startec)" if [ARCH_MXC && ARCH_MX3]
>      select ARCH_MX31 if [ARCH_MXC && ARCH_MX3]
>      inherited [ARCH_MXC && ARCH_MX3]
>     }
>     config MACH_QONG boolean {
>      prompt "Support Dave/DENX QongEVB-LITE platform" if [ARCH_MXC && ARCH_MX3]
>      select ARCH_MX31 if [ARCH_MXC && ARCH_MX3]
>      inherited [ARCH_MXC && ARCH_MX3]
>     }
>     config MACH_PCM043 boolean {
>      prompt "Support Phytec pcm043 (i.MX35) platforms" if [ARCH_MXC && ARCH_MX3]
>      select ARCH_MX35 if [ARCH_MXC && ARCH_MX3]
>      inherited [ARCH_MXC && ARCH_MX3]
>     }
>     config MACH_ARMADILLO5X0 boolean {
>      prompt "Support Atmark Armadillo-500 Development Base Board" if [ARCH_MXC && ARCH_MX3]
>      select ARCH_MX31 if [ARCH_MXC && ARCH_MX3]
>      inherited [ARCH_MXC && ARCH_MX3]
>     }
>     config MACH_MX35_3DS boolean {
>      prompt "Support MX35PDK platform" if [ARCH_MXC && ARCH_MX3]
>      select ARCH_MX35 if [ARCH_MXC && ARCH_MX3]
>      default [n] if [ARCH_MXC && ARCH_MX3]
>      inherited [ARCH_MXC && ARCH_MX3]
>     }
>     config MACH_KZM_ARM11_01 boolean {
>      prompt "Support KZM-ARM11-01(Kyoto Microcomputer)" if [ARCH_MXC && ARCH_MX3]
>      select ARCH_MX31 if [ARCH_MXC && ARCH_MX3]
>      inherited [ARCH_MXC && ARCH_MX3]
>     }
>    }
>    if [ARCH_MXC && ARCH_MX25] {
>     config MACH_MX25_3DS boolean {
>      select ARCH_MXC_IOMUX_V3 if [ARCH_MXC && ARCH_MX25]
>      prompt "Support MX25PDK (3DS) Platform" if [ARCH_MXC && ARCH_MX25]
>      inherited [ARCH_MXC && ARCH_MX25]
>     }
>    }
>    if [ARCH_MXC && ARCH_MXC91231] {
>     config MACH_MAGX_ZN5 boolean {
>      prompt "Support Motorola Zn5 GSM phone" if [ARCH_MXC && ARCH_MXC91231]
>      default [n] if [ARCH_MXC && ARCH_MXC91231]
>      inherited [ARCH_MXC && ARCH_MXC91231]
>     }
>    }
>   }
>   config MXC_IRQ_PRIOR boolean {
>    prompt "Use IRQ priority" if [ARCH_MXC]
>    depends on [ARCH_MXC]
>    inherited [ARCH_MXC]
>   }
>   config MXC_PWM tristate {
>    prompt "Enable PWM driver" if [ARCH_MXC]
>    depends on [ARCH_MXC]
>    select HAVE_PWM if [ARCH_MXC]
>    inherited [ARCH_MXC]
>   }
>   config MXC_ULPI boolean {
>    inherited [ARCH_MXC]
>   }
>   config ARCH_HAS_RNGA boolean {
>    depends on [ARCH_MXC]
>    inherited [ARCH_MXC]
>   }
>   config ARCH_MXC_IOMUX_V3 boolean {
>    inherited [ARCH_MXC]
>   }
>   config ARCH_MXC_AUDMUX_V1 boolean {
>    inherited [ARCH_MXC]
>   }
>   config ARCH_MXC_AUDMUX_V2 boolean {
>    inherited [ARCH_MXC]
>   }
>  }
>  menu "NetX Implementations" {
>   depends on [ARCH_NETX]
>   config MACH_NXDKN boolean {
>    prompt "Enable Hilscher nxdkn Eval Board support" if [ARCH_NETX]
>    depends on [ARCH_NETX]
>    inherited [ARCH_NETX]
>   }
>   config MACH_NXDB500 boolean {
>    prompt "Enable Hilscher nxdb500 Eval Board support" if [ARCH_NETX]
>    depends on [ARCH_NETX]
>    select ARM_AMBA if [ARCH_NETX]
>    inherited [ARCH_NETX]
>   }
>   config MACH_NXEB500HMI boolean {
>    prompt "Enable Hilscher nxeb500hmi Eval Board support" if [ARCH_NETX]
>    depends on [ARCH_NETX]
>    select ARM_AMBA if [ARCH_NETX]
>    inherited [ARCH_NETX]
>   }
>  }
>  if [ARCH_NOMADIK] {
>   menu "Nomadik boards" {
>    depends on [ARCH_NOMADIK]
>    config MACH_NOMADIK_8815NHK boolean {
>     prompt "ST 8815 Nomadik Hardware Kit (evaluation board)" if [ARCH_NOMADIK]
>     select NOMADIK_8815 if [ARCH_NOMADIK]
>     select HAS_MTU if [ARCH_NOMADIK]
>     inherited [ARCH_NOMADIK]
>    }
>   }
>   config NOMADIK_8815 boolean {
>    inherited [ARCH_NOMADIK]
>   }
>   config I2C_BITBANG_8815NHK tristate {
>    prompt "Driver for bit-bang busses found on the 8815 NHK" if [ARCH_NOMADIK && I2C && MACH_NOMADIK_8815NHK]
>    depends on [I2C && MACH_NOMADIK_8815NHK]
>    select I2C_ALGOBIT if [ARCH_NOMADIK && I2C && MACH_NOMADIK_8815NHK]
>    default [y] if [ARCH_NOMADIK && I2C && MACH_NOMADIK_8815NHK]
>    inherited [ARCH_NOMADIK && I2C && MACH_NOMADIK_8815NHK]
>   }
>  }
>  config PLAT_NOMADIK boolean {
>   depends on [ARCH_NOMADIK || ARCH_U8500]
>   default [y] if [ARCH_NOMADIK || ARCH_U8500]
>   inherited [ARCH_NOMADIK || ARCH_U8500]
>  }
>  if [PLAT_NOMADIK] {
>   config HAS_MTU boolean {
>    inherited [PLAT_NOMADIK]
>   }
>  }
>  if [ARCH_NS9XXX] {
>   menu "NS9xxx Implementations" {
>    depends on [ARCH_NS9XXX]
>    config NS9XXX_HAVE_SERIAL8250 boolean {
>     inherited [ARCH_NS9XXX]
>    }
>    config PROCESSOR_NS9360 boolean {
>     inherited [ARCH_NS9XXX]
>    }
>    config MODULE_CC9P9360 boolean {
>     select PROCESSOR_NS9360 if [ARCH_NS9XXX]
>     inherited [ARCH_NS9XXX]
>    }
>    config BOARD_A9M9750DEV boolean {
>     select NS9XXX_HAVE_SERIAL8250 if [ARCH_NS9XXX]
>     inherited [ARCH_NS9XXX]
>    }
>    config BOARD_JSCC9P9360 boolean {
>     inherited [ARCH_NS9XXX]
>    }
>    config MACH_CC9P9360DEV boolean {
>     prompt "ConnectCore 9P 9360 on an A9M9750 Devboard" if [ARCH_NS9XXX]
>     select MODULE_CC9P9360 if [ARCH_NS9XXX]
>     select BOARD_A9M9750DEV if [ARCH_NS9XXX]
>     inherited [ARCH_NS9XXX]
>    }
>    config MACH_CC9P9360JS boolean {
>     prompt "ConnectCore 9P 9360 on a JSCC9P9360 Devboard" if [ARCH_NS9XXX]
>     select MODULE_CC9P9360 if [ARCH_NS9XXX]
>     select BOARD_JSCC9P9360 if [ARCH_NS9XXX]
>     inherited [ARCH_NS9XXX]
>    }
>   }
>  }
>  if [ARCH_OMAP] {
>   menu "TI OMAP Implementations" {
>    depends on [ARCH_OMAP]
>    config ARCH_OMAP_OTG boolean {
>     inherited [ARCH_OMAP]
>    }
>    choice boolean {
>     prompt "OMAP System Type" if [ARCH_OMAP]
>     default [ARCH_OMAP1] if [ARCH_OMAP]
>     config ARCH_OMAP1 boolean {
>      prompt "TI OMAP1" if [<choice>]
>      select COMMON_CLKDEV if [<choice>]
>      inherited [<choice>]
2833,2835c3176,3180
<     config CPU_FREQ_GOV_USERSPACE tristate {
<      prompt "'userspace' governor for userspace frequency scaling" if [CPU_FREQ]
<      inherited [CPU_FREQ]
---
>     config ARCH_OMAP2 boolean {
>      prompt "TI OMAP2" if [<choice>]
>      select CPU_V6 if [<choice>]
>      select COMMON_CLKDEV if [<choice>]
>      inherited [<choice>]
2837,2840c3182,3186
<     config CPU_FREQ_GOV_ONDEMAND tristate {
<      prompt "'ondemand' cpufreq policy governor" if [CPU_FREQ]
<      select CPU_FREQ_TABLE if [CPU_FREQ]
<      inherited [CPU_FREQ]
---
>     config ARCH_OMAP3 boolean {
>      prompt "TI OMAP3" if [<choice>]
>      select CPU_V7 if [<choice>]
>      select COMMON_CLKDEV if [<choice>]
>      inherited [<choice>]
2842,2845c3188,3193
<     config CPU_FREQ_GOV_CONSERVATIVE tristate {
<      prompt "'conservative' cpufreq governor" if [CPU_FREQ]
<      depends on [CPU_FREQ]
<      inherited [CPU_FREQ]
---
>     config ARCH_OMAP4 boolean {
>      prompt "TI OMAP4" if [<choice>]
>      select CPU_V7 if [<choice>]
>      select ARM_GIC if [<choice>]
>      select COMMON_CLKDEV if [<choice>]
>      inherited [<choice>]
2848,2871c3196,3223
<    if [CPU_FREQ] {
<     config X86_ACPI_CPUFREQ tristate {
<      prompt "ACPI Processor P-States driver" if [CPU_FREQ && ACPI_PROCESSOR]
<      select CPU_FREQ_TABLE if [CPU_FREQ && ACPI_PROCESSOR]
<      depends on [ACPI_PROCESSOR]
<      inherited [CPU_FREQ && ACPI_PROCESSOR]
<     }
<     config ELAN_CPUFREQ tristate {
<      prompt "AMD Elan SC400 and SC410" if [CPU_FREQ && X86_ELAN]
<      select CPU_FREQ_TABLE if [CPU_FREQ && X86_ELAN]
<      depends on [X86_ELAN]
<      inherited [CPU_FREQ && X86_ELAN]
<     }
<     config SC520_CPUFREQ tristate {
<      prompt "AMD Elan SC520" if [CPU_FREQ && X86_ELAN]
<      select CPU_FREQ_TABLE if [CPU_FREQ && X86_ELAN]
<      depends on [X86_ELAN]
<      inherited [CPU_FREQ && X86_ELAN]
<     }
<     config X86_POWERNOW_K6 tristate {
<      prompt "AMD Mobile K6-2/K6-3 PowerNow!" if [CPU_FREQ && X86_32]
<      select CPU_FREQ_TABLE if [CPU_FREQ && X86_32]
<      depends on [X86_32]
<      inherited [CPU_FREQ && X86_32]
---
>    config OMAP_DEBUG_DEVICES boolean {
>     inherited [ARCH_OMAP]
>    }
>    config OMAP_DEBUG_LEDS boolean {
>     depends on [OMAP_DEBUG_DEVICES]
>     default [y] if [ARCH_OMAP && OMAP_DEBUG_DEVICES && (LEDS || LEDS_OMAP_DEBUG)]
>     inherited [ARCH_OMAP && OMAP_DEBUG_DEVICES]
>    }
>    config OMAP_RESET_CLOCKS boolean {
>     prompt "Reset unused clocks during boot" if [ARCH_OMAP]
>     depends on [ARCH_OMAP]
>     inherited [ARCH_OMAP]
>    }
>    config OMAP_MUX boolean {
>     prompt "OMAP multiplexing support" if [ARCH_OMAP]
>     depends on [ARCH_OMAP]
>     default [y] if [ARCH_OMAP]
>     inherited [ARCH_OMAP]
>     config OMAP_MUX_DEBUG boolean {
>      prompt "Multiplexing debug output" if [ARCH_OMAP && OMAP_MUX]
>      depends on [OMAP_MUX]
>      inherited [ARCH_OMAP && OMAP_MUX]
>     }
>     config OMAP_MUX_WARNINGS boolean {
>      prompt "Warn about pins the bootloader didn't set up" if [ARCH_OMAP && OMAP_MUX]
>      depends on [OMAP_MUX]
>      default [y] if [ARCH_OMAP && OMAP_MUX]
>      inherited [ARCH_OMAP && OMAP_MUX]
2873,2884c3225,3249
<     config X86_POWERNOW_K7 tristate {
<      prompt "AMD Mobile Athlon/Duron PowerNow!" if [CPU_FREQ && X86_32]
<      select CPU_FREQ_TABLE if [CPU_FREQ && X86_32]
<      depends on [X86_32]
<      inherited [CPU_FREQ && X86_32]
<      config X86_POWERNOW_K7_ACPI boolean {
<       depends on [X86_POWERNOW_K7 && ACPI_PROCESSOR]
<       depends on [!(X86_POWERNOW_K7="y" && ACPI_PROCESSOR="m")]
<       depends on [X86_32]
<       default [y] if [CPU_FREQ && X86_POWERNOW_K7 && ACPI_PROCESSOR && (X86_POWERNOW_K7!="y" || ACPI_PROCESSOR!="m") && X86_32]
<       inherited [CPU_FREQ && X86_POWERNOW_K7 && ACPI_PROCESSOR && (X86_POWERNOW_K7!="y" || ACPI_PROCESSOR!="m") && X86_32]
<      }
---
>    }
>    config OMAP_MCBSP boolean {
>     prompt "McBSP support" if [ARCH_OMAP]
>     depends on [ARCH_OMAP]
>     default [y] if [ARCH_OMAP]
>     inherited [ARCH_OMAP]
>    }
>    config OMAP_MBOX_FWK tristate {
>     prompt "Mailbox framework support" if [ARCH_OMAP]
>     depends on [ARCH_OMAP]
>     inherited [ARCH_OMAP]
>    }
>    config OMAP_IOMMU tristate {
>     inherited [ARCH_OMAP]
>    }
>    config OMAP_IOMMU_DEBUG tristate {
>     depends on [OMAP_IOMMU]
>     inherited [ARCH_OMAP && OMAP_IOMMU]
>    }
>    choice boolean {
>     prompt "System timer" if [ARCH_OMAP]
>     default [OMAP_MPU_TIMER] if [ARCH_OMAP]
>     config OMAP_MPU_TIMER boolean {
>      prompt "Use mpu timer" if [<choice>]
>      inherited [<choice>]
2886,2890c3251,3275
<     config X86_POWERNOW_K8 tristate {
<      prompt "AMD Opteron/Athlon64 PowerNow!" if [CPU_FREQ && ACPI && ACPI_PROCESSOR]
<      select CPU_FREQ_TABLE if [CPU_FREQ && ACPI && ACPI_PROCESSOR]
<      depends on [ACPI && ACPI_PROCESSOR]
<      inherited [CPU_FREQ && ACPI && ACPI_PROCESSOR]
---
>     config OMAP_32K_TIMER boolean {
>      prompt "Use 32KHz timer" if [<choice> && (ARCH_OMAP16XX || ARCH_OMAP24XX || ARCH_OMAP34XX || ARCH_OMAP4)]
>      depends on [ARCH_OMAP16XX || ARCH_OMAP24XX || ARCH_OMAP34XX || ARCH_OMAP4]
>      inherited [<choice> && (ARCH_OMAP16XX || ARCH_OMAP24XX || ARCH_OMAP34XX || ARCH_OMAP4)]
>     }
>    }
>    config OMAP_32K_TIMER_HZ integer {
>     prompt "Kernel internal timer frequency for 32KHz timer" if [ARCH_OMAP && OMAP_32K_TIMER]
>     range [32 1024] if [ARCH_OMAP && OMAP_32K_TIMER]
>     depends on [OMAP_32K_TIMER]
>     default [128] if [ARCH_OMAP && OMAP_32K_TIMER]
>     inherited [ARCH_OMAP && OMAP_32K_TIMER]
>    }
>    config OMAP_DM_TIMER boolean {
>     prompt "Use dual-mode timer" if [ARCH_OMAP && (ARCH_OMAP16XX || ARCH_OMAP24XX || ARCH_OMAP34XX || ARCH_OMAP4)]
>     depends on [ARCH_OMAP16XX || ARCH_OMAP24XX || ARCH_OMAP34XX || ARCH_OMAP4]
>     inherited [ARCH_OMAP && (ARCH_OMAP16XX || ARCH_OMAP24XX || ARCH_OMAP34XX || ARCH_OMAP4)]
>    }
>    choice boolean {
>     prompt "Low-level debug console UART" if [ARCH_OMAP]
>     depends on [ARCH_OMAP]
>     default [OMAP_LL_DEBUG_NONE] if [ARCH_OMAP]
>     config OMAP_LL_DEBUG_UART1 boolean {
>      prompt "UART1" if [<choice>]
>      inherited [<choice>]
2892,2895c3277,3279
<     config X86_GX_SUSPMOD tristate {
<      prompt "Cyrix MediaGX/NatSemi Geode Suspend Modulation" if [CPU_FREQ && X86_32 && PCI]
<      depends on [X86_32 && PCI]
<      inherited [CPU_FREQ && X86_32 && PCI]
---
>     config OMAP_LL_DEBUG_UART2 boolean {
>      prompt "UART2" if [<choice>]
>      inherited [<choice>]
2897,2914c3281,3283
<     config X86_SPEEDSTEP_CENTRINO tristate {
<      prompt "Intel Enhanced SpeedStep (deprecated)" if [CPU_FREQ && (X86_32 || X86_64 && ACPI_PROCESSOR)]
<      select CPU_FREQ_TABLE if [CPU_FREQ && (X86_32 || X86_64 && ACPI_PROCESSOR)]
<      select X86_SPEEDSTEP_CENTRINO_TABLE if [CPU_FREQ && (X86_32 || X86_64 && ACPI_PROCESSOR) && X86_32]
<      depends on [X86_32 || X86_64 && ACPI_PROCESSOR]
<      inherited [CPU_FREQ && (X86_32 || X86_64 && ACPI_PROCESSOR)]
<      config X86_SPEEDSTEP_CENTRINO_TABLE boolean {
<       prompt "Built-in tables for Banias CPUs" if [CPU_FREQ && X86_32 && X86_SPEEDSTEP_CENTRINO]
<       depends on [X86_32 && X86_SPEEDSTEP_CENTRINO]
<       default [y] if [CPU_FREQ && X86_32 && X86_SPEEDSTEP_CENTRINO]
<       inherited [CPU_FREQ && X86_32 && X86_SPEEDSTEP_CENTRINO]
<      }
<     }
<     config X86_SPEEDSTEP_ICH tristate {
<      prompt "Intel Speedstep on ICH-M chipsets (ioport interface)" if [CPU_FREQ && X86_32]
<      select CPU_FREQ_TABLE if [CPU_FREQ && X86_32]
<      depends on [X86_32]
<      inherited [CPU_FREQ && X86_32]
---
>     config OMAP_LL_DEBUG_UART3 boolean {
>      prompt "UART3" if [<choice>]
>      inherited [<choice>]
2916,2930c3285,3287
<     config X86_SPEEDSTEP_SMI tristate {
<      prompt "Intel SpeedStep on 440BX/ZX/MX chipsets (SMI interface)" if [CPU_FREQ && X86_32 && EXPERIMENTAL]
<      select CPU_FREQ_TABLE if [CPU_FREQ && X86_32 && EXPERIMENTAL]
<      depends on [X86_32 && EXPERIMENTAL]
<      inherited [CPU_FREQ && X86_32 && EXPERIMENTAL]
<     }
<     config X86_P4_CLOCKMOD tristate {
<      prompt "Intel Pentium 4 clock modulation" if [CPU_FREQ]
<      select CPU_FREQ_TABLE if [CPU_FREQ]
<      inherited [CPU_FREQ]
<     }
<     config X86_CPUFREQ_NFORCE2 tristate {
<      prompt "nVidia nForce2 FSB changing" if [CPU_FREQ && X86_32 && EXPERIMENTAL]
<      depends on [X86_32 && EXPERIMENTAL]
<      inherited [CPU_FREQ && X86_32 && EXPERIMENTAL]
---
>     config OMAP_LL_DEBUG_NONE boolean {
>      prompt "None" if [<choice>]
>      inherited [<choice>]
2932,2935c3289,3302
<     config X86_LONGRUN tristate {
<      prompt "Transmeta LongRun" if [CPU_FREQ && X86_32]
<      depends on [X86_32]
<      inherited [CPU_FREQ && X86_32]
---
>    }
>    config OMAP_SERIAL_WAKE boolean {
>     prompt "Enable wake-up events for serial ports" if [ARCH_OMAP && ARCH_OMAP1 && OMAP_MUX]
>     depends on [ARCH_OMAP1 && OMAP_MUX]
>     default [y] if [ARCH_OMAP && ARCH_OMAP1 && OMAP_MUX]
>     inherited [ARCH_OMAP && ARCH_OMAP1 && OMAP_MUX]
>    }
>    choice boolean {
>     prompt "OMAP PM layer selection" if [ARCH_OMAP]
>     depends on [ARCH_OMAP]
>     default [OMAP_PM_NOOP] if [ARCH_OMAP]
>     config OMAP_PM_NONE boolean {
>      prompt "No PM layer" if [<choice>]
>      inherited [<choice>]
2937,2956c3304,3306
<     config X86_LONGHAUL tristate {
<      prompt "VIA Cyrix III Longhaul" if [CPU_FREQ && X86_32 && ACPI_PROCESSOR]
<      select CPU_FREQ_TABLE if [CPU_FREQ && X86_32 && ACPI_PROCESSOR]
<      depends on [X86_32 && ACPI_PROCESSOR]
<      inherited [CPU_FREQ && X86_32 && ACPI_PROCESSOR]
<     }
<     config X86_E_POWERSAVER tristate {
<      prompt "VIA C7 Enhanced PowerSaver (DANGEROUS)" if [CPU_FREQ && X86_32 && EXPERIMENTAL]
<      select CPU_FREQ_TABLE if [CPU_FREQ && X86_32 && EXPERIMENTAL]
<      depends on [X86_32 && EXPERIMENTAL]
<      inherited [CPU_FREQ && X86_32 && EXPERIMENTAL]
<     }
<     config X86_SPEEDSTEP_LIB tristate {
<      default [X86_SPEEDSTEP_ICH || X86_SPEEDSTEP_SMI || X86_P4_CLOCKMOD] if [CPU_FREQ]
<      inherited [CPU_FREQ]
<     }
<     config X86_SPEEDSTEP_RELAXED_CAP_CHECK boolean {
<      prompt "Relaxed speedstep capability checks" if [CPU_FREQ && X86_32 && (X86_SPEEDSTEP_SMI || X86_SPEEDSTEP_ICH)]
<      depends on [X86_32 && (X86_SPEEDSTEP_SMI || X86_SPEEDSTEP_ICH)]
<      inherited [CPU_FREQ && X86_32 && (X86_SPEEDSTEP_SMI || X86_SPEEDSTEP_ICH)]
---
>     config OMAP_PM_NOOP boolean {
>      prompt "No-op/debug PM layer" if [<choice>]
>      inherited [<choice>]
2961,2972c3311,4474
<  config CPU_IDLE boolean {
<   prompt "CPU idle PM support" if []
<   default [ACPI] if []
<   config CPU_IDLE_GOV_LADDER boolean {
<    depends on [CPU_IDLE]
<    default [y] if [CPU_IDLE]
<    inherited [CPU_IDLE]
<   }
<   config CPU_IDLE_GOV_MENU boolean {
<    depends on [CPU_IDLE && NO_HZ]
<    default [y] if [CPU_IDLE && NO_HZ]
<    inherited [CPU_IDLE && NO_HZ]
---
>  config ARCH_OMAP730 boolean {
>   depends on [ARCH_OMAP1]
>   prompt "OMAP730 Based System" if [ARCH_OMAP1]
>   select CPU_ARM926T if [ARCH_OMAP1]
>   select ARCH_OMAP_OTG if [ARCH_OMAP1]
>   inherited [ARCH_OMAP1]
>  }
>  config ARCH_OMAP850 boolean {
>   depends on [ARCH_OMAP1]
>   prompt "OMAP850 Based System" if [ARCH_OMAP1]
>   select CPU_ARM926T if [ARCH_OMAP1]
>   select ARCH_OMAP_OTG if [ARCH_OMAP1]
>   inherited [ARCH_OMAP1]
>  }
>  config ARCH_OMAP15XX boolean {
>   depends on [ARCH_OMAP1]
>   default [y] if [ARCH_OMAP1]
>   prompt "OMAP15xx Based System" if [ARCH_OMAP1]
>   select CPU_ARM925T if [ARCH_OMAP1]
>   inherited [ARCH_OMAP1]
>  }
>  config ARCH_OMAP16XX boolean {
>   depends on [ARCH_OMAP1]
>   prompt "OMAP16xx Based System" if [ARCH_OMAP1]
>   select CPU_ARM926T if [ARCH_OMAP1]
>   select ARCH_OMAP_OTG if [ARCH_OMAP1]
>   inherited [ARCH_OMAP1]
>  }
>  config MACH_OMAP_INNOVATOR boolean {
>   prompt "TI Innovator" if [ARCH_OMAP1 && (ARCH_OMAP15XX || ARCH_OMAP16XX)]
>   depends on [ARCH_OMAP1 && (ARCH_OMAP15XX || ARCH_OMAP16XX)]
>   select OMAP_MCBSP if [ARCH_OMAP1 && (ARCH_OMAP15XX || ARCH_OMAP16XX)]
>   inherited [ARCH_OMAP1 && (ARCH_OMAP15XX || ARCH_OMAP16XX)]
>  }
>  config MACH_OMAP_H2 boolean {
>   prompt "TI H2 Support" if [ARCH_OMAP1 && ARCH_OMAP16XX]
>   depends on [ARCH_OMAP1 && ARCH_OMAP16XX]
>   select OMAP_MCBSP if [ARCH_OMAP1 && ARCH_OMAP16XX]
>   inherited [ARCH_OMAP1 && ARCH_OMAP16XX]
>  }
>  config MACH_OMAP_H3 boolean {
>   prompt "TI H3 Support" if [ARCH_OMAP1 && ARCH_OMAP16XX]
>   depends on [ARCH_OMAP1 && ARCH_OMAP16XX]
>   inherited [ARCH_OMAP1 && ARCH_OMAP16XX]
>  }
>  config MACH_OMAP_HTCWIZARD boolean {
>   prompt "HTC Wizard" if [ARCH_OMAP850]
>   depends on [ARCH_OMAP850]
>   inherited [ARCH_OMAP850]
>  }
>  config MACH_HERALD boolean {
>   prompt "HTC Herald" if [ARCH_OMAP850]
>   depends on [ARCH_OMAP850]
>   inherited [ARCH_OMAP850]
>  }
>  config MACH_OMAP_OSK boolean {
>   prompt "TI OSK Support" if [ARCH_OMAP1 && ARCH_OMAP16XX]
>   depends on [ARCH_OMAP1 && ARCH_OMAP16XX]
>   select OMAP_MCBSP if [ARCH_OMAP1 && ARCH_OMAP16XX]
>   inherited [ARCH_OMAP1 && ARCH_OMAP16XX]
>   config OMAP_OSK_MISTRAL boolean {
>    prompt "Mistral QVGA board Support" if [MACH_OMAP_OSK]
>    depends on [MACH_OMAP_OSK]
>    inherited [MACH_OMAP_OSK]
>   }
>  }
>  config MACH_OMAP_PERSEUS2 boolean {
>   prompt "TI Perseus2" if [ARCH_OMAP1 && ARCH_OMAP730]
>   depends on [ARCH_OMAP1 && ARCH_OMAP730]
>   inherited [ARCH_OMAP1 && ARCH_OMAP730]
>  }
>  config MACH_OMAP_FSAMPLE boolean {
>   prompt "TI F-Sample" if [ARCH_OMAP1 && ARCH_OMAP730]
>   depends on [ARCH_OMAP1 && ARCH_OMAP730]
>   inherited [ARCH_OMAP1 && ARCH_OMAP730]
>  }
>  config MACH_VOICEBLUE boolean {
>   prompt "Voiceblue" if [ARCH_OMAP1 && ARCH_OMAP15XX]
>   depends on [ARCH_OMAP1 && ARCH_OMAP15XX]
>   inherited [ARCH_OMAP1 && ARCH_OMAP15XX]
>  }
>  config MACH_OMAP_PALMTE boolean {
>   prompt "Palm Tungsten E" if [ARCH_OMAP1 && ARCH_OMAP15XX]
>   depends on [ARCH_OMAP1 && ARCH_OMAP15XX]
>   inherited [ARCH_OMAP1 && ARCH_OMAP15XX]
>  }
>  config MACH_OMAP_PALMZ71 boolean {
>   prompt "Palm Zire71" if [ARCH_OMAP1 && ARCH_OMAP15XX]
>   depends on [ARCH_OMAP1 && ARCH_OMAP15XX]
>   inherited [ARCH_OMAP1 && ARCH_OMAP15XX]
>  }
>  config MACH_OMAP_PALMTT boolean {
>   prompt "Palm Tungsten|T" if [ARCH_OMAP1 && ARCH_OMAP15XX]
>   depends on [ARCH_OMAP1 && ARCH_OMAP15XX]
>   inherited [ARCH_OMAP1 && ARCH_OMAP15XX]
>  }
>  config MACH_SX1 boolean {
>   prompt "Siemens SX1" if [ARCH_OMAP1 && ARCH_OMAP15XX]
>   depends on [ARCH_OMAP1 && ARCH_OMAP15XX]
>   inherited [ARCH_OMAP1 && ARCH_OMAP15XX]
>  }
>  config MACH_NOKIA770 boolean {
>   prompt "Nokia 770" if [ARCH_OMAP1 && ARCH_OMAP16XX]
>   depends on [ARCH_OMAP1 && ARCH_OMAP16XX]
>   inherited [ARCH_OMAP1 && ARCH_OMAP16XX]
>  }
>  config MACH_AMS_DELTA boolean {
>   prompt "Amstrad E3 (Delta)" if [ARCH_OMAP1 && ARCH_OMAP15XX]
>   depends on [ARCH_OMAP1 && ARCH_OMAP15XX]
>   inherited [ARCH_OMAP1 && ARCH_OMAP15XX]
>  }
>  config MACH_OMAP_GENERIC boolean {
>   prompt "Generic OMAP board" if [ARCH_OMAP1 && (ARCH_OMAP15XX || ARCH_OMAP16XX)]
>   depends on [ARCH_OMAP1 && (ARCH_OMAP15XX || ARCH_OMAP16XX)]
>   prompt "Generic OMAP board" if [ARCH_OMAP2 && ARCH_OMAP24XX]
>   depends on [ARCH_OMAP2 && ARCH_OMAP24XX]
>   inherited [ARCH_OMAP1 && (ARCH_OMAP15XX || ARCH_OMAP16XX)]
>  }
>  config OMAP_CLOCKS_SET_BY_BOOTLOADER boolean {
>   prompt "OMAP clocks set by bootloader" if [ARCH_OMAP1]
>   depends on [ARCH_OMAP1]
>   inherited [ARCH_OMAP1]
>  }
>  config OMAP_ARM_216MHZ boolean {
>   prompt "OMAP ARM 216 MHz CPU (1710 only)" if [ARCH_OMAP1 && ARCH_OMAP16XX]
>   depends on [ARCH_OMAP1 && ARCH_OMAP16XX]
>   inherited [ARCH_OMAP1 && ARCH_OMAP16XX]
>  }
>  config OMAP_ARM_195MHZ boolean {
>   prompt "OMAP ARM 195 MHz CPU" if [ARCH_OMAP1 && (ARCH_OMAP730 || ARCH_OMAP850)]
>   depends on [ARCH_OMAP1 && (ARCH_OMAP730 || ARCH_OMAP850)]
>   inherited [ARCH_OMAP1 && (ARCH_OMAP730 || ARCH_OMAP850)]
>  }
>  config OMAP_ARM_192MHZ boolean {
>   prompt "OMAP ARM 192 MHz CPU" if [ARCH_OMAP1 && ARCH_OMAP16XX]
>   depends on [ARCH_OMAP1 && ARCH_OMAP16XX]
>   inherited [ARCH_OMAP1 && ARCH_OMAP16XX]
>  }
>  config OMAP_ARM_182MHZ boolean {
>   prompt "OMAP ARM 182 MHz CPU" if [ARCH_OMAP1 && (ARCH_OMAP730 || ARCH_OMAP850)]
>   depends on [ARCH_OMAP1 && (ARCH_OMAP730 || ARCH_OMAP850)]
>   inherited [ARCH_OMAP1 && (ARCH_OMAP730 || ARCH_OMAP850)]
>  }
>  config OMAP_ARM_168MHZ boolean {
>   prompt "OMAP ARM 168 MHz CPU" if [ARCH_OMAP1 && (ARCH_OMAP15XX || ARCH_OMAP16XX || ARCH_OMAP730 || ARCH_OMAP850)]
>   depends on [ARCH_OMAP1 && (ARCH_OMAP15XX || ARCH_OMAP16XX || ARCH_OMAP730 || ARCH_OMAP850)]
>   inherited [ARCH_OMAP1 && (ARCH_OMAP15XX || ARCH_OMAP16XX || ARCH_OMAP730 || ARCH_OMAP850)]
>  }
>  config OMAP_ARM_150MHZ boolean {
>   prompt "OMAP ARM 150 MHz CPU" if [ARCH_OMAP1 && ARCH_OMAP15XX]
>   depends on [ARCH_OMAP1 && ARCH_OMAP15XX]
>   inherited [ARCH_OMAP1 && ARCH_OMAP15XX]
>  }
>  config OMAP_ARM_120MHZ boolean {
>   prompt "OMAP ARM 120 MHz CPU" if [ARCH_OMAP1 && (ARCH_OMAP15XX || ARCH_OMAP16XX || ARCH_OMAP730 || ARCH_OMAP850)]
>   depends on [ARCH_OMAP1 && (ARCH_OMAP15XX || ARCH_OMAP16XX || ARCH_OMAP730 || ARCH_OMAP850)]
>   inherited [ARCH_OMAP1 && (ARCH_OMAP15XX || ARCH_OMAP16XX || ARCH_OMAP730 || ARCH_OMAP850)]
>  }
>  config OMAP_ARM_60MHZ boolean {
>   prompt "OMAP ARM 60 MHz CPU" if [ARCH_OMAP1 && (ARCH_OMAP15XX || ARCH_OMAP16XX || ARCH_OMAP730 || ARCH_OMAP850)]
>   depends on [ARCH_OMAP1 && (ARCH_OMAP15XX || ARCH_OMAP16XX || ARCH_OMAP730 || ARCH_OMAP850)]
>   default [y] if [ARCH_OMAP1 && (ARCH_OMAP15XX || ARCH_OMAP16XX || ARCH_OMAP730 || ARCH_OMAP850)]
>   inherited [ARCH_OMAP1 && (ARCH_OMAP15XX || ARCH_OMAP16XX || ARCH_OMAP730 || ARCH_OMAP850)]
>  }
>  config OMAP_ARM_30MHZ boolean {
>   prompt "OMAP ARM 30 MHz CPU" if [ARCH_OMAP1 && (ARCH_OMAP15XX || ARCH_OMAP16XX || ARCH_OMAP730 || ARCH_OMAP850)]
>   depends on [ARCH_OMAP1 && (ARCH_OMAP15XX || ARCH_OMAP16XX || ARCH_OMAP730 || ARCH_OMAP850)]
>   inherited [ARCH_OMAP1 && (ARCH_OMAP15XX || ARCH_OMAP16XX || ARCH_OMAP730 || ARCH_OMAP850)]
>  }
>  config ARCH_OMAP24XX boolean {
>   prompt "OMAP24xx Based System" if [ARCH_OMAP2]
>   depends on [ARCH_OMAP2]
>   inherited [ARCH_OMAP2]
>   config ARCH_OMAP2420 boolean {
>    prompt "OMAP2420 support" if [ARCH_OMAP24XX]
>    depends on [ARCH_OMAP24XX]
>    select OMAP_DM_TIMER if [ARCH_OMAP24XX]
>    select ARCH_OMAP_OTG if [ARCH_OMAP24XX]
>    inherited [ARCH_OMAP24XX]
>   }
>   config ARCH_OMAP2430 boolean {
>    prompt "OMAP2430 support" if [ARCH_OMAP24XX]
>    depends on [ARCH_OMAP24XX]
>    inherited [ARCH_OMAP24XX]
>   }
>  }
>  config ARCH_OMAP34XX boolean {
>   prompt "OMAP34xx Based System" if [ARCH_OMAP3]
>   depends on [ARCH_OMAP3]
>   select USB_ARCH_HAS_EHCI if [ARCH_OMAP3]
>   inherited [ARCH_OMAP3]
>   config ARCH_OMAP3430 boolean {
>    prompt "OMAP3430 support" if [ARCH_OMAP3 && ARCH_OMAP34XX]
>    depends on [ARCH_OMAP3 && ARCH_OMAP34XX]
>    select ARCH_OMAP_OTG if [ARCH_OMAP3 && ARCH_OMAP34XX]
>    inherited [ARCH_OMAP3 && ARCH_OMAP34XX]
>   }
>  }
>  config OMAP_PACKAGE_CBC boolean {
>  }
>  config OMAP_PACKAGE_CBB boolean {
>  }
>  config OMAP_PACKAGE_CUS boolean {
>  }
>  config OMAP_PACKAGE_CBP boolean {
>  }
>  config MACH_OMAP_GENERIC boolean {
>   prompt "Generic OMAP board" if [ARCH_OMAP1 && (ARCH_OMAP15XX || ARCH_OMAP16XX)]
>   depends on [ARCH_OMAP1 && (ARCH_OMAP15XX || ARCH_OMAP16XX)]
>   prompt "Generic OMAP board" if [ARCH_OMAP2 && ARCH_OMAP24XX]
>   depends on [ARCH_OMAP2 && ARCH_OMAP24XX]
>   inherited [ARCH_OMAP2 && ARCH_OMAP24XX]
>  }
>  config MACH_OMAP2_TUSB6010 boolean {
>   depends on [ARCH_OMAP2 && ARCH_OMAP2420]
>   default [y] if [ARCH_OMAP2 && ARCH_OMAP2420 && MACH_NOKIA_N8X0]
>   inherited [ARCH_OMAP2 && ARCH_OMAP2420]
>  }
>  config MACH_OMAP_H4 boolean {
>   prompt "OMAP 2420 H4 board" if [ARCH_OMAP2 && ARCH_OMAP24XX]
>   depends on [ARCH_OMAP2 && ARCH_OMAP24XX]
>   select OMAP_DEBUG_DEVICES if [ARCH_OMAP2 && ARCH_OMAP24XX]
>   inherited [ARCH_OMAP2 && ARCH_OMAP24XX]
>  }
>  config MACH_OMAP_APOLLON boolean {
>   prompt "OMAP 2420 Apollon board" if [ARCH_OMAP2 && ARCH_OMAP24XX]
>   depends on [ARCH_OMAP2 && ARCH_OMAP24XX]
>   inherited [ARCH_OMAP2 && ARCH_OMAP24XX]
>  }
>  config MACH_OMAP_2430SDP boolean {
>   prompt "OMAP 2430 SDP board" if [ARCH_OMAP2 && ARCH_OMAP24XX]
>   depends on [ARCH_OMAP2 && ARCH_OMAP24XX]
>   inherited [ARCH_OMAP2 && ARCH_OMAP24XX]
>  }
>  config MACH_OMAP3_BEAGLE boolean {
>   prompt "OMAP3 BEAGLE board" if [ARCH_OMAP3 && ARCH_OMAP34XX]
>   depends on [ARCH_OMAP3 && ARCH_OMAP34XX]
>   select OMAP_PACKAGE_CBB if [ARCH_OMAP3 && ARCH_OMAP34XX]
>   inherited [ARCH_OMAP3 && ARCH_OMAP34XX]
>  }
>  config MACH_OMAP_LDP boolean {
>   prompt "OMAP3 LDP board" if [ARCH_OMAP3 && ARCH_OMAP34XX]
>   depends on [ARCH_OMAP3 && ARCH_OMAP34XX]
>   select OMAP_PACKAGE_CBB if [ARCH_OMAP3 && ARCH_OMAP34XX]
>   inherited [ARCH_OMAP3 && ARCH_OMAP34XX]
>  }
>  config MACH_OVERO boolean {
>   prompt "Gumstix Overo board" if [ARCH_OMAP3 && ARCH_OMAP34XX]
>   depends on [ARCH_OMAP3 && ARCH_OMAP34XX]
>   select OMAP_PACKAGE_CBB if [ARCH_OMAP3 && ARCH_OMAP34XX]
>   inherited [ARCH_OMAP3 && ARCH_OMAP34XX]
>  }
>  config MACH_OMAP3EVM boolean {
>   prompt "OMAP 3530 EVM board" if [ARCH_OMAP3 && ARCH_OMAP34XX]
>   depends on [ARCH_OMAP3 && ARCH_OMAP34XX]
>   select OMAP_PACKAGE_CBB if [ARCH_OMAP3 && ARCH_OMAP34XX]
>   inherited [ARCH_OMAP3 && ARCH_OMAP34XX]
>  }
>  config MACH_OMAP3517EVM boolean {
>   prompt "OMAP3517/ AM3517 EVM board" if [ARCH_OMAP3 && ARCH_OMAP34XX]
>   depends on [ARCH_OMAP3 && ARCH_OMAP34XX]
>   select OMAP_PACKAGE_CBB if [ARCH_OMAP3 && ARCH_OMAP34XX]
>   inherited [ARCH_OMAP3 && ARCH_OMAP34XX]
>  }
>  config MACH_OMAP3_PANDORA boolean {
>   prompt "OMAP3 Pandora" if [ARCH_OMAP3 && ARCH_OMAP34XX]
>   depends on [ARCH_OMAP3 && ARCH_OMAP34XX]
>   select OMAP_PACKAGE_CBB if [ARCH_OMAP3 && ARCH_OMAP34XX]
>   inherited [ARCH_OMAP3 && ARCH_OMAP34XX]
>  }
>  config MACH_OMAP3_TOUCHBOOK boolean {
>   prompt "OMAP3 Touch Book" if [ARCH_OMAP3 && ARCH_OMAP34XX]
>   depends on [ARCH_OMAP3 && ARCH_OMAP34XX]
>   select BACKLIGHT_CLASS_DEVICE if [ARCH_OMAP3 && ARCH_OMAP34XX]
>   inherited [ARCH_OMAP3 && ARCH_OMAP34XX]
>  }
>  config MACH_OMAP_3430SDP boolean {
>   prompt "OMAP 3430 SDP board" if [ARCH_OMAP3 && ARCH_OMAP34XX]
>   depends on [ARCH_OMAP3 && ARCH_OMAP34XX]
>   select OMAP_PACKAGE_CBB if [ARCH_OMAP3 && ARCH_OMAP34XX]
>   inherited [ARCH_OMAP3 && ARCH_OMAP34XX]
>  }
>  config MACH_NOKIA_N800 boolean {
>  }
>  config MACH_NOKIA_N810 boolean {
>  }
>  config MACH_NOKIA_N810_WIMAX boolean {
>  }
>  config MACH_NOKIA_N8X0 boolean {
>   prompt "Nokia N800/N810" if [ARCH_OMAP2420]
>   depends on [ARCH_OMAP2420]
>   select MACH_NOKIA_N800 if [ARCH_OMAP2420]
>   select MACH_NOKIA_N810 if [ARCH_OMAP2420]
>   select MACH_NOKIA_N810_WIMAX if [ARCH_OMAP2420]
>   inherited [ARCH_OMAP2420]
>  }
>  config MACH_NOKIA_RX51 boolean {
>   prompt "Nokia RX-51 board" if [ARCH_OMAP3 && ARCH_OMAP34XX]
>   depends on [ARCH_OMAP3 && ARCH_OMAP34XX]
>   select OMAP_PACKAGE_CBB if [ARCH_OMAP3 && ARCH_OMAP34XX]
>   inherited [ARCH_OMAP3 && ARCH_OMAP34XX]
>  }
>  config MACH_OMAP_ZOOM2 boolean {
>   prompt "OMAP3 Zoom2 board" if [ARCH_OMAP3 && ARCH_OMAP34XX]
>   depends on [ARCH_OMAP3 && ARCH_OMAP34XX]
>   select OMAP_PACKAGE_CBB if [ARCH_OMAP3 && ARCH_OMAP34XX]
>   inherited [ARCH_OMAP3 && ARCH_OMAP34XX]
>  }
>  config MACH_OMAP_ZOOM3 boolean {
>   prompt "OMAP3630 Zoom3 board" if [ARCH_OMAP3 && ARCH_OMAP34XX]
>   depends on [ARCH_OMAP3 && ARCH_OMAP34XX]
>   select OMAP_PACKAGE_CBP if [ARCH_OMAP3 && ARCH_OMAP34XX]
>   inherited [ARCH_OMAP3 && ARCH_OMAP34XX]
>  }
>  config MACH_CM_T35 boolean {
>   prompt "CompuLab CM-T35 module" if [ARCH_OMAP3 && ARCH_OMAP34XX]
>   depends on [ARCH_OMAP3 && ARCH_OMAP34XX]
>   select OMAP_PACKAGE_CUS if [ARCH_OMAP3 && ARCH_OMAP34XX]
>   select OMAP_MUX if [ARCH_OMAP3 && ARCH_OMAP34XX]
>   inherited [ARCH_OMAP3 && ARCH_OMAP34XX]
>  }
>  config MACH_IGEP0020 boolean {
>   prompt "IGEP0020" if [ARCH_OMAP3 && ARCH_OMAP34XX]
>   depends on [ARCH_OMAP3 && ARCH_OMAP34XX]
>   select OMAP_PACKAGE_CBB if [ARCH_OMAP3 && ARCH_OMAP34XX]
>   inherited [ARCH_OMAP3 && ARCH_OMAP34XX]
>  }
>  config MACH_OMAP_3630SDP boolean {
>   prompt "OMAP3630 SDP board" if [ARCH_OMAP3 && ARCH_OMAP34XX]
>   depends on [ARCH_OMAP3 && ARCH_OMAP34XX]
>   select OMAP_PACKAGE_CBP if [ARCH_OMAP3 && ARCH_OMAP34XX]
>   inherited [ARCH_OMAP3 && ARCH_OMAP34XX]
>  }
>  config MACH_OMAP_4430SDP boolean {
>   prompt "OMAP 4430 SDP board" if [ARCH_OMAP4]
>   depends on [ARCH_OMAP4]
>   inherited [ARCH_OMAP4]
>  }
>  config OMAP3_EMU boolean {
>   prompt "OMAP3 debugging peripherals" if [ARCH_OMAP3]
>   depends on [ARCH_OMAP3]
>   select OC_ETM if [ARCH_OMAP3]
>   inherited [ARCH_OMAP3]
>  }
>  config OMAP3_SDRC_AC_TIMING boolean {
>   prompt "Enable SDRC AC timing register changes" if [ARCH_OMAP3 && ARCH_OMAP34XX]
>   depends on [ARCH_OMAP3 && ARCH_OMAP34XX]
>   default [n] if [ARCH_OMAP3 && ARCH_OMAP34XX]
>   inherited [ARCH_OMAP3 && ARCH_OMAP34XX]
>  }
>  if [ARCH_ORION5X] {
>   menu "Orion Implementations" {
>    depends on [ARCH_ORION5X]
>    config MACH_DB88F5281 boolean {
>     prompt "Marvell Orion-2 Development Board" if [ARCH_ORION5X]
>     select I2C_BOARDINFO if [ARCH_ORION5X]
>     inherited [ARCH_ORION5X]
>    }
>    config MACH_RD88F5182 boolean {
>     prompt "Marvell Orion-NAS Reference Design" if [ARCH_ORION5X]
>     select I2C_BOARDINFO if [ARCH_ORION5X]
>     inherited [ARCH_ORION5X]
>    }
>    config MACH_KUROBOX_PRO boolean {
>     prompt "KuroBox Pro" if [ARCH_ORION5X]
>     select I2C_BOARDINFO if [ARCH_ORION5X]
>     inherited [ARCH_ORION5X]
>    }
>    config MACH_DNS323 boolean {
>     prompt "D-Link DNS-323" if [ARCH_ORION5X]
>     select I2C_BOARDINFO if [ARCH_ORION5X]
>     inherited [ARCH_ORION5X]
>    }
>    config MACH_TS209 boolean {
>     prompt "QNAP TS-109/TS-209" if [ARCH_ORION5X]
>     inherited [ARCH_ORION5X]
>    }
>    config MACH_TERASTATION_PRO2 boolean {
>     prompt "Buffalo Terastation Pro II/Live" if [ARCH_ORION5X]
>     inherited [ARCH_ORION5X]
>    }
>    config MACH_LINKSTATION_PRO boolean {
>     prompt "Buffalo Linkstation Pro/Live" if [ARCH_ORION5X]
>     select I2C_BOARDINFO if [ARCH_ORION5X]
>     inherited [ARCH_ORION5X]
>    }
>    config MACH_LINKSTATION_MINI boolean {
>     prompt "Buffalo Linkstation Mini" if [ARCH_ORION5X]
>     select I2C_BOARDINFO if [ARCH_ORION5X]
>     inherited [ARCH_ORION5X]
>    }
>    config MACH_TS409 boolean {
>     prompt "QNAP TS-409" if [ARCH_ORION5X]
>     inherited [ARCH_ORION5X]
>    }
>    config MACH_WRT350N_V2 boolean {
>     prompt "Linksys WRT350N v2" if [ARCH_ORION5X]
>     inherited [ARCH_ORION5X]
>    }
>    config MACH_TS78XX boolean {
>     prompt "Technologic Systems TS-78xx" if [ARCH_ORION5X]
>     select PM if [ARCH_ORION5X]
>     inherited [ARCH_ORION5X]
>    }
>    config MACH_MV2120 boolean {
>     prompt "HP Media Vault mv2120" if [ARCH_ORION5X]
>     inherited [ARCH_ORION5X]
>    }
>    config MACH_EDMINI_V2 boolean {
>     prompt "LaCie Ethernet Disk mini V2" if [ARCH_ORION5X]
>     select I2C_BOARDINFO if [ARCH_ORION5X]
>     inherited [ARCH_ORION5X]
>    }
>    config MACH_D2NET boolean {
>     prompt "LaCie d2 Network" if [ARCH_ORION5X]
>     select I2C_BOARDINFO if [ARCH_ORION5X]
>     inherited [ARCH_ORION5X]
>    }
>    config MACH_BIGDISK boolean {
>     prompt "LaCie Big Disk Network" if [ARCH_ORION5X]
>     select I2C_BOARDINFO if [ARCH_ORION5X]
>     inherited [ARCH_ORION5X]
>    }
>    config MACH_NET2BIG boolean {
>     prompt "LaCie 2Big Network" if [ARCH_ORION5X]
>     select I2C_BOARDINFO if [ARCH_ORION5X]
>     inherited [ARCH_ORION5X]
>    }
>    config MACH_MSS2 boolean {
>     prompt "Maxtor Shared Storage II" if [ARCH_ORION5X]
>     inherited [ARCH_ORION5X]
>    }
>    config MACH_WNR854T boolean {
>     prompt "Netgear WNR854T" if [ARCH_ORION5X]
>     inherited [ARCH_ORION5X]
>    }
>    config MACH_RD88F5181L_GE boolean {
>     prompt "Marvell Orion-VoIP GE Reference Design" if [ARCH_ORION5X]
>     inherited [ARCH_ORION5X]
>    }
>    config MACH_RD88F5181L_FXO boolean {
>     prompt "Marvell Orion-VoIP FXO Reference Design" if [ARCH_ORION5X]
>     inherited [ARCH_ORION5X]
>    }
>    config MACH_RD88F6183AP_GE boolean {
>     prompt "Marvell Orion-1-90 AP GE Reference Design" if [ARCH_ORION5X]
>     inherited [ARCH_ORION5X]
>    }
>   }
>  }
>  if [ARCH_PXA] {
>   menu "Intel PXA2xx/PXA3xx Implementations" {
>    depends on [ARCH_PXA]
>    config ARCH_LUBBOCK boolean {
>     prompt "Intel DBPXA250 Development Platform (aka Lubbock)" if [ARCH_PXA]
>     select PXA25x if [ARCH_PXA]
>     select SA1111 if [ARCH_PXA]
>     select PXA_HAVE_BOARD_IRQS if [ARCH_PXA]
>     inherited [ARCH_PXA]
>    }
>    config MACH_MAINSTONE boolean {
>     prompt "Intel HCDDBBVA0 Development Platform (aka Mainstone)" if [ARCH_PXA]
>     select PXA27x if [ARCH_PXA]
>     select HAVE_PWM if [ARCH_PXA]
>     select PXA_HAVE_BOARD_IRQS if [ARCH_PXA]
>     inherited [ARCH_PXA]
>    }
>    config MACH_ZYLONITE boolean {
>     select PXA3xx if [ARCH_PXA]
>     select PXA_SSP if [ARCH_PXA]
>     select HAVE_PWM if [ARCH_PXA]
>     select PXA_HAVE_BOARD_IRQS if [ARCH_PXA]
>     inherited [ARCH_PXA]
>    }
>    config MACH_ZYLONITE300 boolean {
>     prompt "PXA3xx Development Platform (aka Zylonite) PXA300/310" if [ARCH_PXA]
>     select CPU_PXA300 if [ARCH_PXA]
>     select CPU_PXA310 if [ARCH_PXA]
>     select MACH_ZYLONITE if [ARCH_PXA]
>     inherited [ARCH_PXA]
>    }
>    config MACH_ZYLONITE320 boolean {
>     prompt "PXA3xx Development Platform (aka Zylonite) PXA320" if [ARCH_PXA]
>     select CPU_PXA320 if [ARCH_PXA]
>     select MACH_ZYLONITE if [ARCH_PXA]
>     inherited [ARCH_PXA]
>    }
>    config MACH_LITTLETON boolean {
>     prompt "PXA3xx Form Factor Platform (aka Littleton)" if [ARCH_PXA]
>     select PXA3xx if [ARCH_PXA]
>     select CPU_PXA300 if [ARCH_PXA]
>     select CPU_PXA310 if [ARCH_PXA]
>     select PXA_SSP if [ARCH_PXA]
>     inherited [ARCH_PXA]
>    }
>    config MACH_TAVOREVB boolean {
>     prompt "PXA930 Evaluation Board (aka TavorEVB)" if [ARCH_PXA]
>     select PXA3xx if [ARCH_PXA]
>     select CPU_PXA930 if [ARCH_PXA]
>     prompt "Marvell's PXA910 TavorEVB Development Board" if [ARCH_MMP]
>     select CPU_PXA910 if [ARCH_MMP]
>     inherited [ARCH_PXA]
>    }
>    config MACH_SAAR boolean {
>     prompt "PXA930 Handheld Platform (aka SAAR)" if [ARCH_PXA]
>     select PXA3xx if [ARCH_PXA]
>     select CPU_PXA930 if [ARCH_PXA]
>     inherited [ARCH_PXA]
>    }
>    config ARCH_PXA_IDP boolean {
>     prompt "Accelent Xscale IDP" if [ARCH_PXA]
>     select PXA25x if [ARCH_PXA]
>     inherited [ARCH_PXA]
>    }
>    config ARCH_VIPER boolean {
>     prompt "Arcom/Eurotech VIPER SBC" if [ARCH_PXA]
>     select PXA25x if [ARCH_PXA]
>     select ISA if [ARCH_PXA]
>     select I2C_GPIO if [ARCH_PXA]
>     select HAVE_PWM if [ARCH_PXA]
>     select PXA_HAVE_BOARD_IRQS if [ARCH_PXA]
>     select PXA_HAVE_ISA_IRQS if [ARCH_PXA]
>     select ARCOM_PCMCIA if [ARCH_PXA]
>     inherited [ARCH_PXA]
>    }
>    config MACH_ARCOM_ZEUS boolean {
>     prompt "Arcom/Eurotech ZEUS SBC" if [ARCH_PXA]
>     select PXA27x if [ARCH_PXA]
>     select ISA if [ARCH_PXA]
>     select PXA_HAVE_BOARD_IRQS if [ARCH_PXA]
>     select PXA_HAVE_ISA_IRQS if [ARCH_PXA]
>     select ARCOM_PCMCIA if [ARCH_PXA]
>     inherited [ARCH_PXA]
>    }
>    config MACH_BALLOON3 boolean {
>     prompt "Balloon 3 board" if [ARCH_PXA]
>     select PXA27x if [ARCH_PXA]
>     select IWMMXT if [ARCH_PXA]
>     select PXA_HAVE_BOARD_IRQS if [ARCH_PXA]
>     inherited [ARCH_PXA]
>    }
>    config MACH_CSB726 boolean {
>     prompt "Enable Cogent CSB726 System On a Module" if [ARCH_PXA]
>     select PXA27x if [ARCH_PXA]
>     select IWMMXT if [ARCH_PXA]
>     inherited [ARCH_PXA]
>     config CSB726_CSB701 boolean {
>      prompt "Enable support for CSB701 baseboard" if [ARCH_PXA && MACH_CSB726]
>      depends on [MACH_CSB726]
>      inherited [ARCH_PXA && MACH_CSB726]
>     }
>    }
>    config MACH_ARMCORE boolean {
>     prompt "CompuLab CM-X255/CM-X270 modules" if [ARCH_PXA]
>     select PXA27x if [ARCH_PXA]
>     select IWMMXT if [ARCH_PXA]
>     select PXA25x if [ARCH_PXA]
>     select PXA_SSP if [ARCH_PXA]
>     inherited [ARCH_PXA]
>    }
>    config MACH_EM_X270 boolean {
>     prompt "CompuLab EM-x270 platform" if [ARCH_PXA]
>     select PXA27x if [ARCH_PXA]
>     inherited [ARCH_PXA]
>    }
>    config MACH_EXEDA boolean {
>     prompt "CompuLab eXeda platform" if [ARCH_PXA]
>     select PXA27x if [ARCH_PXA]
>     inherited [ARCH_PXA]
>    }
>    config MACH_CM_X300 boolean {
>     prompt "CompuLab CM-X300 modules" if [ARCH_PXA]
>     select PXA3xx if [ARCH_PXA]
>     select CPU_PXA300 if [ARCH_PXA]
>     select CPU_PXA310 if [ARCH_PXA]
>     select HAVE_PWM if [ARCH_PXA]
>     inherited [ARCH_PXA]
>    }
>    config ARCH_GUMSTIX boolean {
>     prompt "Gumstix XScale 255 boards" if [ARCH_PXA]
>     select PXA25x if [ARCH_PXA]
>     inherited [ARCH_PXA]
>     choice boolean {
>      prompt "Gumstix Carrier/Expansion Board" if [ARCH_PXA && ARCH_GUMSTIX]
>      depends on [ARCH_GUMSTIX]
>      config GUMSTIX_AM200EPD boolean {
>       prompt "Enable AM200EPD board support" if [<choice>]
>       inherited [<choice>]
>      }
>      config GUMSTIX_AM300EPD boolean {
>       prompt "Enable AM300EPD board support" if [<choice>]
>       inherited [<choice>]
>      }
>     }
>    }
>    config MACH_INTELMOTE2 boolean {
>     prompt "Intel Mote 2 Platform" if [ARCH_PXA]
>     select PXA27x if [ARCH_PXA]
>     select IWMMXT if [ARCH_PXA]
>     select PXA_HAVE_BOARD_IRQS if [ARCH_PXA]
>     inherited [ARCH_PXA]
>    }
>    config MACH_STARGATE2 boolean {
>     prompt "Intel Stargate 2 Platform" if [ARCH_PXA]
>     select PXA27x if [ARCH_PXA]
>     select IWMMXT if [ARCH_PXA]
>     select PXA_HAVE_BOARD_IRQS if [ARCH_PXA]
>     inherited [ARCH_PXA]
>    }
>    config MACH_XCEP boolean {
>     prompt "Iskratel Electronics XCEP" if [ARCH_PXA]
>     select PXA25x if [ARCH_PXA]
>     select MTD if [ARCH_PXA]
>     select MTD_PARTITIONS if [ARCH_PXA]
>     select MTD_PHYSMAP if [ARCH_PXA]
>     select MTD_CFI_INTELEXT if [ARCH_PXA]
>     select MTD_CFI if [ARCH_PXA]
>     select MTD_CHAR if [ARCH_PXA]
>     select SMC91X if [ARCH_PXA]
>     select PXA_SSP if [ARCH_PXA]
>     inherited [ARCH_PXA]
>    }
>    config TRIZEPS_PXA boolean {
>     prompt "PXA based Keith und Koep Trizeps DIMM-Modules" if [ARCH_PXA]
>     inherited [ARCH_PXA]
>     config MACH_TRIZEPS4 boolean {
>      prompt "Keith und Koep Trizeps4 DIMM-Module" if [ARCH_PXA && TRIZEPS_PXA]
>      depends on [TRIZEPS_PXA]
>      select TRIZEPS_PCMCIA if [ARCH_PXA && TRIZEPS_PXA]
>      select PXA27x if [ARCH_PXA && TRIZEPS_PXA]
>      inherited [ARCH_PXA && TRIZEPS_PXA]
>     }
>     config MACH_TRIZEPS4WL boolean {
>      prompt "Keith und Koep Trizeps4-WL DIMM-Module" if [ARCH_PXA && TRIZEPS_PXA]
>      depends on [TRIZEPS_PXA]
>      select TRIZEPS_PCMCIA if [ARCH_PXA && TRIZEPS_PXA]
>      select PXA27x if [ARCH_PXA && TRIZEPS_PXA]
>      select PXA_SSP if [ARCH_PXA && TRIZEPS_PXA]
>      inherited [ARCH_PXA && TRIZEPS_PXA]
>     }
>     choice boolean {
>      prompt "Select base board for Trizeps module" if [ARCH_PXA && TRIZEPS_PXA]
>      depends on [TRIZEPS_PXA]
>      config MACH_TRIZEPS_CONXS boolean {
>       prompt "ConXS Eval Board" if [<choice>]
>       inherited [<choice>]
>      }
>      config MACH_TRIZEPS_UCONXS boolean {
>       prompt "uConXS Eval Board" if [<choice>]
>       inherited [<choice>]
>      }
>      config MACH_TRIZEPS_ANY boolean {
>       prompt "another Board" if [<choice>]
>       inherited [<choice>]
>      }
>     }
>    }
>    config ARCOM_PCMCIA boolean {
>     inherited [ARCH_PXA]
>    }
>    config TRIZEPS_PCMCIA boolean {
>     inherited [ARCH_PXA]
>    }
>    config MACH_LOGICPD_PXA270 boolean {
>     prompt "LogicPD PXA270 Card Engine Development Platform" if [ARCH_PXA]
>     select PXA27x if [ARCH_PXA]
>     select HAVE_PWM if [ARCH_PXA]
>     select PXA_HAVE_BOARD_IRQS if [ARCH_PXA]
>     inherited [ARCH_PXA]
>    }
>    config MACH_PCM027 boolean {
>     prompt "Phytec phyCORE-PXA270 CPU module (PCM-027)" if [ARCH_PXA]
>     select PXA27x if [ARCH_PXA]
>     select IWMMXT if [ARCH_PXA]
>     select PXA_SSP if [ARCH_PXA]
>     select PXA_HAVE_BOARD_IRQS if [ARCH_PXA]
>     inherited [ARCH_PXA]
>     config MACH_PCM990_BASEBOARD boolean {
>      prompt "PHYTEC PCM-990 development board" if [ARCH_PXA && MACH_PCM027]
>      select HAVE_PWM if [ARCH_PXA && MACH_PCM027]
>      depends on [MACH_PCM027]
>      inherited [ARCH_PXA && MACH_PCM027]
>      choice boolean {
>       prompt "display on pcm990" if [ARCH_PXA && MACH_PCM990_BASEBOARD]
>       depends on [MACH_PCM990_BASEBOARD]
>       config PCM990_DISPLAY_SHARP boolean {
>        prompt "sharp lq084v1dg21 stn display" if [<choice>]
>        inherited [<choice>]
>       }
>       config PCM990_DISPLAY_NEC boolean {
>        prompt "nec nl6448bc20_18d tft display" if [<choice>]
>        inherited [<choice>]
>       }
>       config PCM990_DISPLAY_NONE boolean {
>        prompt "no display" if [<choice>]
>        inherited [<choice>]
>       }
>      }
>     }
>    }
>    config MACH_COLIBRI boolean {
>     prompt "Toradex Colibri PXA270" if [ARCH_PXA]
>     select PXA27x if [ARCH_PXA]
>     inherited [ARCH_PXA]
>    }
>    config MACH_COLIBRI300 boolean {
>     prompt "Toradex Colibri PXA300/310" if [ARCH_PXA]
>     select PXA3xx if [ARCH_PXA]
>     select CPU_PXA300 if [ARCH_PXA]
>     select CPU_PXA310 if [ARCH_PXA]
>     inherited [ARCH_PXA]
>    }
>    config MACH_COLIBRI320 boolean {
>     prompt "Toradex Colibri PXA320" if [ARCH_PXA]
>     select PXA3xx if [ARCH_PXA]
>     select CPU_PXA320 if [ARCH_PXA]
>     inherited [ARCH_PXA]
>    }
>    config MACH_H4700 boolean {
>     prompt "HP iPAQ hx4700" if [ARCH_PXA]
>     select PXA27x if [ARCH_PXA]
>     select IWMMXT if [ARCH_PXA]
>     select PXA_SSP if [ARCH_PXA]
>     select HAVE_PWM if [ARCH_PXA]
>     select PXA_HAVE_BOARD_IRQS if [ARCH_PXA]
>     inherited [ARCH_PXA]
>    }
>    config MACH_H5000 boolean {
>     prompt "HP iPAQ h5000" if [ARCH_PXA]
>     select PXA25x if [ARCH_PXA]
>     inherited [ARCH_PXA]
>    }
>    config MACH_HIMALAYA boolean {
>     prompt "HTC Himalaya Support" if [ARCH_PXA]
>     select CPU_PXA26x if [ARCH_PXA]
>     select FB_W100 if [ARCH_PXA]
>     inherited [ARCH_PXA]
>    }
>    config MACH_MAGICIAN boolean {
>     prompt "Enable HTC Magician Support" if [ARCH_PXA]
>     select PXA27x if [ARCH_PXA]
>     select IWMMXT if [ARCH_PXA]
>     select PXA_SSP if [ARCH_PXA]
>     select HAVE_PWM if [ARCH_PXA]
>     select PXA_HAVE_BOARD_IRQS if [ARCH_PXA]
>     inherited [ARCH_PXA]
>    }
>    config MACH_MIOA701 boolean {
>     prompt "Mitac Mio A701 Support" if [ARCH_PXA]
>     select PXA27x if [ARCH_PXA]
>     select IWMMXT if [ARCH_PXA]
>     select HAVE_PWM if [ARCH_PXA]
>     select GPIO_SYSFS if [ARCH_PXA]
>     inherited [ARCH_PXA]
>    }
>    config PXA_EZX boolean {
>     prompt "Motorola EZX Platform" if [ARCH_PXA]
>     select PXA27x if [ARCH_PXA]
>     select IWMMXT if [ARCH_PXA]
>     select HAVE_PWM if [ARCH_PXA]
>     select PXA_HAVE_BOARD_IRQS if [ARCH_PXA]
>     inherited [ARCH_PXA]
>     config MACH_EZX_A780 boolean {
>      prompt "Motorola EZX A780" if [ARCH_PXA && PXA_EZX]
>      default [y] if [ARCH_PXA && PXA_EZX]
>      depends on [PXA_EZX]
>      inherited [ARCH_PXA && PXA_EZX]
>     }
>     config MACH_EZX_E680 boolean {
>      prompt "Motorola EZX E680" if [ARCH_PXA && PXA_EZX]
>      default [y] if [ARCH_PXA && PXA_EZX]
>      depends on [PXA_EZX]
>      inherited [ARCH_PXA && PXA_EZX]
>     }
>     config MACH_EZX_A1200 boolean {
>      prompt "Motorola EZX A1200" if [ARCH_PXA && PXA_EZX]
>      default [y] if [ARCH_PXA && PXA_EZX]
>      depends on [PXA_EZX]
>      inherited [ARCH_PXA && PXA_EZX]
>     }
>     config MACH_EZX_A910 boolean {
>      prompt "Motorola EZX A910" if [ARCH_PXA && PXA_EZX]
>      default [y] if [ARCH_PXA && PXA_EZX]
>      depends on [PXA_EZX]
>      inherited [ARCH_PXA && PXA_EZX]
>     }
>     config MACH_EZX_E6 boolean {
>      prompt "Motorola EZX E6" if [ARCH_PXA && PXA_EZX]
>      default [y] if [ARCH_PXA && PXA_EZX]
>      depends on [PXA_EZX]
>      inherited [ARCH_PXA && PXA_EZX]
>     }
>     config MACH_EZX_E2 boolean {
>      prompt "Motorola EZX E2" if [ARCH_PXA && PXA_EZX]
>      default [y] if [ARCH_PXA && PXA_EZX]
>      depends on [PXA_EZX]
>      inherited [ARCH_PXA && PXA_EZX]
>     }
>    }
>    config MACH_MP900C boolean {
>     prompt "Nec Mobilepro 900/c" if [ARCH_PXA]
>     select PXA25x if [ARCH_PXA]
>     inherited [ARCH_PXA]
>    }
>    config ARCH_PXA_PALM boolean {
>     prompt "PXA based Palm PDAs" if [ARCH_PXA]
>     select HAVE_PWM if [ARCH_PXA]
>     inherited [ARCH_PXA]
>     config MACH_PALMTE2 boolean {
>      prompt "Palm Tungsten|E2" if [ARCH_PXA && ARCH_PXA_PALM]
>      default [y] if [ARCH_PXA && ARCH_PXA_PALM]
>      depends on [ARCH_PXA_PALM]
>      select PXA25x if [ARCH_PXA && ARCH_PXA_PALM]
>      inherited [ARCH_PXA && ARCH_PXA_PALM]
>     }
>     config MACH_PALMTC boolean {
>      prompt "Palm Tungsten|C" if [ARCH_PXA && ARCH_PXA_PALM]
>      default [y] if [ARCH_PXA && ARCH_PXA_PALM]
>      depends on [ARCH_PXA_PALM]
>      select PXA25x if [ARCH_PXA && ARCH_PXA_PALM]
>      inherited [ARCH_PXA && ARCH_PXA_PALM]
>     }
>     config MACH_PALMT5 boolean {
>      prompt "Palm Tungsten|T5" if [ARCH_PXA && ARCH_PXA_PALM]
>      default [y] if [ARCH_PXA && ARCH_PXA_PALM]
>      depends on [ARCH_PXA_PALM]
>      select PXA27x if [ARCH_PXA && ARCH_PXA_PALM]
>      select IWMMXT if [ARCH_PXA && ARCH_PXA_PALM]
>      inherited [ARCH_PXA && ARCH_PXA_PALM]
>     }
>     config MACH_PALMTX boolean {
>      prompt "Palm T|X" if [ARCH_PXA && ARCH_PXA_PALM]
>      default [y] if [ARCH_PXA && ARCH_PXA_PALM]
>      depends on [ARCH_PXA_PALM]
>      select PXA27x if [ARCH_PXA && ARCH_PXA_PALM]
>      select IWMMXT if [ARCH_PXA && ARCH_PXA_PALM]
>      inherited [ARCH_PXA && ARCH_PXA_PALM]
>     }
>     config MACH_PALMZ72 boolean {
>      prompt "Palm Zire 72" if [ARCH_PXA && ARCH_PXA_PALM]
>      default [y] if [ARCH_PXA && ARCH_PXA_PALM]
>      depends on [ARCH_PXA_PALM]
>      select PXA27x if [ARCH_PXA && ARCH_PXA_PALM]
>      select IWMMXT if [ARCH_PXA && ARCH_PXA_PALM]
>      inherited [ARCH_PXA && ARCH_PXA_PALM]
>     }
>     config MACH_PALMLD boolean {
>      prompt "Palm LifeDrive" if [ARCH_PXA && ARCH_PXA_PALM]
>      default [y] if [ARCH_PXA && ARCH_PXA_PALM]
>      depends on [ARCH_PXA_PALM]
>      select PXA27x if [ARCH_PXA && ARCH_PXA_PALM]
>      select IWMMXT if [ARCH_PXA && ARCH_PXA_PALM]
>      inherited [ARCH_PXA && ARCH_PXA_PALM]
>     }
>     config PALM_TREO boolean {
>      depends on [ARCH_PXA_PALM]
>      inherited [ARCH_PXA && ARCH_PXA_PALM]
>     }
>     config MACH_CENTRO boolean {
>      prompt "Palm Centro 685 (GSM)" if [ARCH_PXA && ARCH_PXA_PALM]
>      default [y] if [ARCH_PXA && ARCH_PXA_PALM]
>      depends on [ARCH_PXA_PALM]
>      select PXA27x if [ARCH_PXA && ARCH_PXA_PALM]
>      select IWMMXT if [ARCH_PXA && ARCH_PXA_PALM]
>      select PALM_TREO if [ARCH_PXA && ARCH_PXA_PALM]
>      inherited [ARCH_PXA && ARCH_PXA_PALM]
>     }
>     config MACH_TREO680 boolean {
>      prompt "Palm Treo 680" if [ARCH_PXA && ARCH_PXA_PALM]
>      default [y] if [ARCH_PXA && ARCH_PXA_PALM]
>      depends on [ARCH_PXA_PALM]
>      select PXA27x if [ARCH_PXA && ARCH_PXA_PALM]
>      select IWMMXT if [ARCH_PXA && ARCH_PXA_PALM]
>      select PALM_TREO if [ARCH_PXA && ARCH_PXA_PALM]
>      inherited [ARCH_PXA && ARCH_PXA_PALM]
>     }
>    }
>    config PXA_SHARPSL boolean {
>     prompt "SHARP Zaurus SL-5600, SL-C7xx and SL-Cxx00 Models" if [ARCH_PXA]
>     select SHARP_SCOOP if [ARCH_PXA]
>     select SHARP_PARAM if [ARCH_PXA]
>     inherited [ARCH_PXA]
>    }
>    config SHARPSL_PM boolean {
>     select APM_EMULATION if [ARCH_PXA]
>     inherited [ARCH_PXA]
>    }
>    config CORGI_SSP_DEPRECATED boolean {
>     select PXA_SSP if [ARCH_PXA]
>     inherited [ARCH_PXA]
>    }
>    config MACH_POODLE boolean {
>     prompt "Enable Sharp SL-5600 (Poodle) Support" if [ARCH_PXA && PXA_SHARPSL]
>     depends on [PXA_SHARPSL]
>     select PXA25x if [ARCH_PXA && PXA_SHARPSL]
>     select SHARP_LOCOMO if [ARCH_PXA && PXA_SHARPSL]
>     select PXA_SSP if [ARCH_PXA && PXA_SHARPSL]
>     inherited [ARCH_PXA && PXA_SHARPSL]
>    }
>    config MACH_CORGI boolean {
>     prompt "Enable Sharp SL-C700 (Corgi) Support" if [ARCH_PXA && PXA_SHARPSL]
>     depends on [PXA_SHARPSL]
>     select PXA25x if [ARCH_PXA && PXA_SHARPSL]
>     select PXA_SHARP_C7xx if [ARCH_PXA && PXA_SHARPSL]
>     inherited [ARCH_PXA && PXA_SHARPSL]
>    }
>    config MACH_SHEPHERD boolean {
>     prompt "Enable Sharp SL-C750 (Shepherd) Support" if [ARCH_PXA && PXA_SHARPSL]
>     depends on [PXA_SHARPSL]
>     select PXA25x if [ARCH_PXA && PXA_SHARPSL]
>     select PXA_SHARP_C7xx if [ARCH_PXA && PXA_SHARPSL]
>     inherited [ARCH_PXA && PXA_SHARPSL]
>    }
>    config MACH_HUSKY boolean {
>     prompt "Enable Sharp SL-C760 (Husky) Support" if [ARCH_PXA && PXA_SHARPSL]
>     depends on [PXA_SHARPSL]
>     select PXA25x if [ARCH_PXA && PXA_SHARPSL]
>     select PXA_SHARP_C7xx if [ARCH_PXA && PXA_SHARPSL]
>     inherited [ARCH_PXA && PXA_SHARPSL]
>    }
>    config MACH_AKITA boolean {
>     prompt "Enable Sharp SL-1000 (Akita) Support" if [ARCH_PXA && PXA_SHARPSL]
>     depends on [PXA_SHARPSL]
>     select PXA27x if [ARCH_PXA && PXA_SHARPSL]
>     select PXA_SHARP_Cxx00 if [ARCH_PXA && PXA_SHARPSL]
>     select MACH_SPITZ if [ARCH_PXA && PXA_SHARPSL]
>     select I2C if [ARCH_PXA && PXA_SHARPSL]
>     select I2C_PXA if [ARCH_PXA && PXA_SHARPSL]
>     inherited [ARCH_PXA && PXA_SHARPSL]
>    }
>    config MACH_SPITZ boolean {
>     prompt "Enable Sharp Zaurus SL-3000 (Spitz) Support" if [ARCH_PXA && PXA_SHARPSL]
>     depends on [PXA_SHARPSL]
>     select PXA27x if [ARCH_PXA && PXA_SHARPSL]
>     select PXA_SHARP_Cxx00 if [ARCH_PXA && PXA_SHARPSL]
>     inherited [ARCH_PXA && PXA_SHARPSL]
>    }
>    config MACH_BORZOI boolean {
>     prompt "Enable Sharp Zaurus SL-3100 (Borzoi) Support" if [ARCH_PXA && PXA_SHARPSL]
>     depends on [PXA_SHARPSL]
>     select PXA27x if [ARCH_PXA && PXA_SHARPSL]
>     select PXA_SHARP_Cxx00 if [ARCH_PXA && PXA_SHARPSL]
>     inherited [ARCH_PXA && PXA_SHARPSL]
>    }
>    config MACH_TOSA boolean {
>     prompt "Enable Sharp SL-6000x (Tosa) Support" if [ARCH_PXA && PXA_SHARPSL]
>     depends on [PXA_SHARPSL]
>     select PXA25x if [ARCH_PXA && PXA_SHARPSL]
>     select PXA_HAVE_BOARD_IRQS if [ARCH_PXA && PXA_SHARPSL]
>     inherited [ARCH_PXA && PXA_SHARPSL]
>    }
>    config ARCH_PXA_ESERIES boolean {
>     prompt "PXA based Toshiba e-series PDAs" if [ARCH_PXA]
>     select PXA25x if [ARCH_PXA]
>     select PXA_HAVE_BOARD_IRQS if [ARCH_PXA]
>     inherited [ARCH_PXA]
>     config MACH_E330 boolean {
>      prompt "Toshiba e330" if [ARCH_PXA && ARCH_PXA_ESERIES]
>      default [y] if [ARCH_PXA && ARCH_PXA_ESERIES]
>      depends on [ARCH_PXA_ESERIES]
>      inherited [ARCH_PXA && ARCH_PXA_ESERIES]
>     }
>     config MACH_E350 boolean {
>      prompt "Toshiba e350" if [ARCH_PXA && ARCH_PXA_ESERIES]
>      default [y] if [ARCH_PXA && ARCH_PXA_ESERIES]
>      depends on [ARCH_PXA_ESERIES]
>      inherited [ARCH_PXA && ARCH_PXA_ESERIES]
>     }
>     config MACH_E740 boolean {
>      prompt "Toshiba e740" if [ARCH_PXA && ARCH_PXA_ESERIES]
>      default [y] if [ARCH_PXA && ARCH_PXA_ESERIES]
>      depends on [ARCH_PXA_ESERIES]
>      select FB_W100 if [ARCH_PXA && ARCH_PXA_ESERIES]
>      inherited [ARCH_PXA && ARCH_PXA_ESERIES]
>     }
>     config MACH_E750 boolean {
>      prompt "Toshiba e750" if [ARCH_PXA && ARCH_PXA_ESERIES]
>      default [y] if [ARCH_PXA && ARCH_PXA_ESERIES]
>      depends on [ARCH_PXA_ESERIES]
>      select FB_W100 if [ARCH_PXA && ARCH_PXA_ESERIES]
>      inherited [ARCH_PXA && ARCH_PXA_ESERIES]
>     }
>     config MACH_E400 boolean {
>      prompt "Toshiba e400" if [ARCH_PXA && ARCH_PXA_ESERIES]
>      default [y] if [ARCH_PXA && ARCH_PXA_ESERIES]
>      depends on [ARCH_PXA_ESERIES]
>      inherited [ARCH_PXA && ARCH_PXA_ESERIES]
>     }
>     config MACH_E800 boolean {
>      prompt "Toshiba e800" if [ARCH_PXA && ARCH_PXA_ESERIES]
>      default [y] if [ARCH_PXA && ARCH_PXA_ESERIES]
>      depends on [ARCH_PXA_ESERIES]
>      select FB_W100 if [ARCH_PXA && ARCH_PXA_ESERIES]
>      inherited [ARCH_PXA && ARCH_PXA_ESERIES]
>     }
>    }
>   }
>   config PXA25x boolean {
>    select CPU_XSCALE if [ARCH_PXA]
>    inherited [ARCH_PXA]
>   }
>   config PXA27x boolean {
>    select CPU_XSCALE if [ARCH_PXA]
>    inherited [ARCH_PXA]
>   }
>   config CPU_PXA26x boolean {
>    select PXA25x if [ARCH_PXA]
>    inherited [ARCH_PXA]
>   }
>   config PXA3xx boolean {
>    select CPU_XSC3 if [ARCH_PXA]
>    inherited [ARCH_PXA]
>   }
>   config CPU_PXA300 boolean {
>    select PXA3xx if [ARCH_PXA]
>    inherited [ARCH_PXA]
>   }
>   config CPU_PXA310 boolean {
>    select CPU_PXA300 if [ARCH_PXA]
>    inherited [ARCH_PXA]
>   }
>   config CPU_PXA320 boolean {
>    select PXA3xx if [ARCH_PXA]
>    inherited [ARCH_PXA]
>   }
>   config CPU_PXA930 boolean {
>    select PXA3xx if [ARCH_PXA]
>    inherited [ARCH_PXA]
>   }
>   config CPU_PXA935 boolean {
>    select CPU_PXA930 if [ARCH_PXA]
>    inherited [ARCH_PXA]
>   }
>   config CPU_PXA950 boolean {
>    select CPU_PXA930 if [ARCH_PXA]
>    inherited [ARCH_PXA]
>   }
>   config PXA_SHARP_C7xx boolean {
>    select PXA_SSP if [ARCH_PXA]
>    select SHARPSL_PM if [ARCH_PXA]
>    inherited [ARCH_PXA]
>   }
>   config PXA_SHARP_Cxx00 boolean {
>    select PXA_SSP if [ARCH_PXA]
>    select SHARPSL_PM if [ARCH_PXA]
>    inherited [ARCH_PXA]
>   }
>   config PXA_SSP tristate {
>    inherited [ARCH_PXA]
>   }
>   config TOSA_BT tristate {
>    prompt "Control the state of built-in bluetooth chip on Sharp SL-6000" if [ARCH_PXA && MACH_TOSA]
>    depends on [MACH_TOSA]
>    select RFKILL if [ARCH_PXA && MACH_TOSA]
>    inherited [ARCH_PXA && MACH_TOSA]
>   }
>   config PXA_HAVE_BOARD_IRQS boolean {
>    inherited [ARCH_PXA]
>   }
>   config PXA_HAVE_ISA_IRQS boolean {
>    inherited [ARCH_PXA]
>   }
>  }
>  if [PLAT_PXA] {
>  }
>  if [ARCH_MMP] {
>   menu "Marvell PXA168/910 Implmentations" {
>    depends on [ARCH_MMP]
>    config MACH_ASPENITE boolean {
>     prompt "Marvell's PXA168 Aspenite Development Board" if [ARCH_MMP]
>     select CPU_PXA168 if [ARCH_MMP]
>     inherited [ARCH_MMP]
>    }
>    config MACH_ZYLONITE2 boolean {
>     prompt "Marvell's PXA168 Zylonite2 Development Board" if [ARCH_MMP]
>     select CPU_PXA168 if [ARCH_MMP]
>     inherited [ARCH_MMP]
>    }
>    config MACH_TAVOREVB boolean {
>     prompt "PXA930 Evaluation Board (aka TavorEVB)" if [ARCH_PXA]
>     select PXA3xx if [ARCH_PXA]
>     select CPU_PXA930 if [ARCH_PXA]
>     prompt "Marvell's PXA910 TavorEVB Development Board" if [ARCH_MMP]
>     select CPU_PXA910 if [ARCH_MMP]
>     inherited [ARCH_MMP]
>    }
>    config MACH_TTC_DKB boolean {
>     prompt "Marvell's PXA910 TavorEVB Development Board" if [ARCH_MMP]
>     select CPU_PXA910 if [ARCH_MMP]
>     inherited [ARCH_MMP]
>    }
>   }
>   config CPU_PXA168 boolean {
>    select CPU_MOHAWK if [ARCH_MMP]
>    inherited [ARCH_MMP]
>   }
>   config CPU_PXA910 boolean {
>    select CPU_MOHAWK if [ARCH_MMP]
>    inherited [ARCH_MMP]
>   }
>  }
>  menu "RealView platform type" {
>   depends on [ARCH_REALVIEW]
>   config MACH_REALVIEW_EB boolean {
>    prompt "Support RealView/EB platform" if [ARCH_REALVIEW]
>    select ARM_GIC if [ARCH_REALVIEW]
>    inherited [ARCH_REALVIEW]
>    config REALVIEW_EB_A9MP boolean {
>     prompt "Support Multicore Cortex-A9" if [ARCH_REALVIEW && MACH_REALVIEW_EB]
>     depends on [MACH_REALVIEW_EB]
>     select CPU_V7 if [ARCH_REALVIEW && MACH_REALVIEW_EB]
>     inherited [ARCH_REALVIEW && MACH_REALVIEW_EB]
>    }
>    config REALVIEW_EB_ARM11MP boolean {
>     prompt "Support ARM11MPCore tile" if [ARCH_REALVIEW && MACH_REALVIEW_EB]
>     depends on [MACH_REALVIEW_EB]
>     select CPU_V6 if [ARCH_REALVIEW && MACH_REALVIEW_EB]
>     inherited [ARCH_REALVIEW && MACH_REALVIEW_EB]
>     config REALVIEW_EB_ARM11MP_REVB boolean {
>      prompt "Support ARM11MPCore RevB tile" if [ARCH_REALVIEW && REALVIEW_EB_ARM11MP]
>      depends on [REALVIEW_EB_ARM11MP]
>      inherited [ARCH_REALVIEW && REALVIEW_EB_ARM11MP]
>     }
>    }
>   }
>   config MACH_REALVIEW_PB11MP boolean {
>    prompt "Support RealView/PB11MPCore platform" if [ARCH_REALVIEW]
>    select CPU_V6 if [ARCH_REALVIEW]
>    select ARM_GIC if [ARCH_REALVIEW]
>    select HAVE_PATA_PLATFORM if [ARCH_REALVIEW]
>    inherited [ARCH_REALVIEW]
>   }
>   config MACH_REALVIEW_PB1176 boolean {
>    prompt "Support RealView/PB1176 platform" if [ARCH_REALVIEW]
>    select CPU_V6 if [ARCH_REALVIEW]
>    select ARM_GIC if [ARCH_REALVIEW]
>    inherited [ARCH_REALVIEW]
>    config REALVIEW_PB1176_SECURE_FLASH boolean {
>     prompt "Allow access to the secure flash memory block" if [ARCH_REALVIEW && MACH_REALVIEW_PB1176]
>     depends on [MACH_REALVIEW_PB1176]
>     default [n] if [ARCH_REALVIEW && MACH_REALVIEW_PB1176]
>     inherited [ARCH_REALVIEW && MACH_REALVIEW_PB1176]
>    }
>   }
>   config MACH_REALVIEW_PBA8 boolean {
>    prompt "Support RealView/PB-A8 platform" if [ARCH_REALVIEW]
>    select CPU_V7 if [ARCH_REALVIEW]
>    select ARM_GIC if [ARCH_REALVIEW]
>    select HAVE_PATA_PLATFORM if [ARCH_REALVIEW]
>    inherited [ARCH_REALVIEW]
>   }
>   config MACH_REALVIEW_PBX boolean {
>    prompt "Support RealView/PBX platform" if [ARCH_REALVIEW]
>    select ARM_GIC if [ARCH_REALVIEW]
>    select HAVE_PATA_PLATFORM if [ARCH_REALVIEW]
>    select ARCH_SPARSEMEM_ENABLE if [ARCH_REALVIEW && CPU_V7 && !REALVIEW_HIGH_PHYS_OFFSET]
>    select ZONE_DMA if [ARCH_REALVIEW && SPARSEMEM]
>    inherited [ARCH_REALVIEW]
>   }
>   config REALVIEW_HIGH_PHYS_OFFSET boolean {
>    prompt "High physical base address for the RealView platform" if [ARCH_REALVIEW && MMU && !MACH_REALVIEW_PB1176]
>    depends on [MMU && !MACH_REALVIEW_PB1176]
>    default [y] if [ARCH_REALVIEW && MMU && !MACH_REALVIEW_PB1176]
>    inherited [ARCH_REALVIEW && MMU && !MACH_REALVIEW_PB1176]
2975,2984c4477,4769
<  menu "Memory power savings" {
<   depends on [X86_64]
<   config I7300_IDLE_IOAT_CHANNEL boolean {
<    inherited [X86_64]
<   }
<   config I7300_IDLE tristate {
<    prompt "Intel chipset idle memory power saving driver" if [X86_64 && EXPERIMENTAL]
<    select I7300_IDLE_IOAT_CHANNEL if [X86_64 && EXPERIMENTAL]
<    depends on [EXPERIMENTAL]
<    inherited [X86_64 && EXPERIMENTAL]
---
>  if [ARCH_SA1100] {
>   menu "SA11x0 Implementations" {
>    depends on [ARCH_SA1100]
>    config SA1100_ASSABET boolean {
>     prompt "Assabet" if [ARCH_SA1100]
>     select CPU_FREQ_SA1110 if [ARCH_SA1100]
>     inherited [ARCH_SA1100]
>     config ASSABET_NEPONSET boolean {
>      prompt "Include support for Neponset" if [ARCH_SA1100 && SA1100_ASSABET]
>      depends on [SA1100_ASSABET]
>      select SA1111 if [ARCH_SA1100 && SA1100_ASSABET]
>      inherited [ARCH_SA1100 && SA1100_ASSABET]
>     }
>    }
>    config SA1100_CERF boolean {
>     prompt "CerfBoard" if [ARCH_SA1100]
>     select CPU_FREQ_SA1110 if [ARCH_SA1100]
>     inherited [ARCH_SA1100]
>     choice boolean {
>      prompt "Cerf Flash available" if [ARCH_SA1100 && SA1100_CERF]
>      depends on [SA1100_CERF]
>      default [SA1100_CERF_FLASH_8MB] if [ARCH_SA1100 && SA1100_CERF]
>      config SA1100_CERF_FLASH_8MB boolean {
>       prompt "8MB" if [<choice>]
>       inherited [<choice>]
>      }
>      config SA1100_CERF_FLASH_16MB boolean {
>       prompt "16MB" if [<choice>]
>       inherited [<choice>]
>      }
>      config SA1100_CERF_FLASH_32MB boolean {
>       prompt "32MB" if [<choice>]
>       inherited [<choice>]
>      }
>     }
>    }
>    config SA1100_COLLIE boolean {
>     prompt "Sharp Zaurus SL5500" if [ARCH_SA1100]
>     select SHARP_LOCOMO if [ARCH_SA1100]
>     select SHARP_SCOOP if [ARCH_SA1100]
>     select SHARP_PARAM if [ARCH_SA1100]
>     inherited [ARCH_SA1100]
>    }
>    config SA1100_H3100 boolean {
>     prompt "Compaq iPAQ H3100" if [ARCH_SA1100]
>     select HTC_EGPIO if [ARCH_SA1100]
>     select CPU_FREQ_SA1100 if [ARCH_SA1100]
>     inherited [ARCH_SA1100]
>    }
>    config SA1100_H3600 boolean {
>     prompt "Compaq iPAQ H3600/H3700" if [ARCH_SA1100]
>     select HTC_EGPIO if [ARCH_SA1100]
>     select CPU_FREQ_SA1100 if [ARCH_SA1100]
>     inherited [ARCH_SA1100]
>    }
>    config SA1100_BADGE4 boolean {
>     prompt "HP Labs BadgePAD 4" if [ARCH_SA1100]
>     select SA1111 if [ARCH_SA1100]
>     select CPU_FREQ_SA1100 if [ARCH_SA1100]
>     inherited [ARCH_SA1100]
>    }
>    config SA1100_JORNADA720 boolean {
>     prompt "HP Jornada 720" if [ARCH_SA1100]
>     select SA1111 if [ARCH_SA1100]
>     inherited [ARCH_SA1100]
>     config SA1100_JORNADA720_SSP boolean {
>      prompt "HP Jornada 720 Extended SSP driver" if [ARCH_SA1100 && SA1100_JORNADA720]
>      select SA1100_SSP if [ARCH_SA1100 && SA1100_JORNADA720]
>      depends on [SA1100_JORNADA720]
>      inherited [ARCH_SA1100 && SA1100_JORNADA720]
>     }
>    }
>    config SA1100_HACKKIT boolean {
>     prompt "HackKit Core CPU Board" if [ARCH_SA1100]
>     select CPU_FREQ_SA1100 if [ARCH_SA1100]
>     inherited [ARCH_SA1100]
>    }
>    config SA1100_LART boolean {
>     prompt "LART" if [ARCH_SA1100]
>     select CPU_FREQ_SA1100 if [ARCH_SA1100]
>     inherited [ARCH_SA1100]
>    }
>    config SA1100_PLEB boolean {
>     prompt "PLEB" if [ARCH_SA1100]
>     select CPU_FREQ_SA1100 if [ARCH_SA1100]
>     inherited [ARCH_SA1100]
>    }
>    config SA1100_SHANNON boolean {
>     prompt "Shannon" if [ARCH_SA1100]
>     select CPU_FREQ_SA1100 if [ARCH_SA1100]
>     inherited [ARCH_SA1100]
>    }
>    config SA1100_SIMPAD boolean {
>     prompt "Simpad" if [ARCH_SA1100]
>     select CPU_FREQ_SA1110 if [ARCH_SA1100]
>     inherited [ARCH_SA1100]
>    }
>    config SA1100_SSP tristate {
>     prompt "Generic PIO SSP" if [ARCH_SA1100]
>     inherited [ARCH_SA1100]
>    }
>   }
>  }
>  config PLAT_SAMSUNG boolean {
>   depends on [ARCH_S3C2410 || ARCH_S3C24A0 || ARCH_S3C64XX || ARCH_S5PC1XX]
>   default [y] if [ARCH_S3C2410 || ARCH_S3C24A0 || ARCH_S3C64XX || ARCH_S5PC1XX]
>   inherited [ARCH_S3C2410 || ARCH_S3C24A0 || ARCH_S3C64XX || ARCH_S5PC1XX]
>  }
>  if [PLAT_SAMSUNG] {
>  }
>  config PLAT_S3C24XX boolean {
>   depends on [ARCH_S3C2410 || ARCH_S3C24A0]
>   default [y] if [ARCH_S3C2410 || ARCH_S3C24A0]
>   select NO_IOPORT if [ARCH_S3C2410 || ARCH_S3C24A0]
>   select ARCH_REQUIRE_GPIOLIB if [ARCH_S3C2410 || ARCH_S3C24A0]
>   select S3C_DEVICE_NAND if [ARCH_S3C2410 || ARCH_S3C24A0]
>   inherited [ARCH_S3C2410 || ARCH_S3C24A0]
>  }
>  if [PLAT_S3C24XX] {
>   config S3C2410_CLOCK boolean {
>    inherited [PLAT_S3C24XX]
>   }
>   config S3C24XX_DCLK boolean {
>    inherited [PLAT_S3C24XX]
>   }
>   config CPU_S3C244X boolean {
>    depends on [ARCH_S3C2410 && (CPU_S3C2440 || CPU_S3C2442)]
>    inherited [PLAT_S3C24XX && ARCH_S3C2410 && (CPU_S3C2440 || CPU_S3C2442)]
>   }
>   config S3C2440_CPUFREQ boolean {
>    prompt "S3C2440/S3C2442 CPU Frequency scaling support" if [PLAT_S3C24XX && CPU_FREQ_S3C24XX && (CPU_S3C2440 || CPU_S3C2442)]
>    depends on [CPU_FREQ_S3C24XX && (CPU_S3C2440 || CPU_S3C2442)]
>    select S3C2410_CPUFREQ_UTILS if [PLAT_S3C24XX && CPU_FREQ_S3C24XX && (CPU_S3C2440 || CPU_S3C2442)]
>    default [y] if [PLAT_S3C24XX && CPU_FREQ_S3C24XX && (CPU_S3C2440 || CPU_S3C2442)]
>    inherited [PLAT_S3C24XX && CPU_FREQ_S3C24XX && (CPU_S3C2440 || CPU_S3C2442)]
>   }
>   config S3C2440_XTAL_12000000 boolean {
>    inherited [PLAT_S3C24XX]
>   }
>   config S3C2440_XTAL_16934400 boolean {
>    inherited [PLAT_S3C24XX]
>   }
>   config S3C2440_PLL_12000000 boolean {
>    depends on [S3C2440_CPUFREQ && S3C2440_XTAL_12000000]
>    default [y] if [PLAT_S3C24XX && S3C2440_CPUFREQ && S3C2440_XTAL_12000000 && CPU_FREQ_S3C24XX_PLL]
>    inherited [PLAT_S3C24XX && S3C2440_CPUFREQ && S3C2440_XTAL_12000000]
>   }
>   config S3C2440_PLL_16934400 boolean {
>    depends on [S3C2440_CPUFREQ && S3C2440_XTAL_16934400]
>    default [y] if [PLAT_S3C24XX && S3C2440_CPUFREQ && S3C2440_XTAL_16934400 && CPU_FREQ_S3C24XX_PLL]
>    inherited [PLAT_S3C24XX && S3C2440_CPUFREQ && S3C2440_XTAL_16934400]
>   }
>   config S3C24XX_PWM boolean {
>    prompt "PWM device support" if [PLAT_S3C24XX]
>    select HAVE_PWM if [PLAT_S3C24XX]
>    inherited [PLAT_S3C24XX]
>   }
>   config S3C24XX_GPIO_EXTRA integer {
>    default [128] if [PLAT_S3C24XX && S3C24XX_GPIO_EXTRA128]
>    default [64] if [PLAT_S3C24XX && S3C24XX_GPIO_EXTRA64]
>    default [0] if [PLAT_S3C24XX]
>    inherited [PLAT_S3C24XX]
>   }
>   config S3C24XX_GPIO_EXTRA64 boolean {
>    inherited [PLAT_S3C24XX]
>   }
>   config S3C24XX_GPIO_EXTRA128 boolean {
>    inherited [PLAT_S3C24XX]
>   }
>   config PM_SIMTEC boolean {
>    inherited [PLAT_S3C24XX]
>   }
>   config S3C2410_DMA boolean {
>    prompt "S3C2410 DMA support" if [PLAT_S3C24XX && ARCH_S3C2410]
>    depends on [ARCH_S3C2410]
>    select S3C_DMA if [PLAT_S3C24XX && ARCH_S3C2410]
>    inherited [PLAT_S3C24XX && ARCH_S3C2410]
>    config S3C2410_DMA_DEBUG boolean {
>     prompt "S3C2410 DMA support debug" if [PLAT_S3C24XX && ARCH_S3C2410 && S3C2410_DMA]
>     depends on [ARCH_S3C2410 && S3C2410_DMA]
>     inherited [PLAT_S3C24XX && ARCH_S3C2410 && S3C2410_DMA]
>    }
>   }
>   config S3C24XX_ADC boolean {
>    prompt "ADC common driver support" if [PLAT_S3C24XX]
>    inherited [PLAT_S3C24XX]
>   }
>   config S3C24XX_SPI_BUS0_GPE11_GPE12_GPE13 boolean {
>    inherited [PLAT_S3C24XX]
>   }
>   config S3C24XX_SPI_BUS1_GPG5_GPG6_GPG7 boolean {
>    inherited [PLAT_S3C24XX]
>   }
>   config S3C24XX_SPI_BUS1_GPD8_GPD9_GPD10 boolean {
>    inherited [PLAT_S3C24XX]
>   }
>   config S3C2410_IOTIMING boolean {
>    depends on [CPU_FREQ_S3C24XX]
>    inherited [PLAT_S3C24XX && CPU_FREQ_S3C24XX]
>   }
>   config S3C2410_CPUFREQ_UTILS boolean {
>    depends on [CPU_FREQ_S3C24XX]
>    inherited [PLAT_S3C24XX && CPU_FREQ_S3C24XX]
>   }
>   config S3C2412_IOTIMING boolean {
>    depends on [CPU_FREQ_S3C24XX && (CPU_S3C2412 || CPU_S3C2443)]
>    inherited [PLAT_S3C24XX && CPU_FREQ_S3C24XX && (CPU_S3C2412 || CPU_S3C2443)]
>   }
>   config MACH_SMDK boolean {
>    inherited [PLAT_S3C24XX]
>   }
>   config S3C24XX_SIMTEC_AUDIO boolean {
>    depends on [ARCH_BAST || MACH_VR1000 || MACH_OSIRIS || MACH_ANUBIS]
>    default [y] if [PLAT_S3C24XX && (ARCH_BAST || MACH_VR1000 || MACH_OSIRIS || MACH_ANUBIS)]
>    inherited [PLAT_S3C24XX && (ARCH_BAST || MACH_VR1000 || MACH_OSIRIS || MACH_ANUBIS)]
>   }
>  }
>  config PLAT_S3C64XX boolean {
>   depends on [ARCH_S3C64XX]
>   default [y] if [ARCH_S3C64XX]
>   select CPU_V6 if [ARCH_S3C64XX]
>   select PLAT_S3C if [ARCH_S3C64XX]
>   select ARM_VIC if [ARCH_S3C64XX]
>   select NO_IOPORT if [ARCH_S3C64XX]
>   select ARCH_REQUIRE_GPIOLIB if [ARCH_S3C64XX]
>   select S3C_GPIO_TRACK if [ARCH_S3C64XX]
>   select S3C_GPIO_PULL_UPDOWN if [ARCH_S3C64XX]
>   select S3C_GPIO_CFG_S3C24XX if [ARCH_S3C64XX]
>   select S3C_GPIO_CFG_S3C64XX if [ARCH_S3C64XX]
>   select S3C_DEV_NAND if [ARCH_S3C64XX]
>   select USB_ARCH_HAS_OHCI if [ARCH_S3C64XX]
>   inherited [ARCH_S3C64XX]
>  }
>  if [PLAT_S3C64XX] {
>   config CPU_S3C6400_INIT boolean {
>    inherited [PLAT_S3C64XX]
>   }
>   config CPU_S3C6400_CLOCK boolean {
>    inherited [PLAT_S3C64XX]
>   }
>   config S3C64XX_DMA boolean {
>    prompt "S3C64XX DMA" if [PLAT_S3C64XX]
>    select S3C_DMA if [PLAT_S3C64XX]
>    inherited [PLAT_S3C64XX]
>   }
>   config S3C64XX_SETUP_I2C0 boolean {
>    default [y] if [PLAT_S3C64XX]
>    inherited [PLAT_S3C64XX]
>   }
>   config S3C64XX_SETUP_I2C1 boolean {
>    inherited [PLAT_S3C64XX]
>   }
>   config S3C64XX_SETUP_FB_24BPP boolean {
>    inherited [PLAT_S3C64XX]
>   }
>   config S3C64XX_SETUP_SDHCI_GPIO boolean {
>    inherited [PLAT_S3C64XX]
>   }
>  }
>  config PLAT_S3C boolean {
>   depends on [ARCH_S3C2410 || ARCH_S3C24A0 || ARCH_S3C64XX]
>   default [y] if [ARCH_S3C2410 || ARCH_S3C24A0 || ARCH_S3C64XX]
>   select NO_IOPORT if [ARCH_S3C2410 || ARCH_S3C24A0 || ARCH_S3C64XX]
>   inherited [ARCH_S3C2410 || ARCH_S3C24A0 || ARCH_S3C64XX]
>  }
>  if [PLAT_S3C] {
>   config CPU_LLSERIAL_S3C2410_ONLY boolean {
>    default [y] if [PLAT_S3C && CPU_LLSERIAL_S3C2410 && !CPU_LLSERIAL_S3C2440]
>    inherited [PLAT_S3C]
>   }
>   config CPU_LLSERIAL_S3C2440_ONLY boolean {
>    default [y] if [PLAT_S3C && CPU_LLSERIAL_S3C2440 && !CPU_LLSERIAL_S3C2410]
>    inherited [PLAT_S3C]
>   }
>   config CPU_LLSERIAL_S3C2410 boolean {
>    inherited [PLAT_S3C]
>   }
>   config CPU_LLSERIAL_S3C2440 boolean {
>    inherited [PLAT_S3C]
>   }
>   config S3C_BOOT_WATCHDOG boolean {
>    prompt "S3C Initialisation watchdog" if [PLAT_S3C && S3C2410_WATCHDOG]
>    depends on [S3C2410_WATCHDOG]
>    inherited [PLAT_S3C && S3C2410_WATCHDOG]
>   }
>   config S3C_BOOT_ERROR_RESET boolean {
>    prompt "S3C Reboot on decompression error" if [PLAT_S3C]
>    inherited [PLAT_S3C]
>   }
>   config S3C_BOOT_UART_FORCE_FIFO boolean {
>    prompt "Force UART FIFO on during boot process" if [PLAT_S3C]
>    default [y] if [PLAT_S3C]
>    inherited [PLAT_S3C]
2986,2999c4771,5337
<  }
< }
< menu "Bus options (PCI etc.)" {
<  config PCI boolean {
<   prompt "PCI support" if []
<   default [y] if []
<   select ARCH_SUPPORTS_MSI if [X86_LOCAL_APIC && X86_IO_APIC]
<   choice boolean {
<    prompt "PCI access mode" if [X86_32 && PCI]
<    depends on [X86_32 && PCI]
<    default [PCI_GOANY] if [X86_32 && PCI]
<    config PCI_GOBIOS boolean {
<     prompt "BIOS" if [<choice>]
<     inherited [<choice>]
---
>   config S3C2410_PM_DEBUG boolean {
>    prompt "S3C2410 PM Suspend debug" if [PLAT_S3C && PM]
>    depends on [PM]
>    inherited [PLAT_S3C && PM]
>   }
>   config S3C_PM_DEBUG_LED_SMDK boolean {
>    prompt "SMDK LED suspend/resume debugging" if [PLAT_S3C && PM && MACH_SMDK6410]
>    depends on [PM && MACH_SMDK6410]
>    inherited [PLAT_S3C && PM && MACH_SMDK6410]
>   }
>   config S3C2410_PM_CHECK boolean {
>    prompt "S3C2410 PM Suspend Memory CRC" if [PLAT_S3C && PM && CRC32]
>    depends on [PM && CRC32]
>    inherited [PLAT_S3C && PM && CRC32]
>    config S3C2410_PM_CHECK_CHUNKSIZE integer {
>     prompt "S3C2410 PM Suspend CRC Chunksize (KiB)" if [PLAT_S3C && PM && S3C2410_PM_CHECK]
>     depends on [PM && S3C2410_PM_CHECK]
>     default [64] if [PLAT_S3C && PM && S3C2410_PM_CHECK]
>     inherited [PLAT_S3C && PM && S3C2410_PM_CHECK]
>    }
>   }
>   config S3C_LOWLEVEL_UART_PORT integer {
>    prompt "S3C UART to use for low-level messages" if [PLAT_S3C]
>    default [0] if [PLAT_S3C]
>    inherited [PLAT_S3C]
>   }
>   config S3C_GPIO_SPACE integer {
>    prompt "Space between gpio banks" if [PLAT_S3C]
>    default [0] if [PLAT_S3C]
>    inherited [PLAT_S3C]
>   }
>   config S3C_GPIO_TRACK boolean {
>    inherited [PLAT_S3C]
>   }
>   config S3C_GPIO_PULL_UPDOWN boolean {
>    inherited [PLAT_S3C]
>   }
>   config S3C_GPIO_PULL_DOWN boolean {
>    inherited [PLAT_S3C]
>   }
>   config S3C_GPIO_PULL_UP boolean {
>    inherited [PLAT_S3C]
>   }
>   config S3C_GPIO_CFG_S3C24XX boolean {
>    inherited [PLAT_S3C]
>   }
>   config S3C_GPIO_CFG_S3C64XX boolean {
>    inherited [PLAT_S3C]
>   }
>   config S5P_GPIO_CFG_S5PC1XX boolean {
>    inherited [PLAT_S3C]
>   }
>   config S3C_DMA boolean {
>    inherited [PLAT_S3C]
>   }
>   config S3C_DEV_HSMMC boolean {
>    inherited [PLAT_S3C]
>   }
>   config S3C_DEV_HSMMC1 boolean {
>    inherited [PLAT_S3C]
>   }
>   config S3C_DEV_HSMMC2 boolean {
>    inherited [PLAT_S3C]
>   }
>   config S3C_DEV_I2C1 boolean {
>    inherited [PLAT_S3C]
>   }
>   config S3C_DEV_FB boolean {
>    inherited [PLAT_S3C]
>   }
>   config S3C_DEV_USB_HOST boolean {
>    inherited [PLAT_S3C]
>   }
>   config S3C_DEV_USB_HSOTG boolean {
>    inherited [PLAT_S3C]
>   }
>   config S3C_DEV_NAND boolean {
>    inherited [PLAT_S3C]
>   }
>  }
>  config PLAT_S5PC1XX boolean {
>   depends on [ARCH_S5PC1XX]
>   default [y] if [ARCH_S5PC1XX]
>   select PLAT_S3C if [ARCH_S5PC1XX]
>   select ARM_VIC if [ARCH_S5PC1XX]
>   select NO_IOPORT if [ARCH_S5PC1XX]
>   select ARCH_REQUIRE_GPIOLIB if [ARCH_S5PC1XX]
>   select S3C_GPIO_TRACK if [ARCH_S5PC1XX]
>   select S3C_GPIO_PULL_UPDOWN if [ARCH_S5PC1XX]
>   select S3C_GPIO_CFG_S3C24XX if [ARCH_S5PC1XX]
>   select S3C_GPIO_CFG_S3C64XX if [ARCH_S5PC1XX]
>   select S5P_GPIO_CFG_S5PC1XX if [ARCH_S5PC1XX]
>   inherited [ARCH_S5PC1XX]
>  }
>  if [PLAT_S5PC1XX] {
>   config CPU_S5PC100_INIT boolean {
>    inherited [PLAT_S5PC1XX]
>   }
>   config CPU_S5PC100_CLOCK boolean {
>    inherited [PLAT_S5PC1XX]
>   }
>   config S5PC1XX_SETUP_FB_24BPP boolean {
>    inherited [PLAT_S5PC1XX]
>   }
>   config S5PC1XX_SETUP_I2C0 boolean {
>    default [y] if [PLAT_S5PC1XX]
>    inherited [PLAT_S5PC1XX]
>   }
>   config S5PC1XX_SETUP_I2C1 boolean {
>    inherited [PLAT_S5PC1XX]
>   }
>   config S5PC1XX_SETUP_SDHCI_GPIO boolean {
>    inherited [PLAT_S5PC1XX]
>   }
>  }
>  if [ARCH_S3C2410] {
>   menu "S3C2400 Machines" {
>    depends on [ARCH_S3C2410]
>   }
>   config CPU_S3C2410 boolean {
>    depends on [ARCH_S3C2410]
>    select CPU_ARM920T if [ARCH_S3C2410]
>    select S3C2410_CLOCK if [ARCH_S3C2410]
>    select S3C2410_GPIO if [ARCH_S3C2410]
>    select CPU_LLSERIAL_S3C2410 if [ARCH_S3C2410]
>    select S3C2410_PM if [ARCH_S3C2410 && PM]
>    select S3C2410_CPUFREQ if [ARCH_S3C2410 && CPU_FREQ_S3C24XX]
>    inherited [ARCH_S3C2410]
>   }
>   config CPU_S3C2410_DMA boolean {
>    depends on [S3C2410_DMA && (CPU_S3C2410 || CPU_S3C2442)]
>    default [y] if [ARCH_S3C2410 && S3C2410_DMA && (CPU_S3C2410 || CPU_S3C2442)]
>    inherited [ARCH_S3C2410 && S3C2410_DMA && (CPU_S3C2410 || CPU_S3C2442)]
>   }
>   config S3C2410_PM boolean {
>    inherited [ARCH_S3C2410]
>   }
>   config S3C2410_GPIO boolean {
>    inherited [ARCH_S3C2410]
>   }
>   config SIMTEC_NOR boolean {
>    inherited [ARCH_S3C2410]
>   }
>   config MACH_BAST_IDE boolean {
>    select HAVE_PATA_PLATFORM if [ARCH_S3C2410]
>    inherited [ARCH_S3C2410]
>   }
>   config S3C2410_CPUFREQ boolean {
>    depends on [CPU_FREQ_S3C24XX && CPU_S3C2410]
>    select S3C2410_CPUFREQ_UTILS if [ARCH_S3C2410 && CPU_FREQ_S3C24XX && CPU_S3C2410]
>    inherited [ARCH_S3C2410 && CPU_FREQ_S3C24XX && CPU_S3C2410]
>   }
>   config S3C2410_PLLTABLE boolean {
>    depends on [S3C2410_CPUFREQ && CPU_FREQ_S3C24XX_PLL]
>    default [y] if [ARCH_S3C2410 && S3C2410_CPUFREQ && CPU_FREQ_S3C24XX_PLL]
>    inherited [ARCH_S3C2410 && S3C2410_CPUFREQ && CPU_FREQ_S3C24XX_PLL]
>   }
>   menu "S3C2410 Machines" {
>    depends on [ARCH_S3C2410]
>    config ARCH_SMDK2410 boolean {
>     prompt "SMDK2410/A9M2410" if [ARCH_S3C2410]
>     select CPU_S3C2410 if [ARCH_S3C2410]
>     select MACH_SMDK if [ARCH_S3C2410]
>     inherited [ARCH_S3C2410]
>    }
>    config ARCH_H1940 boolean {
>     prompt "IPAQ H1940" if [ARCH_S3C2410]
>     select CPU_S3C2410 if [ARCH_S3C2410]
>     select PM_H1940 if [ARCH_S3C2410 && PM]
>     select S3C_DEV_USB_HOST if [ARCH_S3C2410]
>     select S3C_DEV_NAND if [ARCH_S3C2410]
>     inherited [ARCH_S3C2410]
>     config H1940BT tristate {
>      prompt "Control the state of H1940 bluetooth chip" if [ARCH_S3C2410 && ARCH_H1940]
>      depends on [ARCH_H1940]
>      select RFKILL if [ARCH_S3C2410 && ARCH_H1940]
>      inherited [ARCH_S3C2410 && ARCH_H1940]
>     }
>    }
>    config PM_H1940 boolean {
>     inherited [ARCH_S3C2410]
>    }
>    config MACH_N30 boolean {
>     prompt "Acer N30 family" if [ARCH_S3C2410]
>     select CPU_S3C2410 if [ARCH_S3C2410]
>     select S3C_DEV_USB_HOST if [ARCH_S3C2410]
>     select S3C_DEV_NAND if [ARCH_S3C2410]
>     inherited [ARCH_S3C2410]
>    }
>    config ARCH_BAST boolean {
>     prompt "Simtec Electronics BAST (EB2410ITX)" if [ARCH_S3C2410]
>     select CPU_S3C2410 if [ARCH_S3C2410]
>     select S3C2410_IOTIMING if [ARCH_S3C2410 && S3C2410_CPUFREQ]
>     select PM_SIMTEC if [ARCH_S3C2410 && PM]
>     select SIMTEC_NOR if [ARCH_S3C2410]
>     select MACH_BAST_IDE if [ARCH_S3C2410]
>     select S3C24XX_DCLK if [ARCH_S3C2410]
>     select ISA if [ARCH_S3C2410]
>     select S3C_DEV_USB_HOST if [ARCH_S3C2410]
>     select S3C_DEV_NAND if [ARCH_S3C2410]
>     inherited [ARCH_S3C2410]
>    }
>    config MACH_OTOM boolean {
>     prompt "NexVision OTOM Board" if [ARCH_S3C2410]
>     select CPU_S3C2410 if [ARCH_S3C2410]
>     select S3C_DEV_USB_HOST if [ARCH_S3C2410]
>     select S3C_DEV_NAND if [ARCH_S3C2410]
>     inherited [ARCH_S3C2410]
>    }
>    config MACH_AML_M5900 boolean {
>     prompt "AML M5900 Series" if [ARCH_S3C2410]
>     select CPU_S3C2410 if [ARCH_S3C2410]
>     select PM_SIMTEC if [ARCH_S3C2410 && PM]
>     select S3C_DEV_USB_HOST if [ARCH_S3C2410]
>     inherited [ARCH_S3C2410]
>    }
>    config BAST_PC104_IRQ boolean {
>     prompt "BAST PC104 IRQ support" if [ARCH_S3C2410 && ARCH_BAST]
>     depends on [ARCH_BAST]
>     default [y] if [ARCH_S3C2410 && ARCH_BAST]
>     inherited [ARCH_S3C2410 && ARCH_BAST]
>    }
>    config MACH_TCT_HAMMER boolean {
>     prompt "TCT Hammer Board" if [ARCH_S3C2410]
>     select CPU_S3C2410 if [ARCH_S3C2410]
>     select S3C_DEV_USB_HOST if [ARCH_S3C2410]
>     inherited [ARCH_S3C2410]
>    }
>    config MACH_VR1000 boolean {
>     prompt "Thorcom VR1000" if [ARCH_S3C2410]
>     select PM_SIMTEC if [ARCH_S3C2410 && PM]
>     select S3C24XX_DCLK if [ARCH_S3C2410]
>     select SIMTEC_NOR if [ARCH_S3C2410]
>     select MACH_BAST_IDE if [ARCH_S3C2410]
>     select CPU_S3C2410 if [ARCH_S3C2410]
>     select S3C_DEV_USB_HOST if [ARCH_S3C2410]
>     inherited [ARCH_S3C2410]
>    }
>    config MACH_QT2410 boolean {
>     prompt "QT2410" if [ARCH_S3C2410]
>     select CPU_S3C2410 if [ARCH_S3C2410]
>     select S3C_DEV_USB_HOST if [ARCH_S3C2410]
>     select S3C_DEV_NAND if [ARCH_S3C2410]
>     inherited [ARCH_S3C2410]
>    }
>   }
>   config CPU_S3C2412 boolean {
>    depends on [ARCH_S3C2410]
>    select CPU_ARM926T if [ARCH_S3C2410]
>    select CPU_LLSERIAL_S3C2440 if [ARCH_S3C2410]
>    select S3C2412_PM if [ARCH_S3C2410 && PM]
>    select S3C2412_DMA if [ARCH_S3C2410 && S3C2410_DMA]
>    select S3C2410_GPIO if [ARCH_S3C2410]
>    inherited [ARCH_S3C2410]
>   }
>   config CPU_S3C2412_ONLY boolean {
>    depends on [ARCH_S3C2410 && !CPU_S3C2400 && !CPU_S3C2410 && !CPU_S3C2440 && !CPU_S3C2442 && !CPU_S3C2443 && CPU_S3C2412]
>    default [y] if [ARCH_S3C2410 && !CPU_S3C2400 && !CPU_S3C2410 && !CPU_S3C2440 && !CPU_S3C2442 && !CPU_S3C2443 && CPU_S3C2412]
>    inherited [ARCH_S3C2410 && !CPU_S3C2400 && !CPU_S3C2410 && !CPU_S3C2440 && !CPU_S3C2442 && !CPU_S3C2443 && CPU_S3C2412]
>   }
>   config S3C2412_DMA boolean {
>    depends on [CPU_S3C2412]
>    inherited [ARCH_S3C2410 && CPU_S3C2412]
>   }
>   config S3C2412_PM boolean {
>    inherited [ARCH_S3C2410]
>   }
>   config S3C2412_CPUFREQ boolean {
>    depends on [CPU_FREQ_S3C24XX && CPU_S3C2412]
>    select S3C2412_IOTIMING if [ARCH_S3C2410 && CPU_FREQ_S3C24XX && CPU_S3C2412]
>    default [y] if [ARCH_S3C2410 && CPU_FREQ_S3C24XX && CPU_S3C2412]
>    inherited [ARCH_S3C2410 && CPU_FREQ_S3C24XX && CPU_S3C2412]
>   }
>   menu "S3C2412 Machines" {
>    depends on [ARCH_S3C2410]
>    config MACH_JIVE boolean {
>     prompt "Logitech Jive" if [ARCH_S3C2410]
>     select CPU_S3C2412 if [ARCH_S3C2410]
>     select S3C_DEV_USB_HOST if [ARCH_S3C2410]
>     select S3C_DEV_NAND if [ARCH_S3C2410]
>     inherited [ARCH_S3C2410]
>     config MACH_JIVE_SHOW_BOOTLOADER boolean {
>      prompt "Allow access to bootloader partitions in MTD" if [ARCH_S3C2410 && MACH_JIVE && EXPERIMENTAL]
>      depends on [MACH_JIVE && EXPERIMENTAL]
>      inherited [ARCH_S3C2410 && MACH_JIVE && EXPERIMENTAL]
>     }
>    }
>    config MACH_SMDK2413 boolean {
>     prompt "SMDK2413" if [ARCH_S3C2410]
>     select CPU_S3C2412 if [ARCH_S3C2410]
>     select MACH_S3C2413 if [ARCH_S3C2410]
>     select MACH_SMDK if [ARCH_S3C2410]
>     select S3C_DEV_USB_HOST if [ARCH_S3C2410]
>     select S3C_DEV_NAND if [ARCH_S3C2410]
>     inherited [ARCH_S3C2410]
>    }
>    config MACH_S3C2413 boolean {
>     inherited [ARCH_S3C2410]
>    }
>    config MACH_SMDK2412 boolean {
>     prompt "SMDK2412" if [ARCH_S3C2410]
>     select MACH_SMDK2413 if [ARCH_S3C2410]
>     inherited [ARCH_S3C2410]
>    }
>    config MACH_VSTMS boolean {
>     prompt "VMSTMS" if [ARCH_S3C2410]
>     select CPU_S3C2412 if [ARCH_S3C2410]
>     select S3C_DEV_USB_HOST if [ARCH_S3C2410]
>     select S3C_DEV_NAND if [ARCH_S3C2410]
>     inherited [ARCH_S3C2410]
>    }
>   }
>   config CPU_S3C2440 boolean {
>    depends on [ARCH_S3C2410]
>    select CPU_ARM920T if [ARCH_S3C2410]
>    select S3C2410_CLOCK if [ARCH_S3C2410]
>    select S3C2410_PM if [ARCH_S3C2410 && PM]
>    select S3C2410_GPIO if [ARCH_S3C2410]
>    select S3C2440_DMA if [ARCH_S3C2410 && S3C2410_DMA]
>    select CPU_S3C244X if [ARCH_S3C2410]
>    select CPU_LLSERIAL_S3C2440 if [ARCH_S3C2410]
>    inherited [ARCH_S3C2410]
>   }
>   config S3C2440_DMA boolean {
>    depends on [ARCH_S3C2410 && CPU_S3C24405B]
>    inherited [ARCH_S3C2410 && CPU_S3C24405B]
>   }
>   menu "S3C2440 Machines" {
>    depends on [ARCH_S3C2410]
>    config MACH_ANUBIS boolean {
>     prompt "Simtec Electronics ANUBIS" if [ARCH_S3C2410]
>     select CPU_S3C2440 if [ARCH_S3C2410]
>     select S3C24XX_DCLK if [ARCH_S3C2410]
>     select PM_SIMTEC if [ARCH_S3C2410 && PM]
>     select HAVE_PATA_PLATFORM if [ARCH_S3C2410]
>     select S3C24XX_GPIO_EXTRA64 if [ARCH_S3C2410]
>     select S3C2440_XTAL_12000000 if [ARCH_S3C2410]
>     select S3C_DEV_USB_HOST if [ARCH_S3C2410]
>     inherited [ARCH_S3C2410]
>    }
>    config MACH_OSIRIS boolean {
>     prompt "Simtec IM2440D20 (OSIRIS) module" if [ARCH_S3C2410]
>     select CPU_S3C2440 if [ARCH_S3C2410]
>     select S3C24XX_DCLK if [ARCH_S3C2410]
>     select PM_SIMTEC if [ARCH_S3C2410 && PM]
>     select S3C24XX_GPIO_EXTRA128 if [ARCH_S3C2410]
>     select S3C2440_XTAL_12000000 if [ARCH_S3C2410]
>     select S3C2410_IOTIMING if [ARCH_S3C2410 && S3C2440_CPUFREQ]
>     select S3C_DEV_USB_HOST if [ARCH_S3C2410]
>     select S3C_DEV_NAND if [ARCH_S3C2410]
>     inherited [ARCH_S3C2410]
>     config MACH_OSIRIS_DVS tristate {
>      prompt "Simtec IM2440D20 (OSIRIS) Dynamic Voltage Scaling driver" if [ARCH_S3C2410 && MACH_OSIRIS]
>      depends on [MACH_OSIRIS]
>      select TPS65010 if [ARCH_S3C2410 && MACH_OSIRIS]
>      inherited [ARCH_S3C2410 && MACH_OSIRIS]
>     }
>    }
>    config MACH_RX3715 boolean {
>     prompt "HP iPAQ rx3715" if [ARCH_S3C2410]
>     select CPU_S3C2440 if [ARCH_S3C2410]
>     select S3C2440_XTAL_16934400 if [ARCH_S3C2410]
>     select PM_H1940 if [ARCH_S3C2410 && PM]
>     select S3C_DEV_NAND if [ARCH_S3C2410]
>     inherited [ARCH_S3C2410]
>    }
>    config ARCH_S3C2440 boolean {
>     prompt "SMDK2440" if [ARCH_S3C2410]
>     select CPU_S3C2440 if [ARCH_S3C2410]
>     select S3C2440_XTAL_16934400 if [ARCH_S3C2410]
>     select MACH_SMDK if [ARCH_S3C2410]
>     select S3C_DEV_USB_HOST if [ARCH_S3C2410]
>     select S3C_DEV_NAND if [ARCH_S3C2410]
>     inherited [ARCH_S3C2410]
>    }
>    config MACH_NEXCODER_2440 boolean {
>     prompt "NexVision NEXCODER 2440 Light Board" if [ARCH_S3C2410]
>     select CPU_S3C2440 if [ARCH_S3C2410]
>     select S3C2440_XTAL_12000000 if [ARCH_S3C2410]
>     select S3C_DEV_USB_HOST if [ARCH_S3C2410]
>     select S3C_DEV_NAND if [ARCH_S3C2410]
>     inherited [ARCH_S3C2410]
>    }
>    config SMDK2440_CPU2440 boolean {
>     prompt "SMDK2440 with S3C2440 CPU module" if [ARCH_S3C2410 && ARCH_S3C2440]
>     depends on [ARCH_S3C2440]
>     default [y] if [ARCH_S3C2410 && ARCH_S3C2440]
>     select S3C2440_XTAL_16934400 if [ARCH_S3C2410 && ARCH_S3C2440]
>     select CPU_S3C2440 if [ARCH_S3C2410 && ARCH_S3C2440]
>     inherited [ARCH_S3C2410 && ARCH_S3C2440]
>    }
>    config MACH_AT2440EVB boolean {
>     prompt "Avantech AT2440EVB development board" if [ARCH_S3C2410]
>     select CPU_S3C2440 if [ARCH_S3C2410]
>     select S3C_DEV_USB_HOST if [ARCH_S3C2410]
>     select S3C_DEV_NAND if [ARCH_S3C2410]
>     inherited [ARCH_S3C2410]
>    }
>    config MACH_MINI2440 boolean {
>     prompt "MINI2440 development board" if [ARCH_S3C2410]
>     select CPU_S3C2440 if [ARCH_S3C2410]
>     select EEPROM_AT24 if [ARCH_S3C2410]
>     select LEDS_TRIGGER_BACKLIGHT if [ARCH_S3C2410]
>     select SND_S3C24XX_SOC_S3C24XX_UDA134X if [ARCH_S3C2410]
>     select S3C_DEV_NAND if [ARCH_S3C2410]
>     select S3C_DEV_USB_HOST if [ARCH_S3C2410]
>     inherited [ARCH_S3C2410]
>    }
>   }
>   config CPU_S3C2442 boolean {
>    depends on [ARCH_S3C2410]
>    select CPU_ARM920T if [ARCH_S3C2410]
>    select S3C2410_CLOCK if [ARCH_S3C2410]
>    select S3C2410_GPIO if [ARCH_S3C2410]
>    select S3C2410_PM if [ARCH_S3C2410 && PM]
>    select CPU_S3C244X if [ARCH_S3C2410]
>    select CPU_LLSERIAL_S3C2440 if [ARCH_S3C2410]
>    inherited [ARCH_S3C2410]
>   }
>   menu "S3C2442 Machines" {
>    depends on [ARCH_S3C2410]
>    config SMDK2440_CPU2442 boolean {
>     prompt "SMDM2440 with S3C2442 CPU module" if [ARCH_S3C2410 && ARCH_S3C2440]
>     depends on [ARCH_S3C2440]
>     select CPU_S3C2442 if [ARCH_S3C2410 && ARCH_S3C2440]
>     inherited [ARCH_S3C2410 && ARCH_S3C2440]
>    }
>    config MACH_NEO1973_GTA02 boolean {
>     prompt "Openmoko GTA02 / Freerunner phone" if [ARCH_S3C2410]
>     select CPU_S3C2442 if [ARCH_S3C2410]
>     select MFD_PCF50633 if [ARCH_S3C2410]
>     select PCF50633_GPIO if [ARCH_S3C2410]
>     select I2C if [ARCH_S3C2410]
>     select POWER_SUPPLY if [ARCH_S3C2410]
>     select MACH_NEO1973 if [ARCH_S3C2410]
>     select S3C2410_PWM if [ARCH_S3C2410]
>     inherited [ARCH_S3C2410]
>    }
>   }
>   config CPU_S3C2443 boolean {
>    depends on [ARCH_S3C2410]
>    select S3C2443_DMA if [ARCH_S3C2410 && S3C2410_DMA]
>    select CPU_LLSERIAL_S3C2440 if [ARCH_S3C2410]
>    inherited [ARCH_S3C2410]
>   }
>   config S3C2443_DMA boolean {
>    depends on [CPU_S3C2443]
>    inherited [ARCH_S3C2410 && CPU_S3C2443]
>   }
>   menu "S3C2443 Machines" {
>    depends on [ARCH_S3C2410]
>    config MACH_SMDK2443 boolean {
>     prompt "SMDK2443" if [ARCH_S3C2410]
>     select CPU_S3C2443 if [ARCH_S3C2410]
>     select MACH_SMDK if [ARCH_S3C2410]
>     select S3C_DEV_HSMMC if [ARCH_S3C2410]
>     inherited [ARCH_S3C2410]
>    }
>   }
>  }
>  if [ARCH_S3C64XX] {
>   config CPU_S3C6400 boolean {
>    select CPU_S3C6400_INIT if [ARCH_S3C64XX]
>    select CPU_S3C6400_CLOCK if [ARCH_S3C64XX]
>    inherited [ARCH_S3C64XX]
>   }
>   config S3C6400_SETUP_SDHCI boolean {
>    inherited [ARCH_S3C64XX]
>   }
>   config MACH_SMDK6400 boolean {
>    prompt "SMDK6400" if [ARCH_S3C64XX]
>    select CPU_S3C6400 if [ARCH_S3C64XX]
>    select S3C_DEV_HSMMC if [ARCH_S3C64XX]
>    select S3C_DEV_NAND if [ARCH_S3C64XX]
>    select S3C6400_SETUP_SDHCI if [ARCH_S3C64XX]
>    inherited [ARCH_S3C64XX]
>   }
>   config CPU_S3C6410 boolean {
>    select CPU_S3C6400_INIT if [ARCH_S3C64XX]
>    select CPU_S3C6400_CLOCK if [ARCH_S3C64XX]
>    inherited [ARCH_S3C64XX]
>   }
>   config S3C6410_SETUP_SDHCI boolean {
>    select S3C64XX_SETUP_SDHCI_GPIO if [ARCH_S3C64XX]
>    inherited [ARCH_S3C64XX]
>   }
>   config MACH_ANW6410 boolean {
>    prompt "A&W6410" if [ARCH_S3C64XX]
>    select CPU_S3C6410 if [ARCH_S3C64XX]
>    select S3C_DEV_FB if [ARCH_S3C64XX]
>    select S3C64XX_SETUP_FB_24BPP if [ARCH_S3C64XX]
>    inherited [ARCH_S3C64XX]
>   }
>   config MACH_SMDK6410 boolean {
>    prompt "SMDK6410" if [ARCH_S3C64XX]
>    select CPU_S3C6410 if [ARCH_S3C64XX]
>    select S3C_DEV_HSMMC if [ARCH_S3C64XX]
>    select S3C_DEV_HSMMC1 if [ARCH_S3C64XX]
>    select S3C_DEV_I2C1 if [ARCH_S3C64XX]
>    select S3C_DEV_FB if [ARCH_S3C64XX]
>    select S3C_DEV_USB_HOST if [ARCH_S3C64XX]
>    select S3C_DEV_USB_HSOTG if [ARCH_S3C64XX]
>    select S3C6410_SETUP_SDHCI if [ARCH_S3C64XX]
>    select S3C64XX_SETUP_I2C1 if [ARCH_S3C64XX]
>    select S3C64XX_SETUP_FB_24BPP if [ARCH_S3C64XX]
>    inherited [ARCH_S3C64XX]
>    choice boolean {
>     prompt "SMDK6410 MMC/SD slot setup" if [ARCH_S3C64XX && MACH_SMDK6410]
>     depends on [MACH_SMDK6410]
>     config SMDK6410_SD_CH0 boolean {
>      prompt "Use channel 0 only" if [<choice> && MACH_SMDK6410]
>      depends on [MACH_SMDK6410]
>      inherited [<choice> && MACH_SMDK6410]
>     }
>     config SMDK6410_SD_CH1 boolean {
>      prompt "Use channel 1 only" if [<choice> && MACH_SMDK6410]
>      depends on [MACH_SMDK6410]
>      inherited [<choice> && MACH_SMDK6410]
>     }
>    }
>    config SMDK6410_WM1190_EV1 boolean {
>     prompt "Support Wolfson Microelectronics 1190-EV1 PMIC card" if [ARCH_S3C64XX && MACH_SMDK6410]
>     depends on [MACH_SMDK6410]
>     select REGULATOR if [ARCH_S3C64XX && MACH_SMDK6410]
>     select REGULATOR_WM8350 if [ARCH_S3C64XX && MACH_SMDK6410]
>     select S3C24XX_GPIO_EXTRA64 if [ARCH_S3C64XX && MACH_SMDK6410]
>     select MFD_WM8350_I2C if [ARCH_S3C64XX && MACH_SMDK6410]
>     select MFD_WM8350_CONFIG_MODE_0 if [ARCH_S3C64XX && MACH_SMDK6410]
>     select MFD_WM8350_CONFIG_MODE_3 if [ARCH_S3C64XX && MACH_SMDK6410]
>     select MFD_WM8352_CONFIG_MODE_0 if [ARCH_S3C64XX && MACH_SMDK6410]
>     inherited [ARCH_S3C64XX && MACH_SMDK6410]
>    }
>   }
>   config MACH_NCP boolean {
>    prompt "NCP" if [ARCH_S3C64XX]
>    select CPU_S3C6410 if [ARCH_S3C64XX]
>    select S3C_DEV_I2C1 if [ARCH_S3C64XX]
>    select S3C_DEV_HSMMC1 if [ARCH_S3C64XX]
>    select S3C64XX_SETUP_I2C1 if [ARCH_S3C64XX]
>    inherited [ARCH_S3C64XX]
>   }
>   config MACH_HMT boolean {
>    prompt "Airgoo HMT" if [ARCH_S3C64XX]
>    select CPU_S3C6410 if [ARCH_S3C64XX]
>    select S3C_DEV_FB if [ARCH_S3C64XX]
>    select S3C_DEV_NAND if [ARCH_S3C64XX]
>    select S3C_DEV_USB_HOST if [ARCH_S3C64XX]
>    select S3C64XX_SETUP_FB_24BPP if [ARCH_S3C64XX]
>    select HAVE_PWM if [ARCH_S3C64XX]
>    inherited [ARCH_S3C64XX]
>   }
>  }
>  if [ARCH_STMP3XXX] {
>   menu "Freescale STMP3xxx implementations" {
>    depends on [ARCH_STMP3XXX]
>    choice boolean {
>     prompt "Select STMP3xxx chip family" if [ARCH_STMP3XXX]
>     config ARCH_STMP37XX boolean {
>      prompt "Freescale SMTP37xx" if [<choice>]
>      select CPU_ARM926T if [<choice>]
>      inherited [<choice>]
>     }
>     config ARCH_STMP378X boolean {
>      prompt "Freescale STMP378x" if [<choice>]
>      select CPU_ARM926T if [<choice>]
>      inherited [<choice>]
>     }
3001,3003c5339,5350
<    config PCI_GOMMCONFIG boolean {
<     prompt "MMConfig" if [<choice>]
<     inherited [<choice>]
---
>    choice boolean {
>     prompt "Select STMP3xxx board type" if [ARCH_STMP3XXX]
>     config MACH_STMP37XX boolean {
>      depends on [ARCH_STMP37XX]
>      prompt "Freescale STMP37xx development board" if [<choice> && ARCH_STMP37XX]
>      inherited [<choice> && ARCH_STMP37XX]
>     }
>     config MACH_STMP378X boolean {
>      depends on [ARCH_STMP378X]
>      prompt "Freescale STMP378x development board" if [<choice> && ARCH_STMP378X]
>      inherited [<choice> && ARCH_STMP378X]
>     }
3005,3007c5352,5384
<    config PCI_GODIRECT boolean {
<     prompt "Direct" if [<choice>]
<     inherited [<choice>]
---
>   }
>  }
>  if [ARCH_S5PC1XX] {
>   config CPU_S5PC100 boolean {
>    select CPU_S5PC100_INIT if [ARCH_S5PC1XX]
>    select CPU_S5PC100_CLOCK if [ARCH_S5PC1XX]
>    inherited [ARCH_S5PC1XX]
>   }
>   config S5PC100_SETUP_SDHCI boolean {
>    select S5PC1XX_SETUP_SDHCI_GPIO if [ARCH_S5PC1XX]
>    inherited [ARCH_S5PC1XX]
>   }
>   config MACH_SMDKC100 boolean {
>    prompt "SMDKC100" if [ARCH_S5PC1XX]
>    select CPU_S5PC100 if [ARCH_S5PC1XX]
>    select S3C_DEV_FB if [ARCH_S5PC1XX]
>    select S3C_DEV_I2C1 if [ARCH_S5PC1XX]
>    select S3C_DEV_HSMMC if [ARCH_S5PC1XX]
>    select S3C_DEV_HSMMC1 if [ARCH_S5PC1XX]
>    select S3C_DEV_HSMMC2 if [ARCH_S5PC1XX]
>    select S5PC1XX_SETUP_I2C0 if [ARCH_S5PC1XX]
>    select S5PC1XX_SETUP_I2C1 if [ARCH_S5PC1XX]
>    select S5PC1XX_SETUP_FB_24BPP if [ARCH_S5PC1XX]
>    select S5PC100_SETUP_SDHCI if [ARCH_S5PC1XX]
>    inherited [ARCH_S5PC1XX]
>   }
>  }
>  if [ARCH_U300] {
>   menu "ST-Ericsson AB U300/U330/U335/U365 Platform" {
>    depends on [ARCH_U300]
>    config MACH_U300 boolean {
>     prompt "U300" if [ARCH_U300]
>     inherited [ARCH_U300]
3009,3012c5386,5408
<    config PCI_GOOLPC boolean {
<     prompt "OLPC" if [<choice> && OLPC]
<     depends on [OLPC]
<     inherited [<choice> && OLPC]
---
>    choice boolean {
>     prompt "U300/U330/U335/U365 system type" if [ARCH_U300]
>     default [MACH_U300_BS2X] if [ARCH_U300]
>     config MACH_U300_BS2X boolean {
>      prompt "S26/S26/B25/B26 Test Products" if [<choice> && MACH_U300]
>      depends on [MACH_U300]
>      inherited [<choice> && MACH_U300]
>     }
>     config MACH_U300_BS330 boolean {
>      prompt "S330/B330 Test Products" if [<choice> && MACH_U300]
>      depends on [MACH_U300]
>      inherited [<choice> && MACH_U300]
>     }
>     config MACH_U300_BS335 boolean {
>      prompt "S335/B335 Test Products" if [<choice> && MACH_U300]
>      depends on [MACH_U300]
>      inherited [<choice> && MACH_U300]
>     }
>     config MACH_U300_BS365 boolean {
>      prompt "S365/B365 Test Products" if [<choice> && MACH_U300]
>      depends on [MACH_U300]
>      inherited [<choice> && MACH_U300]
>     }
3014,3016c5410,5420
<    config PCI_GOANY boolean {
<     prompt "Any" if [<choice>]
<     inherited [<choice>]
---
>    choice boolean {
>     prompt "Memory configuration" if [ARCH_U300]
>     default [MACH_U300_SINGLE_RAM] if [ARCH_U300]
>     config MACH_U300_SINGLE_RAM boolean {
>      prompt "Single RAM" if [<choice>]
>      inherited [<choice>]
>     }
>     config MACH_U300_DUAL_RAM boolean {
>      prompt "Dual RAM" if [<choice>]
>      inherited [<choice>]
>     }
3017a5422,5856
>    config U300_DEBUG boolean {
>     prompt "Debug support for U300" if [ARCH_U300 && PM]
>     depends on [PM]
>     inherited [ARCH_U300 && PM]
>    }
>    config MACH_U300_SEMI_IS_SHARED boolean {
>     prompt "The SEMI is used by both the access and application side" if [ARCH_U300 && MACH_U300]
>     depends on [MACH_U300]
>     inherited [ARCH_U300 && MACH_U300]
>    }
>    config MACH_U300_SPIDUMMY boolean {
>     prompt "SSP/SPI dummy chip" if [ARCH_U300]
>     select SPI if [ARCH_U300]
>     select SPI_MASTER if [ARCH_U300]
>     select SPI_PL022 if [ARCH_U300]
>     inherited [ARCH_U300]
>    }
>    config MACH_U300_ACCESS_MEM_SIZE integer {
>     prompt "Access CPU memory allocation" if [ARCH_U300 && MACH_U300_SINGLE_RAM]
>     range [7 25] if [ARCH_U300 && MACH_U300_SINGLE_RAM]
>     depends on [MACH_U300_SINGLE_RAM]
>     default [13] if [ARCH_U300 && MACH_U300_SINGLE_RAM]
>     inherited [ARCH_U300 && MACH_U300_SINGLE_RAM]
>    }
>    config MACH_U300_2MB_ALIGNMENT_FIX boolean {
>     prompt "2MiB alignment fix" if [ARCH_U300 && MACH_U300_SINGLE_RAM]
>     depends on [MACH_U300_SINGLE_RAM]
>     default [y] if [ARCH_U300 && MACH_U300_SINGLE_RAM]
>     inherited [ARCH_U300 && MACH_U300_SINGLE_RAM]
>    }
>   }
>  }
>  menu "ST-Ericsson platform type" {
>   depends on [ARCH_U8500]
>   config MACH_U8500_MOP boolean {
>    prompt "U8500 Early Development platform" if [ARCH_U8500]
>    default [y] if [ARCH_U8500]
>    select ARM_GIC if [ARCH_U8500]
>    select HAS_MTU if [ARCH_U8500]
>    inherited [ARCH_U8500]
>   }
>  }
>  menu "Versatile platform type" {
>   depends on [ARCH_VERSATILE]
>   config ARCH_VERSATILE_PB boolean {
>    prompt "Support Versatile/PB platform" if [ARCH_VERSATILE]
>    select CPU_ARM926T if [ARCH_VERSATILE]
>    default [y] if [ARCH_VERSATILE]
>    inherited [ARCH_VERSATILE]
>   }
>   config MACH_VERSATILE_AB boolean {
>    prompt "Support Versatile/AB platform" if [ARCH_VERSATILE]
>    select CPU_ARM926T if [ARCH_VERSATILE]
>    inherited [ARCH_VERSATILE]
>   }
>  }
>  if [ARCH_W90X900] {
>   config CPU_W90P910 boolean {
>    inherited [ARCH_W90X900]
>   }
>   config CPU_NUC950 boolean {
>    inherited [ARCH_W90X900]
>   }
>   config CPU_NUC960 boolean {
>    inherited [ARCH_W90X900]
>   }
>   menu "W90P910 Machines" {
>    depends on [ARCH_W90X900]
>    config MACH_W90P910EVB boolean {
>     prompt "Nuvoton W90P910 Evaluation Board" if [ARCH_W90X900]
>     default [y] if [ARCH_W90X900]
>     select CPU_W90P910 if [ARCH_W90X900]
>     inherited [ARCH_W90X900]
>    }
>   }
>   menu "NUC950 Machines" {
>    depends on [ARCH_W90X900]
>    config MACH_W90P950EVB boolean {
>     prompt "Nuvoton NUC950 Evaluation Board" if [ARCH_W90X900]
>     select CPU_NUC950 if [ARCH_W90X900]
>     inherited [ARCH_W90X900]
>    }
>   }
>   menu "NUC960 Machines" {
>    depends on [ARCH_W90X900]
>    config MACH_W90N960EVB boolean {
>     prompt "Nuvoton NUC960 Evaluation Board" if [ARCH_W90X900]
>     select CPU_NUC960 if [ARCH_W90X900]
>     inherited [ARCH_W90X900]
>    }
>   }
>  }
>  config ARCH_ACORN boolean {
>  }
>  config PLAT_IOP boolean {
>   select GENERIC_CLOCKEVENTS if []
>   select GENERIC_TIME if []
>  }
>  config PLAT_ORION boolean {
>  }
>  config PLAT_PXA boolean {
>  }
>  config CPU_ARM610 boolean {
>   prompt "Support ARM610 processor" if [ARCH_RPC]
>   select CPU_32v3 if []
>   select CPU_CACHE_V3 if []
>   select CPU_CACHE_VIVT if []
>   select CPU_CP15_MMU if []
>   select CPU_COPY_V3 if [MMU]
>   select CPU_TLB_V3 if [MMU]
>   select CPU_PABRT_LEGACY if []
>  }
>  config CPU_ARM7TDMI boolean {
>   prompt "Support ARM7TDMI processor" if [!MMU]
>   depends on [!MMU]
>   select CPU_32v4T if [!MMU]
>   select CPU_ABRT_LV4T if [!MMU]
>   select CPU_PABRT_LEGACY if [!MMU]
>   select CPU_CACHE_V4 if [!MMU]
>   inherited [!MMU]
>  }
>  config CPU_ARM710 boolean {
>   prompt "Support ARM710 processor" if [ARCH_RPC]
>   select CPU_32v3 if []
>   select CPU_CACHE_V3 if []
>   select CPU_CACHE_VIVT if []
>   select CPU_CP15_MMU if []
>   select CPU_COPY_V3 if [MMU]
>   select CPU_TLB_V3 if [MMU]
>   select CPU_PABRT_LEGACY if []
>  }
>  config CPU_ARM720T boolean {
>   prompt "Support ARM720T processor" if [ARCH_INTEGRATOR]
>   select CPU_32v4T if []
>   select CPU_ABRT_LV4T if []
>   select CPU_PABRT_LEGACY if []
>   select CPU_CACHE_V4 if []
>   select CPU_CACHE_VIVT if []
>   select CPU_CP15_MMU if []
>   select CPU_COPY_V4WT if [MMU]
>   select CPU_TLB_V4WT if [MMU]
>  }
>  config CPU_ARM740T boolean {
>   prompt "Support ARM740T processor" if [!MMU && ARCH_INTEGRATOR]
>   depends on [!MMU]
>   select CPU_32v4T if [!MMU]
>   select CPU_ABRT_LV4T if [!MMU]
>   select CPU_PABRT_LEGACY if [!MMU]
>   select CPU_CACHE_V3 if [!MMU]
>   select CPU_CP15_MPU if [!MMU]
>   inherited [!MMU]
>  }
>  config CPU_ARM9TDMI boolean {
>   prompt "Support ARM9TDMI processor" if [!MMU]
>   depends on [!MMU]
>   select CPU_32v4T if [!MMU]
>   select CPU_ABRT_NOMMU if [!MMU]
>   select CPU_PABRT_LEGACY if [!MMU]
>   select CPU_CACHE_V4 if [!MMU]
>   inherited [!MMU]
>  }
>  config CPU_ARM920T boolean {
>   prompt "Support ARM920T processor" if [ARCH_INTEGRATOR]
>   select CPU_32v4T if []
>   select CPU_ABRT_EV4T if []
>   select CPU_PABRT_LEGACY if []
>   select CPU_CACHE_V4WT if []
>   select CPU_CACHE_VIVT if []
>   select CPU_CP15_MMU if []
>   select CPU_COPY_V4WB if [MMU]
>   select CPU_TLB_V4WBI if [MMU]
>  }
>  config CPU_ARM922T boolean {
>   prompt "Support ARM922T processor" if [ARCH_INTEGRATOR]
>   select CPU_32v4T if []
>   select CPU_ABRT_EV4T if []
>   select CPU_PABRT_LEGACY if []
>   select CPU_CACHE_V4WT if []
>   select CPU_CACHE_VIVT if []
>   select CPU_CP15_MMU if []
>   select CPU_COPY_V4WB if [MMU]
>   select CPU_TLB_V4WBI if [MMU]
>  }
>  config CPU_ARM925T boolean {
>   prompt "Support ARM925T processor" if [ARCH_OMAP1]
>   select CPU_32v4T if []
>   select CPU_ABRT_EV4T if []
>   select CPU_PABRT_LEGACY if []
>   select CPU_CACHE_V4WT if []
>   select CPU_CACHE_VIVT if []
>   select CPU_CP15_MMU if []
>   select CPU_COPY_V4WB if [MMU]
>   select CPU_TLB_V4WBI if [MMU]
>  }
>  config CPU_ARM926T boolean {
>   prompt "Support ARM926T processor" if [ARCH_INTEGRATOR || MACH_REALVIEW_EB]
>   select CPU_32v5 if []
>   select CPU_ABRT_EV5TJ if []
>   select CPU_PABRT_LEGACY if []
>   select CPU_CACHE_VIVT if []
>   select CPU_CP15_MMU if []
>   select CPU_COPY_V4WB if [MMU]
>   select CPU_TLB_V4WBI if [MMU]
>  }
>  config CPU_FA526 boolean {
>   select CPU_32v4 if []
>   select CPU_ABRT_EV4 if []
>   select CPU_PABRT_LEGACY if []
>   select CPU_CACHE_VIVT if []
>   select CPU_CP15_MMU if []
>   select CPU_CACHE_FA if []
>   select CPU_COPY_FA if [MMU]
>   select CPU_TLB_FA if [MMU]
>  }
>  config CPU_ARM940T boolean {
>   prompt "Support ARM940T processor" if [!MMU && ARCH_INTEGRATOR]
>   depends on [!MMU]
>   select CPU_32v4T if [!MMU]
>   select CPU_ABRT_NOMMU if [!MMU]
>   select CPU_PABRT_LEGACY if [!MMU]
>   select CPU_CACHE_VIVT if [!MMU]
>   select CPU_CP15_MPU if [!MMU]
>   inherited [!MMU]
>  }
>  config CPU_ARM946E boolean {
>   prompt "Support ARM946E-S processor" if [!MMU && ARCH_INTEGRATOR]
>   depends on [!MMU]
>   select CPU_32v5 if [!MMU]
>   select CPU_ABRT_NOMMU if [!MMU]
>   select CPU_PABRT_LEGACY if [!MMU]
>   select CPU_CACHE_VIVT if [!MMU]
>   select CPU_CP15_MPU if [!MMU]
>   inherited [!MMU]
>  }
>  config CPU_ARM1020 boolean {
>   prompt "Support ARM1020T (rev 0) processor" if [ARCH_INTEGRATOR]
>   select CPU_32v5 if []
>   select CPU_ABRT_EV4T if []
>   select CPU_PABRT_LEGACY if []
>   select CPU_CACHE_V4WT if []
>   select CPU_CACHE_VIVT if []
>   select CPU_CP15_MMU if []
>   select CPU_COPY_V4WB if [MMU]
>   select CPU_TLB_V4WBI if [MMU]
>  }
>  config CPU_ARM1020E boolean {
>   prompt "Support ARM1020E processor" if [n && ARCH_INTEGRATOR]
>   select CPU_32v5 if [n]
>   select CPU_ABRT_EV4T if [n]
>   select CPU_PABRT_LEGACY if [n]
>   select CPU_CACHE_V4WT if [n]
>   select CPU_CACHE_VIVT if [n]
>   select CPU_CP15_MMU if [n]
>   select CPU_COPY_V4WB if [n && MMU]
>   select CPU_TLB_V4WBI if [n && MMU]
>   depends on [n]
>   inherited [n]
>  }
>  config CPU_ARM1022 boolean {
>   prompt "Support ARM1022E processor" if [ARCH_INTEGRATOR]
>   select CPU_32v5 if []
>   select CPU_ABRT_EV4T if []
>   select CPU_PABRT_LEGACY if []
>   select CPU_CACHE_VIVT if []
>   select CPU_CP15_MMU if []
>   select CPU_COPY_V4WB if [MMU]
>   select CPU_TLB_V4WBI if [MMU]
>  }
>  config CPU_ARM1026 boolean {
>   prompt "Support ARM1026EJ-S processor" if [ARCH_INTEGRATOR]
>   select CPU_32v5 if []
>   select CPU_ABRT_EV5T if []
>   select CPU_PABRT_LEGACY if []
>   select CPU_CACHE_VIVT if []
>   select CPU_CP15_MMU if []
>   select CPU_COPY_V4WB if [MMU]
>   select CPU_TLB_V4WBI if [MMU]
>  }
>  config CPU_SA110 boolean {
>   prompt "Support StrongARM(R) SA-110 processor" if [ARCH_RPC]
>   select CPU_32v3 if [ARCH_RPC]
>   select CPU_32v4 if [!ARCH_RPC]
>   select CPU_ABRT_EV4 if []
>   select CPU_PABRT_LEGACY if []
>   select CPU_CACHE_V4WB if []
>   select CPU_CACHE_VIVT if []
>   select CPU_CP15_MMU if []
>   select CPU_COPY_V4WB if [MMU]
>   select CPU_TLB_V4WB if [MMU]
>  }
>  config CPU_SA1100 boolean {
>   select CPU_32v4 if []
>   select CPU_ABRT_EV4 if []
>   select CPU_PABRT_LEGACY if []
>   select CPU_CACHE_V4WB if []
>   select CPU_CACHE_VIVT if []
>   select CPU_CP15_MMU if []
>   select CPU_TLB_V4WB if [MMU]
>  }
>  config CPU_XSCALE boolean {
>   select CPU_32v5 if []
>   select CPU_ABRT_EV5T if []
>   select CPU_PABRT_LEGACY if []
>   select CPU_CACHE_VIVT if []
>   select CPU_CP15_MMU if []
>   select CPU_TLB_V4WBI if [MMU]
>  }
>  config CPU_XSC3 boolean {
>   select CPU_32v5 if []
>   select CPU_ABRT_EV5T if []
>   select CPU_PABRT_LEGACY if []
>   select CPU_CACHE_VIVT if []
>   select CPU_CP15_MMU if []
>   select CPU_TLB_V4WBI if [MMU]
>   select IO_36 if []
>  }
>  config CPU_MOHAWK boolean {
>   select CPU_32v5 if []
>   select CPU_ABRT_EV5T if []
>   select CPU_PABRT_LEGACY if []
>   select CPU_CACHE_VIVT if []
>   select CPU_CP15_MMU if []
>   select CPU_TLB_V4WBI if [MMU]
>   select CPU_COPY_V4WB if [MMU]
>  }
>  config CPU_FEROCEON boolean {
>   select CPU_32v5 if []
>   select CPU_ABRT_EV5T if []
>   select CPU_PABRT_LEGACY if []
>   select CPU_CACHE_VIVT if []
>   select CPU_CP15_MMU if []
>   select CPU_COPY_FEROCEON if [MMU]
>   select CPU_TLB_FEROCEON if [MMU]
>  }
>  config CPU_FEROCEON_OLD_ID boolean {
>   prompt "Accept early Feroceon cores with an ARM926 ID" if [CPU_FEROCEON && !CPU_ARM926T]
>   depends on [CPU_FEROCEON && !CPU_ARM926T]
>   default [y] if [CPU_FEROCEON && !CPU_ARM926T]
>   inherited [CPU_FEROCEON && !CPU_ARM926T]
>  }
>  config CPU_V6 boolean {
>   prompt "Support ARM V6 processor" if [ARCH_INTEGRATOR || MACH_REALVIEW_EB || MACH_REALVIEW_PBX || ARCH_DOVE]
>   select CPU_32v6 if []
>   select CPU_ABRT_EV6 if []
>   select CPU_PABRT_V6 if []
>   select CPU_CACHE_V6 if []
>   select CPU_CACHE_VIPT if []
>   select CPU_CP15_MMU if []
>   select CPU_HAS_ASID if [MMU]
>   select CPU_COPY_V6 if [MMU]
>   select CPU_TLB_V6 if [MMU]
>   config CPU_32v6K boolean {
>    prompt "Support ARM V6K processor extensions" if [CPU_V6 && !SMP]
>    depends on [CPU_V6]
>    default [y] if [CPU_V6 && SMP && !ARCH_MX3]
>    inherited [CPU_V6]
>   }
>  }
>  config CPU_V7 boolean {
>   prompt "Support ARM V7 processor" if [ARCH_INTEGRATOR || MACH_REALVIEW_EB || MACH_REALVIEW_PBX]
>   select CPU_32v6K if []
>   select CPU_32v7 if []
>   select CPU_ABRT_EV7 if []
>   select CPU_PABRT_V7 if []
>   select CPU_CACHE_V7 if []
>   select CPU_CACHE_VIPT if []
>   select CPU_CP15_MMU if []
>   select CPU_HAS_ASID if [MMU]
>   select CPU_COPY_V6 if [MMU]
>   select CPU_TLB_V7 if [MMU]
>  }
>  config CPU_32v3 boolean {
>   select TLS_REG_EMUL if [SMP || !MMU]
>   select NEEDS_SYSCALL_FOR_CMPXCHG if [SMP]
>  }
>  config CPU_32v4 boolean {
>   select TLS_REG_EMUL if [SMP || !MMU]
>   select NEEDS_SYSCALL_FOR_CMPXCHG if [SMP]
>  }
>  config CPU_32v4T boolean {
>   select TLS_REG_EMUL if [SMP || !MMU]
>   select NEEDS_SYSCALL_FOR_CMPXCHG if [SMP]
>  }
>  config CPU_32v5 boolean {
>   select TLS_REG_EMUL if [SMP || !MMU]
>   select NEEDS_SYSCALL_FOR_CMPXCHG if [SMP]
>  }
>  config CPU_32v6 boolean {
>   select TLS_REG_EMUL if [!CPU_32v6K && !MMU]
>  }
>  config CPU_32v7 boolean {
>  }
>  config CPU_ABRT_NOMMU boolean {
>  }
>  config CPU_ABRT_EV4 boolean {
>  }
>  config CPU_ABRT_EV4T boolean {
>  }
>  config CPU_ABRT_LV4T boolean {
>  }
>  config CPU_ABRT_EV5T boolean {
>  }
>  config CPU_ABRT_EV5TJ boolean {
>  }
>  config CPU_ABRT_EV6 boolean {
>  }
>  config CPU_ABRT_EV7 boolean {
>  }
>  config CPU_PABRT_LEGACY boolean {
>  }
>  config CPU_PABRT_V6 boolean {
>  }
>  config CPU_PABRT_V7 boolean {
>  }
>  config CPU_CACHE_V3 boolean {
>  }
>  config CPU_CACHE_V4 boolean {
>  }
>  config CPU_CACHE_V4WT boolean {
>  }
>  config CPU_CACHE_V4WB boolean {
>  }
>  config CPU_CACHE_V6 boolean {
>  }
>  config CPU_CACHE_V7 boolean {
>  }
>  config CPU_CACHE_VIVT boolean {
>  }
>  config CPU_CACHE_VIPT boolean {
>  }
>  config CPU_CACHE_FA boolean {
>  }
>  if [MMU] {
>   config CPU_COPY_V3 boolean {
>    inherited [MMU]
3019,3039c5858,5859
<   config PCI_BIOS boolean {
<    default [y] if [X86_32 && PCI && (PCI_GOBIOS || PCI_GOANY)]
<    depends on [X86_32 && PCI && (PCI_GOBIOS || PCI_GOANY)]
<    inherited [X86_32 && PCI && (PCI_GOBIOS || PCI_GOANY)]
<   }
<   config PCI_DIRECT boolean {
<    default [y] if [PCI && (X86_64 || PCI_GODIRECT || PCI_GOANY || PCI_GOOLPC)]
<    depends on [PCI && (X86_64 || PCI_GODIRECT || PCI_GOANY || PCI_GOOLPC)]
<    inherited [PCI && (X86_64 || PCI_GODIRECT || PCI_GOANY || PCI_GOOLPC)]
<   }
<   config PCI_MMCONFIG boolean {
<    default [y] if [X86_32 && PCI && (ACPI || SFI) && (PCI_GOMMCONFIG || PCI_GOANY)]
<    depends on [X86_32 && PCI && (ACPI || SFI) && (PCI_GOMMCONFIG || PCI_GOANY)]
<    prompt "Support mmconfig PCI config space access" if [X86_64 && PCI && ACPI]
<    depends on [X86_64 && PCI && ACPI]
<    inherited [X86_32 && PCI && (ACPI || SFI) && (PCI_GOMMCONFIG || PCI_GOANY)]
<   }
<   config PCI_OLPC boolean {
<    default [y] if [PCI && OLPC && (PCI_GOOLPC || PCI_GOANY)]
<    depends on [PCI && OLPC && (PCI_GOOLPC || PCI_GOANY)]
<    inherited [PCI && OLPC && (PCI_GOOLPC || PCI_GOANY)]
---
>   config CPU_COPY_V4WT boolean {
>    inherited [MMU]
3041,3044c5861,5895
<   config PCI_DOMAINS boolean {
<    default [y] if [PCI]
<    depends on [PCI]
<    inherited [PCI]
---
>   config CPU_COPY_V4WB boolean {
>    inherited [MMU]
>   }
>   config CPU_COPY_FEROCEON boolean {
>    inherited [MMU]
>   }
>   config CPU_COPY_FA boolean {
>    inherited [MMU]
>   }
>   config CPU_COPY_V6 boolean {
>    inherited [MMU]
>   }
>   config CPU_TLB_V3 boolean {
>    inherited [MMU]
>   }
>   config CPU_TLB_V4WT boolean {
>    inherited [MMU]
>   }
>   config CPU_TLB_V4WB boolean {
>    inherited [MMU]
>   }
>   config CPU_TLB_V4WBI boolean {
>    inherited [MMU]
>   }
>   config CPU_TLB_FEROCEON boolean {
>    inherited [MMU]
>   }
>   config CPU_TLB_FA boolean {
>    inherited [MMU]
>   }
>   config CPU_TLB_V6 boolean {
>    inherited [MMU]
>   }
>   config CPU_TLB_V7 boolean {
>    inherited [MMU]
3046,3079d5896
<   config PCI_MMCONFIG boolean {
<    default [y] if [X86_32 && PCI && (ACPI || SFI) && (PCI_GOMMCONFIG || PCI_GOANY)]
<    depends on [X86_32 && PCI && (ACPI || SFI) && (PCI_GOMMCONFIG || PCI_GOANY)]
<    prompt "Support mmconfig PCI config space access" if [X86_64 && PCI && ACPI]
<    depends on [X86_64 && PCI && ACPI]
<    inherited [X86_64 && PCI && ACPI]
<   }
<  }
<  config DMAR boolean {
<   prompt "Support for DMA Remapping Devices (EXPERIMENTAL)" if [PCI_MSI && ACPI && EXPERIMENTAL]
<   depends on [PCI_MSI && ACPI && EXPERIMENTAL]
<   inherited [PCI_MSI && ACPI && EXPERIMENTAL]
<   config DMAR_DEFAULT_ON boolean {
<    default [y] if [DMAR]
<    prompt "Enable DMA Remapping Devices by default" if [DMAR]
<    depends on [DMAR]
<    inherited [DMAR]
<   }
<   config DMAR_BROKEN_GFX_WA boolean {
<    default [n] if [DMAR && BROKEN]
<    prompt "Workaround broken graphics drivers (going away soon)" if [DMAR && BROKEN]
<    depends on [DMAR && BROKEN]
<    inherited [DMAR && BROKEN]
<   }
<   config DMAR_FLOPPY_WA boolean {
<    default [y] if [DMAR]
<    depends on [DMAR]
<    inherited [DMAR]
<   }
<  }
<  config INTR_REMAP boolean {
<   prompt "Support for Interrupt Remapping (EXPERIMENTAL)" if [X86_64 && X86_IO_APIC && PCI_MSI && ACPI && EXPERIMENTAL]
<   depends on [X86_64 && X86_IO_APIC && PCI_MSI && ACPI && EXPERIMENTAL]
<   inherited [X86_64 && X86_IO_APIC && PCI_MSI && ACPI && EXPERIMENTAL]
3081,3118c5898,6149
<  config PCIEPORTBUS boolean {
<   prompt "PCI Express support" if [PCI]
<   depends on [PCI]
<   inherited [PCI]
<   config HOTPLUG_PCI_PCIE tristate {
<    prompt "PCI Express Hotplug driver" if [HOTPLUG_PCI && PCIEPORTBUS]
<    depends on [HOTPLUG_PCI && PCIEPORTBUS]
<    inherited [HOTPLUG_PCI && PCIEPORTBUS]
<   }
<   config PCIEAER boolean {
<    prompt "Root Port Advanced Error Reporting support" if [PCIEPORTBUS]
<    depends on [PCIEPORTBUS]
<    default [y] if [PCIEPORTBUS]
<    inherited [PCIEPORTBUS]
<    config PCIE_ECRC boolean {
<     prompt "PCI Express ECRC settings control" if [PCIEAER]
<     depends on [PCIEAER]
<     inherited [PCIEAER]
<    }
<    config PCIEAER_INJECT tristate {
<     prompt "PCIe AER error injector support" if [PCIEAER]
<     depends on [PCIEAER]
<     default [n] if [PCIEAER]
<     inherited [PCIEAER]
<    }
<   }
<   config PCIEASPM boolean {
<    prompt "PCI Express ASPM support(Experimental)" if [PCI && EXPERIMENTAL && PCIEPORTBUS]
<    depends on [PCI && EXPERIMENTAL && PCIEPORTBUS]
<    default [n] if [PCI && EXPERIMENTAL && PCIEPORTBUS]
<    inherited [PCI && EXPERIMENTAL && PCIEPORTBUS]
<    config PCIEASPM_DEBUG boolean {
<     prompt "Debug PCI Express ASPM" if [PCIEASPM]
<     depends on [PCIEASPM]
<     default [n] if [PCIEASPM]
<     inherited [PCIEASPM]
<    }
<   }
---
>  config CPU_HAS_ASID boolean {
>  }
>  config CPU_CP15 boolean {
>  }
>  config CPU_CP15_MMU boolean {
>   select CPU_CP15 if []
>  }
>  config CPU_CP15_MPU boolean {
>   select CPU_CP15 if []
>  }
>  config IO_36 boolean {
>  }
>  config ARM_THUMB boolean {
>   prompt "Support Thumb user binaries" if [CPU_ARM720T || CPU_ARM740T || CPU_ARM920T || CPU_ARM922T || CPU_ARM925T || CPU_ARM926T || CPU_ARM940T || CPU_ARM946E || CPU_ARM1020 || CPU_ARM1020E || CPU_ARM1022 || CPU_ARM1026 || CPU_XSCALE || CPU_XSC3 || CPU_MOHAWK || CPU_V6 || CPU_V7 || CPU_FEROCEON]
>   depends on [CPU_ARM720T || CPU_ARM740T || CPU_ARM920T || CPU_ARM922T || CPU_ARM925T || CPU_ARM926T || CPU_ARM940T || CPU_ARM946E || CPU_ARM1020 || CPU_ARM1020E || CPU_ARM1022 || CPU_ARM1026 || CPU_XSCALE || CPU_XSC3 || CPU_MOHAWK || CPU_V6 || CPU_V7 || CPU_FEROCEON]
>   default [y] if [CPU_ARM720T || CPU_ARM740T || CPU_ARM920T || CPU_ARM922T || CPU_ARM925T || CPU_ARM926T || CPU_ARM940T || CPU_ARM946E || CPU_ARM1020 || CPU_ARM1020E || CPU_ARM1022 || CPU_ARM1026 || CPU_XSCALE || CPU_XSC3 || CPU_MOHAWK || CPU_V6 || CPU_V7 || CPU_FEROCEON]
>   inherited [CPU_ARM720T || CPU_ARM740T || CPU_ARM920T || CPU_ARM922T || CPU_ARM925T || CPU_ARM926T || CPU_ARM940T || CPU_ARM946E || CPU_ARM1020 || CPU_ARM1020E || CPU_ARM1022 || CPU_ARM1026 || CPU_XSCALE || CPU_XSC3 || CPU_MOHAWK || CPU_V6 || CPU_V7 || CPU_FEROCEON]
>  }
>  config ARM_THUMBEE boolean {
>   prompt "Enable ThumbEE CPU extension" if [CPU_V7]
>   depends on [CPU_V7]
>   inherited [CPU_V7]
>  }
>  config CPU_BIG_ENDIAN boolean {
>   prompt "Build big-endian kernel" if [ARCH_SUPPORTS_BIG_ENDIAN]
>   depends on [ARCH_SUPPORTS_BIG_ENDIAN]
>   inherited [ARCH_SUPPORTS_BIG_ENDIAN]
>   config CPU_ENDIAN_BE8 boolean {
>    depends on [CPU_BIG_ENDIAN]
>    default [CPU_V6 || CPU_V7] if [CPU_BIG_ENDIAN]
>    inherited [CPU_BIG_ENDIAN]
>   }
>   config CPU_ENDIAN_BE32 boolean {
>    depends on [CPU_BIG_ENDIAN]
>    default [!CPU_ENDIAN_BE8] if [CPU_BIG_ENDIAN]
>    inherited [CPU_BIG_ENDIAN]
>   }
>  }
>  config CPU_HIGH_VECTOR boolean {
>   depends on [!MMU && CPU_CP15 && !CPU_ARM740T]
>   prompt "Select the High exception vector" if [!MMU && CPU_CP15 && !CPU_ARM740T]
>   inherited [!MMU && CPU_CP15 && !CPU_ARM740T]
>  }
>  config CPU_ICACHE_DISABLE boolean {
>   prompt "Disable I-Cache (I-bit)" if [CPU_CP15 && !CPU_ARM610 && !CPU_ARM710 && !CPU_ARM720T && !CPU_ARM740T && !CPU_XSCALE && !CPU_XSC3]
>   depends on [CPU_CP15 && !(CPU_ARM610 || CPU_ARM710 || CPU_ARM720T || CPU_ARM740T || CPU_XSCALE || CPU_XSC3)]
>   inherited [CPU_CP15 && !CPU_ARM610 && !CPU_ARM710 && !CPU_ARM720T && !CPU_ARM740T && !CPU_XSCALE && !CPU_XSC3]
>  }
>  config CPU_DCACHE_DISABLE boolean {
>   prompt "Disable D-Cache (C-bit)" if [CPU_CP15]
>   depends on [CPU_CP15]
>   inherited [CPU_CP15]
>  }
>  config CPU_DCACHE_SIZE hex {
>   depends on [CPU_ARM740T || CPU_ARM946E]
>   default [0x00001000] if [(CPU_ARM740T || CPU_ARM946E) && CPU_ARM740T]
>   default [0x00002000] if [CPU_ARM740T || CPU_ARM946E]
>   inherited [CPU_ARM740T || CPU_ARM946E]
>  }
>  config CPU_DCACHE_WRITETHROUGH boolean {
>   prompt "Force write through D-cache" if [(CPU_ARM740T || CPU_ARM920T || CPU_ARM922T || CPU_ARM925T || CPU_ARM926T || CPU_ARM940T || CPU_ARM946E || CPU_ARM1020 || CPU_FA526) && !CPU_DCACHE_DISABLE]
>   depends on [(CPU_ARM740T || CPU_ARM920T || CPU_ARM922T || CPU_ARM925T || CPU_ARM926T || CPU_ARM940T || CPU_ARM946E || CPU_ARM1020 || CPU_FA526) && !CPU_DCACHE_DISABLE]
>   default [y] if [(CPU_ARM740T || CPU_ARM920T || CPU_ARM922T || CPU_ARM925T || CPU_ARM926T || CPU_ARM940T || CPU_ARM946E || CPU_ARM1020 || CPU_FA526) && !CPU_DCACHE_DISABLE && CPU_ARM925T]
>   inherited [(CPU_ARM740T || CPU_ARM920T || CPU_ARM922T || CPU_ARM925T || CPU_ARM926T || CPU_ARM940T || CPU_ARM946E || CPU_ARM1020 || CPU_FA526) && !CPU_DCACHE_DISABLE]
>  }
>  config CPU_CACHE_ROUND_ROBIN boolean {
>   prompt "Round robin I and D cache replacement algorithm" if [(CPU_ARM926T || CPU_ARM946E || CPU_ARM1020) && (!CPU_ICACHE_DISABLE || !CPU_DCACHE_DISABLE)]
>   depends on [(CPU_ARM926T || CPU_ARM946E || CPU_ARM1020) && (!CPU_ICACHE_DISABLE || !CPU_DCACHE_DISABLE)]
>   inherited [(CPU_ARM926T || CPU_ARM946E || CPU_ARM1020) && (!CPU_ICACHE_DISABLE || !CPU_DCACHE_DISABLE)]
>  }
>  config CPU_BPREDICT_DISABLE boolean {
>   prompt "Disable branch prediction" if [CPU_ARM1020 || CPU_V6 || CPU_MOHAWK || CPU_XSC3 || CPU_V7 || CPU_FA526]
>   depends on [CPU_ARM1020 || CPU_V6 || CPU_MOHAWK || CPU_XSC3 || CPU_V7 || CPU_FA526]
>   inherited [CPU_ARM1020 || CPU_V6 || CPU_MOHAWK || CPU_XSC3 || CPU_V7 || CPU_FA526]
>  }
>  config TLS_REG_EMUL boolean {
>  }
>  config HAS_TLS_REG boolean {
>   depends on [!TLS_REG_EMUL]
>   default [y] if [!TLS_REG_EMUL && (SMP || CPU_32v7)]
>   inherited [!TLS_REG_EMUL]
>  }
>  config NEEDS_SYSCALL_FOR_CMPXCHG boolean {
>  }
>  config OUTER_CACHE boolean {
>  }
>  config CACHE_FEROCEON_L2 boolean {
>   prompt "Enable the Feroceon L2 cache controller" if [ARCH_KIRKWOOD || ARCH_MV78XX0]
>   depends on [ARCH_KIRKWOOD || ARCH_MV78XX0]
>   default [y] if [ARCH_KIRKWOOD || ARCH_MV78XX0]
>   select OUTER_CACHE if [ARCH_KIRKWOOD || ARCH_MV78XX0]
>   inherited [ARCH_KIRKWOOD || ARCH_MV78XX0]
>   config CACHE_FEROCEON_L2_WRITETHROUGH boolean {
>    prompt "Force Feroceon L2 cache write through" if [CACHE_FEROCEON_L2]
>    depends on [CACHE_FEROCEON_L2]
>    inherited [CACHE_FEROCEON_L2]
>   }
>  }
>  config CACHE_L2X0 boolean {
>   prompt "Enable the L2x0 outer cache controller" if [REALVIEW_EB_ARM11MP || MACH_REALVIEW_PB11MP || MACH_REALVIEW_PB1176 || REALVIEW_EB_A9MP || ARCH_MX35 || ARCH_MX31 || MACH_REALVIEW_PBX || ARCH_NOMADIK]
>   depends on [REALVIEW_EB_ARM11MP || MACH_REALVIEW_PB11MP || MACH_REALVIEW_PB1176 || REALVIEW_EB_A9MP || ARCH_MX35 || ARCH_MX31 || MACH_REALVIEW_PBX || ARCH_NOMADIK]
>   default [y] if [REALVIEW_EB_ARM11MP || MACH_REALVIEW_PB11MP || MACH_REALVIEW_PB1176 || REALVIEW_EB_A9MP || ARCH_MX35 || ARCH_MX31 || MACH_REALVIEW_PBX || ARCH_NOMADIK]
>   select OUTER_CACHE if [REALVIEW_EB_ARM11MP || MACH_REALVIEW_PB11MP || MACH_REALVIEW_PB1176 || REALVIEW_EB_A9MP || ARCH_MX35 || ARCH_MX31 || MACH_REALVIEW_PBX || ARCH_NOMADIK]
>   inherited [REALVIEW_EB_ARM11MP || MACH_REALVIEW_PB11MP || MACH_REALVIEW_PB1176 || REALVIEW_EB_A9MP || ARCH_MX35 || ARCH_MX31 || MACH_REALVIEW_PBX || ARCH_NOMADIK]
>  }
>  config CACHE_TAUROS2 boolean {
>   prompt "Enable the Tauros2 L2 cache controller" if [ARCH_DOVE]
>   depends on [ARCH_DOVE]
>   default [y] if [ARCH_DOVE]
>   select OUTER_CACHE if [ARCH_DOVE]
>   inherited [ARCH_DOVE]
>  }
>  config CACHE_XSC3L2 boolean {
>   prompt "Enable the L2 cache on XScale3" if [CPU_XSC3]
>   depends on [CPU_XSC3]
>   default [y] if [CPU_XSC3]
>   select OUTER_CACHE if [CPU_XSC3]
>   inherited [CPU_XSC3]
>  }
>  config ARM_L1_CACHE_SHIFT integer {
>   default [6] if [ARCH_OMAP3 || ARCH_S5PC1XX]
>   default [5] if []
>  }
>  config IWMMXT boolean {
>   prompt "Enable iWMMXt support" if [CPU_XSCALE || CPU_XSC3 || CPU_MOHAWK]
>   depends on [CPU_XSCALE || CPU_XSC3 || CPU_MOHAWK]
>   default [y] if [(CPU_XSCALE || CPU_XSC3 || CPU_MOHAWK) && (PXA27x || PXA3xx || ARCH_MMP)]
>   inherited [CPU_XSCALE || CPU_XSC3 || CPU_MOHAWK]
>  }
>  config XSCALE_PMU boolean {
>   depends on [CPU_XSCALE && !XSCALE_PMU_TIMER]
>   default [y] if [CPU_XSCALE && !XSCALE_PMU_TIMER]
>   inherited [CPU_XSCALE && !XSCALE_PMU_TIMER]
>  }
>  if [!MMU] {
>   config SET_MEM_PARAM boolean {
>    prompt "Set flash/sdram size and base addr" if [!MMU]
>    inherited [!MMU]
>    config DRAM_BASE hex {
>     prompt "(S)DRAM Base Address" if [!MMU && SET_MEM_PARAM]
>     default [0x00800000] if [!MMU]
>     inherited [!MMU]
>    }
>    config DRAM_SIZE hex {
>     prompt "(S)DRAM SIZE" if [!MMU && SET_MEM_PARAM]
>     default [0x00800000] if [!MMU]
>     inherited [!MMU]
>    }
>    config FLASH_MEM_BASE hex {
>     prompt "FLASH Base Address" if [!MMU && SET_MEM_PARAM]
>     default [0x00400000] if [!MMU]
>     inherited [!MMU]
>    }
>    config FLASH_SIZE hex {
>     prompt "FLASH Size" if [!MMU && SET_MEM_PARAM]
>     default [0x00400000] if [!MMU]
>     inherited [!MMU]
>    }
>   }
>   config PROCESSOR_ID hex {
>    prompt "Hard wire the processor ID" if [!MMU && !CPU_CP15]
>    default [0x00007700] if [!MMU && !CPU_CP15]
>    depends on [!CPU_CP15]
>    inherited [!MMU && !CPU_CP15]
>   }
>   config REMAP_VECTORS_TO_RAM boolean {
>    prompt "Install vectors to the begining of RAM" if [!MMU && DRAM_BASE]
>    depends on [DRAM_BASE]
>    inherited [!MMU && DRAM_BASE]
>   }
>  }
>  config ARM_ERRATA_411920 boolean {
>   prompt "ARM errata: Invalidation of the Instruction Cache operation can fail" if [CPU_V6 && !SMP]
>   depends on [CPU_V6 && !SMP]
>   inherited [CPU_V6 && !SMP]
>  }
>  config ARM_ERRATA_430973 boolean {
>   prompt "ARM errata: Stale prediction on replaced interworking branch" if [CPU_V7]
>   depends on [CPU_V7]
>   inherited [CPU_V7]
>  }
>  config ARM_ERRATA_458693 boolean {
>   prompt "ARM errata: Processor deadlock when a false hazard is created" if [CPU_V7]
>   depends on [CPU_V7]
>   inherited [CPU_V7]
>  }
>  config ARM_ERRATA_460075 boolean {
>   prompt "ARM errata: Data written to the L2 cache can be overwritten with stale data" if [CPU_V7]
>   depends on [CPU_V7]
>   inherited [CPU_V7]
>  }
> }
> config ARM_GIC boolean {
> }
> config ARM_VIC boolean {
> }
> config ARM_VIC_NR integer {
>  default [2] if [ARM_VIC]
>  depends on [ARM_VIC]
>  inherited [ARM_VIC]
> }
> config ICST525 boolean {
> }
> config ICST307 boolean {
> }
> config SA1111 boolean {
>  select DMABOUNCE if [!ARCH_PXA]
> }
> config DMABOUNCE boolean {
>  select ZONE_DMA if []
> }
> config TIMER_ACORN boolean {
> }
> config SHARP_LOCOMO boolean {
> }
> config SHARP_PARAM boolean {
> }
> config SHARP_SCOOP boolean {
> }
> config COMMON_CLKDEV boolean {
> }
> config FORCE_MAX_ZONEORDER integer {
>  depends on [SA1111]
>  default [9] if [SA1111]
>  inherited [SA1111]
> }
> menu "Bus support" {
>  config ARM_AMBA boolean {
>  }
>  config ISA boolean {
>  }
>  config ISA_DMA boolean {
>   select ISA_DMA_API if []
>  }
>  config ISA_DMA_API boolean {
>  }
>  config PCI boolean {
>   prompt "PCI support" if [ARCH_INTEGRATOR_AP || ARCH_VERSATILE_PB || ARCH_IXP4XX || ARCH_KS8695 || MACH_ARMCORE]
>  }
>  config PCI_SYSCALL boolean {
>   default [PCI] if []
>  }
>  config PCI_HOST_VIA82C505 boolean {
>   depends on [PCI && ARCH_SHARK]
>   default [y] if [PCI && ARCH_SHARK]
>   inherited [PCI && ARCH_SHARK]
>  }
>  config PCI_HOST_ITE8152 boolean {
>   depends on [PCI && MACH_ARMCORE]
>   default [y] if [PCI && MACH_ARMCORE]
>   select DMABOUNCE if [PCI && MACH_ARMCORE]
>   inherited [PCI && MACH_ARMCORE]
3163,3235d6193
<  config ISA_DMA_API boolean {
<   default [y] if []
<  }
<  if [X86_32] {
<   config ISA boolean {
<    prompt "ISA support" if [X86_32]
<    inherited [X86_32]
<    config EISA boolean {
<     prompt "EISA support" if [X86_32 && ISA]
<     depends on [ISA]
<     inherited [X86_32 && ISA]
<     config EISA_VLB_PRIMING boolean {
<      prompt "Vesa Local Bus priming" if [X86_32 && X86 && EISA]
<      depends on [X86 && EISA]
<      default [n] if [X86_32 && X86 && EISA]
<      inherited [X86_32 && X86 && EISA]
<     }
<     config EISA_PCI_EISA boolean {
<      prompt "Generic PCI/EISA bridge" if [X86_32 && !PARISC && PCI && EISA]
<      depends on [!PARISC && PCI && EISA]
<      default [y] if [X86_32 && !PARISC && PCI && EISA]
<      inherited [X86_32 && !PARISC && PCI && EISA]
<     }
<     config EISA_VIRTUAL_ROOT boolean {
<      prompt "EISA virtual root device" if [X86_32 && EISA && (ALPHA || X86)]
<      depends on [EISA && (ALPHA || X86)]
<      default [y] if [X86_32 && EISA && (ALPHA || X86)]
<      inherited [X86_32 && EISA && (ALPHA || X86)]
<     }
<     config EISA_NAMES boolean {
<      prompt "EISA device name database" if [X86_32 && EISA]
<      depends on [EISA]
<      default [y] if [X86_32 && EISA]
<      inherited [X86_32 && EISA]
<     }
<    }
<   }
<   config MCA boolean {
<    prompt "MCA support" if [X86_32]
<    inherited [X86_32]
<    config MCA_LEGACY boolean {
<     prompt "Legacy MCA API Support" if [X86_32 && MCA]
<     depends on [MCA]
<     inherited [X86_32 && MCA]
<     config MCA_PROC_FS boolean {
<      prompt "Support for the mca entry in /proc" if [X86_32 && MCA_LEGACY && PROC_FS]
<      depends on [MCA_LEGACY && PROC_FS]
<      inherited [X86_32 && MCA_LEGACY && PROC_FS]
<     }
<    }
<   }
<   config SCx200 tristate {
<    prompt "NatSemi SCx200 support" if [X86_32]
<    inherited [X86_32]
<    config SCx200HR_TIMER tristate {
<     prompt "NatSemi SCx200 27MHz High-Resolution Timer Support" if [X86_32 && SCx200 && GENERIC_TIME]
<     depends on [SCx200 && GENERIC_TIME]
<     default [y] if [X86_32 && SCx200 && GENERIC_TIME]
<     inherited [X86_32 && SCx200 && GENERIC_TIME]
<    }
<   }
<   config OLPC boolean {
<    prompt "One Laptop Per Child support" if [X86_32]
<    select GPIOLIB if [X86_32]
<    default [n] if [X86_32]
<    inherited [X86_32]
<   }
<  }
<  config K8_NB boolean {
<   default [y] if [AGP_AMD64 || X86_64 && (GART_IOMMU || PCI && NUMA)]
<   depends on [AGP_AMD64 || X86_64 && (GART_IOMMU || PCI && NUMA)]
<   inherited [AGP_AMD64 || X86_64 && (GART_IOMMU || PCI && NUMA)]
<  }
3431,3496c6389,6847
<  menuconfig HOTPLUG_PCI tristate {
<   prompt "Support for PCI Hotplug" if [PCI && HOTPLUG && SYSFS]
<   depends on [PCI && HOTPLUG && SYSFS]
<   inherited [PCI && HOTPLUG && SYSFS]
<   if [HOTPLUG_PCI] {
<    config HOTPLUG_PCI_FAKE tristate {
<     prompt "Fake PCI Hotplug driver" if [HOTPLUG_PCI]
<     inherited [HOTPLUG_PCI]
<    }
<    config HOTPLUG_PCI_COMPAQ tristate {
<     prompt "Compaq PCI Hotplug driver" if [HOTPLUG_PCI && X86 && PCI_BIOS]
<     depends on [X86 && PCI_BIOS]
<     inherited [HOTPLUG_PCI && X86 && PCI_BIOS]
<     config HOTPLUG_PCI_COMPAQ_NVRAM boolean {
<      prompt "Save configuration into NVRAM on Compaq servers" if [HOTPLUG_PCI && HOTPLUG_PCI_COMPAQ]
<      depends on [HOTPLUG_PCI_COMPAQ]
<      inherited [HOTPLUG_PCI && HOTPLUG_PCI_COMPAQ]
<     }
<    }
<    config HOTPLUG_PCI_IBM tristate {
<     prompt "IBM PCI Hotplug driver" if [HOTPLUG_PCI && X86_IO_APIC && X86 && PCI_BIOS]
<     depends on [X86_IO_APIC && X86 && PCI_BIOS]
<     inherited [HOTPLUG_PCI && X86_IO_APIC && X86 && PCI_BIOS]
<    }
<    config HOTPLUG_PCI_ACPI tristate {
<     prompt "ACPI PCI Hotplug driver" if [HOTPLUG_PCI && (!ACPI_DOCK && ACPI || ACPI_DOCK)]
<     depends on [!ACPI_DOCK && ACPI || ACPI_DOCK]
<     inherited [HOTPLUG_PCI && (!ACPI_DOCK && ACPI || ACPI_DOCK)]
<     config HOTPLUG_PCI_ACPI_IBM tristate {
<      prompt "ACPI PCI Hotplug driver IBM extensions" if [HOTPLUG_PCI && HOTPLUG_PCI_ACPI]
<      depends on [HOTPLUG_PCI_ACPI]
<      inherited [HOTPLUG_PCI && HOTPLUG_PCI_ACPI]
<     }
<    }
<    config HOTPLUG_PCI_CPCI boolean {
<     prompt "CompactPCI Hotplug driver" if [HOTPLUG_PCI]
<     inherited [HOTPLUG_PCI]
<     config HOTPLUG_PCI_CPCI_ZT5550 tristate {
<      prompt "Ziatech ZT5550 CompactPCI Hotplug driver" if [HOTPLUG_PCI && HOTPLUG_PCI_CPCI && X86]
<      depends on [HOTPLUG_PCI_CPCI && X86]
<      inherited [HOTPLUG_PCI && HOTPLUG_PCI_CPCI && X86]
<     }
<     config HOTPLUG_PCI_CPCI_GENERIC tristate {
<      prompt "Generic port I/O CompactPCI Hotplug driver" if [HOTPLUG_PCI && HOTPLUG_PCI_CPCI && X86]
<      depends on [HOTPLUG_PCI_CPCI && X86]
<      inherited [HOTPLUG_PCI && HOTPLUG_PCI_CPCI && X86]
<     }
<    }
<    config HOTPLUG_PCI_SHPC tristate {
<     prompt "SHPC PCI Hotplug driver" if [HOTPLUG_PCI]
<     inherited [HOTPLUG_PCI]
<    }
<    config HOTPLUG_PCI_RPA tristate {
<     prompt "RPA PCI Hotplug driver" if [HOTPLUG_PCI && PPC_PSERIES && EEH && !HOTPLUG_PCI_FAKE]
<     depends on [PPC_PSERIES && EEH && !HOTPLUG_PCI_FAKE]
<     inherited [HOTPLUG_PCI && PPC_PSERIES && EEH && !HOTPLUG_PCI_FAKE]
<     config HOTPLUG_PCI_RPA_DLPAR tristate {
<      prompt "RPA Dynamic Logical Partitioning for I/O slots" if [HOTPLUG_PCI && HOTPLUG_PCI_RPA]
<      depends on [HOTPLUG_PCI_RPA]
<      inherited [HOTPLUG_PCI && HOTPLUG_PCI_RPA]
<     }
<    }
<    config HOTPLUG_PCI_SGI tristate {
<     prompt "SGI PCI Hotplug Support" if [HOTPLUG_PCI && (IA64_SGI_SN2 || IA64_GENERIC)]
<     depends on [IA64_SGI_SN2 || IA64_GENERIC]
<     inherited [HOTPLUG_PCI && (IA64_SGI_SN2 || IA64_GENERIC)]
---
> }
> menu "Kernel Features" {
>  config TICK_ONESHOT boolean {
>  }
>  config NO_HZ boolean {
>   prompt "Tickless System (Dynamic Ticks)" if [GENERIC_TIME && GENERIC_CLOCKEVENTS]
>   depends on [GENERIC_TIME && GENERIC_CLOCKEVENTS]
>   select TICK_ONESHOT if [GENERIC_TIME && GENERIC_CLOCKEVENTS]
>   inherited [GENERIC_TIME && GENERIC_CLOCKEVENTS]
>  }
>  config HIGH_RES_TIMERS boolean {
>   prompt "High Resolution Timer Support" if [GENERIC_TIME && GENERIC_CLOCKEVENTS]
>   depends on [GENERIC_TIME && GENERIC_CLOCKEVENTS]
>   select TICK_ONESHOT if [GENERIC_TIME && GENERIC_CLOCKEVENTS]
>   inherited [GENERIC_TIME && GENERIC_CLOCKEVENTS]
>  }
>  config GENERIC_CLOCKEVENTS_BUILD boolean {
>   default [y] if [GENERIC_CLOCKEVENTS || GENERIC_CLOCKEVENTS_MIGR]
>   depends on [GENERIC_CLOCKEVENTS || GENERIC_CLOCKEVENTS_MIGR]
>   inherited [GENERIC_CLOCKEVENTS || GENERIC_CLOCKEVENTS_MIGR]
>  }
>  config SMP boolean {
>   prompt "Symmetric Multi-Processing (EXPERIMENTAL)" if [EXPERIMENTAL && (REALVIEW_EB_ARM11MP || REALVIEW_EB_A9MP || MACH_REALVIEW_PB11MP || MACH_REALVIEW_PBX || ARCH_OMAP4 || ARCH_U8500) && GENERIC_CLOCKEVENTS]
>   depends on [EXPERIMENTAL && (REALVIEW_EB_ARM11MP || REALVIEW_EB_A9MP || MACH_REALVIEW_PB11MP || MACH_REALVIEW_PBX || ARCH_OMAP4 || ARCH_U8500)]
>   depends on [GENERIC_CLOCKEVENTS]
>   select USE_GENERIC_SMP_HELPERS if [EXPERIMENTAL && (REALVIEW_EB_ARM11MP || REALVIEW_EB_A9MP || MACH_REALVIEW_PB11MP || MACH_REALVIEW_PBX || ARCH_OMAP4 || ARCH_U8500) && GENERIC_CLOCKEVENTS]
>   select HAVE_ARM_SCU if [EXPERIMENTAL && (REALVIEW_EB_ARM11MP || REALVIEW_EB_A9MP || MACH_REALVIEW_PB11MP || MACH_REALVIEW_PBX || ARCH_OMAP4 || ARCH_U8500) && GENERIC_CLOCKEVENTS && (ARCH_REALVIEW || ARCH_OMAP4 || ARCH_U8500)]
>   inherited [EXPERIMENTAL && (REALVIEW_EB_ARM11MP || REALVIEW_EB_A9MP || MACH_REALVIEW_PB11MP || MACH_REALVIEW_PBX || ARCH_OMAP4 || ARCH_U8500) && GENERIC_CLOCKEVENTS]
>   config HAVE_ARM_SCU boolean {
>    depends on [SMP]
>    inherited [SMP]
>   }
>   config HAVE_ARM_TWD boolean {
>    depends on [SMP]
>    inherited [SMP]
>   }
>  }
>  choice boolean {
>   prompt "Memory split" if []
>   default [VMSPLIT_3G] if []
>   config VMSPLIT_3G boolean {
>    prompt "3G/1G user/kernel split" if [<choice>]
>    inherited [<choice>]
>   }
>   config VMSPLIT_2G boolean {
>    prompt "2G/2G user/kernel split" if [<choice>]
>    inherited [<choice>]
>   }
>   config VMSPLIT_1G boolean {
>    prompt "1G/3G user/kernel split" if [<choice>]
>    inherited [<choice>]
>   }
>  }
>  config PAGE_OFFSET hex {
>   default [0x40000000] if [VMSPLIT_1G]
>   default [0x80000000] if [VMSPLIT_2G]
>   default [0xC0000000] if []
>  }
>  config NR_CPUS integer {
>   prompt "Maximum number of CPUs (2-32)" if [SMP]
>   range [2 32] if [SMP]
>   depends on [SMP]
>   default [4] if [SMP]
>   inherited [SMP]
>  }
>  config HOTPLUG_CPU boolean {
>   prompt "Support for hot-pluggable CPUs (EXPERIMENTAL)" if [SMP && HOTPLUG && EXPERIMENTAL]
>   depends on [SMP && HOTPLUG && EXPERIMENTAL]
>   inherited [SMP && HOTPLUG && EXPERIMENTAL]
>  }
>  config LOCAL_TIMERS boolean {
>   prompt "Use local timer interrupts" if [SMP && (REALVIEW_EB_ARM11MP || MACH_REALVIEW_PB11MP || REALVIEW_EB_A9MP || MACH_REALVIEW_PBX || ARCH_OMAP4 || ARCH_U8500)]
>   depends on [SMP && (REALVIEW_EB_ARM11MP || MACH_REALVIEW_PB11MP || REALVIEW_EB_A9MP || MACH_REALVIEW_PBX || ARCH_OMAP4 || ARCH_U8500)]
>   default [y] if [SMP && (REALVIEW_EB_ARM11MP || MACH_REALVIEW_PB11MP || REALVIEW_EB_A9MP || MACH_REALVIEW_PBX || ARCH_OMAP4 || ARCH_U8500)]
>   select HAVE_ARM_TWD if [SMP && (REALVIEW_EB_ARM11MP || MACH_REALVIEW_PB11MP || REALVIEW_EB_A9MP || MACH_REALVIEW_PBX || ARCH_OMAP4 || ARCH_U8500) && (ARCH_REALVIEW || ARCH_OMAP4 || ARCH_U8500)]
>   inherited [SMP && (REALVIEW_EB_ARM11MP || MACH_REALVIEW_PB11MP || REALVIEW_EB_A9MP || MACH_REALVIEW_PBX || ARCH_OMAP4 || ARCH_U8500)]
>  }
>  choice boolean {
>   prompt "Preemption Model" if []
>   default [PREEMPT_NONE] if []
>   config PREEMPT_NONE boolean {
>    prompt "No Forced Preemption (Server)" if [<choice>]
>    inherited [<choice>]
>   }
>   config PREEMPT_VOLUNTARY boolean {
>    prompt "Voluntary Kernel Preemption (Desktop)" if [<choice>]
>    inherited [<choice>]
>   }
>   config PREEMPT boolean {
>    prompt "Preemptible Kernel (Low-Latency Desktop)" if [<choice>]
>    inherited [<choice>]
>   }
>  }
>  config HZ integer {
>   default [128] if [ARCH_L7200]
>   default [200] if [ARCH_EBSA110 || ARCH_S3C2410]
>   default [OMAP_32K_TIMER_HZ] if [ARCH_OMAP && OMAP_32K_TIMER]
>   default [AT91_TIMER_HZ] if [ARCH_AT91]
>   default [100] if []
>  }
>  config THUMB2_KERNEL boolean {
>   prompt "Compile the kernel in Thumb-2 mode" if [CPU_V7 && EXPERIMENTAL]
>   depends on [CPU_V7 && EXPERIMENTAL]
>   select AEABI if [CPU_V7 && EXPERIMENTAL]
>   select ARM_ASM_UNIFIED if [CPU_V7 && EXPERIMENTAL]
>   inherited [CPU_V7 && EXPERIMENTAL]
>  }
>  config ARM_ASM_UNIFIED boolean {
>  }
>  config AEABI boolean {
>   prompt "Use the ARM EABI to compile the kernel" if []
>   config OABI_COMPAT boolean {
>    prompt "Allow old ABI binaries to run with this kernel (EXPERIMENTAL)" if [AEABI && EXPERIMENTAL]
>    depends on [AEABI && EXPERIMENTAL]
>    default [y] if [AEABI && EXPERIMENTAL]
>    inherited [AEABI && EXPERIMENTAL]
>   }
>  }
>  config ARCH_HAS_HOLES_MEMORYMODEL boolean {
>  }
>  config ARCH_DISCONTIGMEM_ENABLE boolean {
>  }
>  config ARCH_SPARSEMEM_ENABLE boolean {
>  }
>  config ARCH_SPARSEMEM_DEFAULT boolean {
>   default [ARCH_SPARSEMEM_ENABLE] if []
>  }
>  config ARCH_SELECT_MEMORY_MODEL boolean {
>   default [ARCH_DISCONTIGMEM_ENABLE && ARCH_SPARSEMEM_ENABLE] if []
>  }
>  config NODES_SHIFT integer {
>   default [4] if [NEED_MULTIPLE_NODES && ARCH_LH7A40X]
>   default [2] if [NEED_MULTIPLE_NODES]
>   depends on [NEED_MULTIPLE_NODES]
>   inherited [NEED_MULTIPLE_NODES]
>  }
>  config HIGHMEM boolean {
>   prompt "High Memory Support (EXPERIMENTAL)" if [MMU && EXPERIMENTAL]
>   depends on [MMU && EXPERIMENTAL]
>   inherited [MMU && EXPERIMENTAL]
>   config HIGHPTE boolean {
>    prompt "Allocate 2nd-level pagetables from highmem" if [HIGHMEM && !OUTER_CACHE]
>    depends on [HIGHMEM]
>    depends on [!OUTER_CACHE]
>    inherited [HIGHMEM && !OUTER_CACHE]
>   }
>  }
>  config SELECT_MEMORY_MODEL boolean {
>   default [y] if [EXPERIMENTAL || ARCH_SELECT_MEMORY_MODEL]
>   depends on [EXPERIMENTAL || ARCH_SELECT_MEMORY_MODEL]
>   inherited [EXPERIMENTAL || ARCH_SELECT_MEMORY_MODEL]
>  }
>  choice boolean {
>   prompt "Memory model" if [SELECT_MEMORY_MODEL]
>   depends on [SELECT_MEMORY_MODEL]
>   default [DISCONTIGMEM_MANUAL] if [SELECT_MEMORY_MODEL && ARCH_DISCONTIGMEM_DEFAULT]
>   default [SPARSEMEM_MANUAL] if [SELECT_MEMORY_MODEL && ARCH_SPARSEMEM_DEFAULT]
>   default [FLATMEM_MANUAL] if [SELECT_MEMORY_MODEL]
>   config FLATMEM_MANUAL boolean {
>    prompt "Flat Memory" if [<choice> && (!ARCH_DISCONTIGMEM_ENABLE && !ARCH_SPARSEMEM_ENABLE || ARCH_FLATMEM_ENABLE)]
>    depends on [!(ARCH_DISCONTIGMEM_ENABLE || ARCH_SPARSEMEM_ENABLE) || ARCH_FLATMEM_ENABLE]
>    inherited [<choice> && (!ARCH_DISCONTIGMEM_ENABLE && !ARCH_SPARSEMEM_ENABLE || ARCH_FLATMEM_ENABLE)]
>   }
>   config DISCONTIGMEM_MANUAL boolean {
>    prompt "Discontiguous Memory" if [<choice> && ARCH_DISCONTIGMEM_ENABLE]
>    depends on [ARCH_DISCONTIGMEM_ENABLE]
>    inherited [<choice> && ARCH_DISCONTIGMEM_ENABLE]
>   }
>   config SPARSEMEM_MANUAL boolean {
>    prompt "Sparse Memory" if [<choice> && ARCH_SPARSEMEM_ENABLE]
>    depends on [ARCH_SPARSEMEM_ENABLE]
>    inherited [<choice> && ARCH_SPARSEMEM_ENABLE]
>   }
>  }
>  config DISCONTIGMEM boolean {
>   default [y] if [!SELECT_MEMORY_MODEL && ARCH_DISCONTIGMEM_ENABLE || DISCONTIGMEM_MANUAL]
>   depends on [!SELECT_MEMORY_MODEL && ARCH_DISCONTIGMEM_ENABLE || DISCONTIGMEM_MANUAL]
>   inherited [!SELECT_MEMORY_MODEL && ARCH_DISCONTIGMEM_ENABLE || DISCONTIGMEM_MANUAL]
>  }
>  config SPARSEMEM boolean {
>   default [y] if [!SELECT_MEMORY_MODEL && ARCH_SPARSEMEM_ENABLE || SPARSEMEM_MANUAL]
>   depends on [!SELECT_MEMORY_MODEL && ARCH_SPARSEMEM_ENABLE || SPARSEMEM_MANUAL]
>   inherited [!SELECT_MEMORY_MODEL && ARCH_SPARSEMEM_ENABLE || SPARSEMEM_MANUAL]
>  }
>  config FLATMEM boolean {
>   default [y] if [!DISCONTIGMEM && !SPARSEMEM || FLATMEM_MANUAL]
>   depends on [!DISCONTIGMEM && !SPARSEMEM || FLATMEM_MANUAL]
>   inherited [!DISCONTIGMEM && !SPARSEMEM || FLATMEM_MANUAL]
>  }
>  config FLAT_NODE_MEM_MAP boolean {
>   default [y] if [!SPARSEMEM]
>   depends on [!SPARSEMEM]
>   inherited [!SPARSEMEM]
>  }
>  config NEED_MULTIPLE_NODES boolean {
>   default [y] if [DISCONTIGMEM || NUMA]
>   depends on [DISCONTIGMEM || NUMA]
>   inherited [DISCONTIGMEM || NUMA]
>  }
>  config HAVE_MEMORY_PRESENT boolean {
>   default [y] if [ARCH_HAVE_MEMORY_PRESENT || SPARSEMEM]
>   depends on [ARCH_HAVE_MEMORY_PRESENT || SPARSEMEM]
>   inherited [ARCH_HAVE_MEMORY_PRESENT || SPARSEMEM]
>  }
>  config SPARSEMEM_STATIC boolean {
>  }
>  config SPARSEMEM_EXTREME boolean {
>   default [y] if [SPARSEMEM && !SPARSEMEM_STATIC]
>   depends on [SPARSEMEM && !SPARSEMEM_STATIC]
>   inherited [SPARSEMEM && !SPARSEMEM_STATIC]
>  }
>  config SPARSEMEM_VMEMMAP_ENABLE boolean {
>  }
>  config SPARSEMEM_VMEMMAP boolean {
>   prompt "Sparse Memory virtual memmap" if [SPARSEMEM && SPARSEMEM_VMEMMAP_ENABLE]
>   depends on [SPARSEMEM && SPARSEMEM_VMEMMAP_ENABLE]
>   default [y] if [SPARSEMEM && SPARSEMEM_VMEMMAP_ENABLE]
>   inherited [SPARSEMEM && SPARSEMEM_VMEMMAP_ENABLE]
>  }
>  config MEMORY_HOTPLUG boolean {
>   prompt "Allow for memory hot-add" if [(SPARSEMEM || X86_64_ACPI_NUMA) && HOTPLUG && ARCH_ENABLE_MEMORY_HOTPLUG && (IA64 || X86 || PPC_BOOK3S_64 || SUPERH || S390)]
>   depends on [SPARSEMEM || X86_64_ACPI_NUMA]
>   depends on [HOTPLUG && ARCH_ENABLE_MEMORY_HOTPLUG]
>   depends on [IA64 || X86 || PPC_BOOK3S_64 || SUPERH || S390]
>   inherited [(SPARSEMEM || X86_64_ACPI_NUMA) && HOTPLUG && ARCH_ENABLE_MEMORY_HOTPLUG && (IA64 || X86 || PPC_BOOK3S_64 || SUPERH || S390)]
>   config MEMORY_HOTPLUG_SPARSE boolean {
>    default [y] if [SPARSEMEM && MEMORY_HOTPLUG]
>    depends on [SPARSEMEM && MEMORY_HOTPLUG]
>    inherited [SPARSEMEM && MEMORY_HOTPLUG]
>   }
>   config MEMORY_HOTREMOVE boolean {
>    prompt "Allow for memory hot remove" if [MEMORY_HOTPLUG && ARCH_ENABLE_MEMORY_HOTREMOVE && MIGRATION]
>    depends on [MEMORY_HOTPLUG && ARCH_ENABLE_MEMORY_HOTREMOVE]
>    depends on [MIGRATION]
>    inherited [MEMORY_HOTPLUG && ARCH_ENABLE_MEMORY_HOTREMOVE && MIGRATION]
>   }
>  }
>  config PAGEFLAGS_EXTENDED boolean {
>   default [y] if [64BIT || SPARSEMEM_VMEMMAP || !SPARSEMEM]
>   depends on [64BIT || SPARSEMEM_VMEMMAP || !SPARSEMEM]
>   inherited [64BIT || SPARSEMEM_VMEMMAP || !SPARSEMEM]
>  }
>  config SPLIT_PTLOCK_CPUS integer {
>   default [999999] if [ARM && !CPU_CACHE_VIPT]
>   default [999999] if [PARISC && !PA20]
>   default [999999] if [DEBUG_SPINLOCK || DEBUG_LOCK_ALLOC]
>   default [4] if []
>  }
>  config MIGRATION boolean {
>   prompt "Page migration" if [NUMA || ARCH_ENABLE_MEMORY_HOTREMOVE]
>   default [y] if [NUMA || ARCH_ENABLE_MEMORY_HOTREMOVE]
>   depends on [NUMA || ARCH_ENABLE_MEMORY_HOTREMOVE]
>   inherited [NUMA || ARCH_ENABLE_MEMORY_HOTREMOVE]
>  }
>  config PHYS_ADDR_T_64BIT boolean {
>   default [64BIT || ARCH_PHYS_ADDR_T_64BIT] if []
>  }
>  config ZONE_DMA_FLAG integer {
>   default [0] if [!ZONE_DMA]
>   default [1] if []
>  }
>  config BOUNCE boolean {
>   default [y] if [BLOCK && MMU && (ZONE_DMA || HIGHMEM)]
>   depends on [BLOCK && MMU && (ZONE_DMA || HIGHMEM)]
>   inherited [BLOCK && MMU && (ZONE_DMA || HIGHMEM)]
>  }
>  config NR_QUICK integer {
>   depends on [QUICKLIST]
>   default [2] if [QUICKLIST && (SUPERH || AVR32)]
>   default [1] if [QUICKLIST]
>   inherited [QUICKLIST]
>  }
>  config VIRT_TO_BUS boolean {
>   default [y] if [!ARCH_NO_VIRT_TO_BUS]
>   depends on [!ARCH_NO_VIRT_TO_BUS]
>   inherited [!ARCH_NO_VIRT_TO_BUS]
>  }
>  config MMU_NOTIFIER boolean {
>  }
>  config KSM boolean {
>   prompt "Enable KSM for page merging" if [MMU]
>   depends on [MMU]
>   inherited [MMU]
>  }
>  config DEFAULT_MMAP_MIN_ADDR integer {
>   prompt "Low address space to protect from user allocation" if [MMU]
>   depends on [MMU]
>   default [4096] if [MMU]
>   inherited [MMU]
>  }
>  config ARCH_SUPPORTS_MEMORY_FAILURE boolean {
>  }
>  config MEMORY_FAILURE boolean {
>   depends on [MMU]
>   depends on [ARCH_SUPPORTS_MEMORY_FAILURE]
>   prompt "Enable recovery from hardware memory errors" if [MMU && ARCH_SUPPORTS_MEMORY_FAILURE]
>   inherited [MMU && ARCH_SUPPORTS_MEMORY_FAILURE]
>   config HWPOISON_INJECT tristate {
>    prompt "HWPoison pages injector" if [MEMORY_FAILURE && DEBUG_KERNEL && PROC_FS]
>    depends on [MEMORY_FAILURE && DEBUG_KERNEL && PROC_FS]
>    select PROC_PAGE_MONITOR if [MEMORY_FAILURE && DEBUG_KERNEL && PROC_FS]
>    inherited [MEMORY_FAILURE && DEBUG_KERNEL && PROC_FS]
>   }
>  }
>  config NOMMU_INITIAL_TRIM_EXCESS integer {
>   prompt "Turn on mmap() excess space trimming before booting" if [!MMU]
>   depends on [!MMU]
>   default [1] if [!MMU]
>   inherited [!MMU]
>  }
>  config LEDS boolean {
>   prompt "Timer and CPU usage LEDs" if [ARCH_CDB89712 || ARCH_EBSA110 || ARCH_EBSA285 || ARCH_INTEGRATOR || ARCH_LUBBOCK || MACH_MAINSTONE || ARCH_NETWINDER || ARCH_OMAP || ARCH_P720T || ARCH_PXA_IDP || ARCH_SA1100 || ARCH_SHARK || ARCH_VERSATILE || ARCH_AT91 || ARCH_DAVINCI || ARCH_KS8695 || MACH_RD88F5182 || ARCH_REALVIEW]
>   depends on [ARCH_CDB89712 || ARCH_EBSA110 || ARCH_EBSA285 || ARCH_INTEGRATOR || ARCH_LUBBOCK || MACH_MAINSTONE || ARCH_NETWINDER || ARCH_OMAP || ARCH_P720T || ARCH_PXA_IDP || ARCH_SA1100 || ARCH_SHARK || ARCH_VERSATILE || ARCH_AT91 || ARCH_DAVINCI || ARCH_KS8695 || MACH_RD88F5182 || ARCH_REALVIEW]
>   inherited [ARCH_CDB89712 || ARCH_EBSA110 || ARCH_EBSA285 || ARCH_INTEGRATOR || ARCH_LUBBOCK || MACH_MAINSTONE || ARCH_NETWINDER || ARCH_OMAP || ARCH_P720T || ARCH_PXA_IDP || ARCH_SA1100 || ARCH_SHARK || ARCH_VERSATILE || ARCH_AT91 || ARCH_DAVINCI || ARCH_KS8695 || MACH_RD88F5182 || ARCH_REALVIEW]
>   config LEDS_TIMER boolean {
>    prompt "Timer LED" if [LEDS && !GENERIC_CLOCKEVENTS && (!ARCH_CDB89712 && !ARCH_OMAP || OMAP_OSK_MISTRAL || MACH_OMAP_H2 || MACH_OMAP_PERSEUS2)]
>    depends on [LEDS]
>    depends on [!GENERIC_CLOCKEVENTS]
>    default [y] if [LEDS && !GENERIC_CLOCKEVENTS && ARCH_EBSA110]
>    inherited [LEDS && !GENERIC_CLOCKEVENTS]
>   }
>   config LEDS_CPU boolean {
>    prompt "CPU usage LED" if [LEDS && (!ARCH_CDB89712 && !ARCH_EBSA110 && !ARCH_OMAP || OMAP_OSK_MISTRAL || MACH_OMAP_H2 || MACH_OMAP_PERSEUS2)]
>    depends on [LEDS]
>    inherited [LEDS]
>   }
>  }
>  config ALIGNMENT_TRAP boolean {
>   depends on [CPU_CP15_MMU]
>   default [y] if [CPU_CP15_MMU && !ARCH_EBSA110]
>   inherited [CPU_CP15_MMU]
>  }
>  config UACCESS_WITH_MEMCPY boolean {
>   prompt "Use kernel mem{cpy,set}() for {copy_to,clear}_user() (EXPERIMENTAL)" if [MMU && EXPERIMENTAL]
>   depends on [MMU && EXPERIMENTAL]
>   default [y] if [MMU && EXPERIMENTAL && CPU_FEROCEON]
>   inherited [MMU && EXPERIMENTAL]
>  }
> }
> menu "Boot options" {
>  config ZBOOT_ROM_TEXT hex {
>   prompt "Compressed ROM boot loader base address" if []
>   default [0] if []
>  }
>  config ZBOOT_ROM_BSS hex {
>   prompt "Compressed ROM boot loader BSS address" if []
>   default [0] if []
>   config ZBOOT_ROM boolean {
>    prompt "Compressed boot loader in ROM/flash" if [ZBOOT_ROM_TEXT!="ZBOOT_ROM_BSS"]
>    depends on [ZBOOT_ROM_TEXT!="ZBOOT_ROM_BSS"]
>    inherited [ZBOOT_ROM_TEXT!="ZBOOT_ROM_BSS"]
>   }
>  }
>  config CMDLINE string {
>   prompt "Default kernel command string" if []
>   default [""] if []
>  }
>  config XIP_KERNEL boolean {
>   prompt "Kernel Execute-In-Place from ROM" if [!ZBOOT_ROM]
>   depends on [!ZBOOT_ROM]
>   inherited [!ZBOOT_ROM]
>   config XIP_PHYS_ADDR hex {
>    prompt "XIP Kernel Physical Location" if [XIP_KERNEL]
>    depends on [XIP_KERNEL]
>    default [0x00080000] if [XIP_KERNEL]
>    inherited [XIP_KERNEL]
>   }
>  }
>  config KEXEC boolean {
>   prompt "Kexec system call (EXPERIMENTAL)" if [EXPERIMENTAL]
>   depends on [EXPERIMENTAL]
>   inherited [EXPERIMENTAL]
>   config ATAGS_PROC boolean {
>    prompt "Export atags in procfs" if [KEXEC]
>    depends on [KEXEC]
>    default [y] if [KEXEC]
>    inherited [KEXEC]
>   }
>  }
> }
> menu "CPU Power Management" {
>  if [ARCH_HAS_CPUFREQ] {
>   config CPU_FREQ boolean {
>    prompt "CPU Frequency scaling" if [ARCH_HAS_CPUFREQ]
>    inherited [ARCH_HAS_CPUFREQ]
>    if [ARCH_HAS_CPUFREQ && CPU_FREQ] {
>     config CPU_FREQ_TABLE tristate {
>      inherited [ARCH_HAS_CPUFREQ && CPU_FREQ]
>     }
>     config CPU_FREQ_DEBUG boolean {
>      prompt "Enable CPUfreq debugging" if [ARCH_HAS_CPUFREQ && CPU_FREQ]
>      inherited [ARCH_HAS_CPUFREQ && CPU_FREQ]
>     }
>     config CPU_FREQ_STAT tristate {
>      prompt "CPU frequency translation statistics" if [ARCH_HAS_CPUFREQ && CPU_FREQ]
>      select CPU_FREQ_TABLE if [ARCH_HAS_CPUFREQ && CPU_FREQ]
>      default [y] if [ARCH_HAS_CPUFREQ && CPU_FREQ]
>      inherited [ARCH_HAS_CPUFREQ && CPU_FREQ]
>      config CPU_FREQ_STAT_DETAILS boolean {
>       prompt "CPU frequency translation statistics details" if [ARCH_HAS_CPUFREQ && CPU_FREQ && CPU_FREQ_STAT]
>       depends on [CPU_FREQ_STAT]
>       inherited [ARCH_HAS_CPUFREQ && CPU_FREQ && CPU_FREQ_STAT]
>      }
>     }
>     choice boolean {
>      prompt "Default CPUFreq governor" if [ARCH_HAS_CPUFREQ && CPU_FREQ]
>      default [CPU_FREQ_DEFAULT_GOV_USERSPACE] if [ARCH_HAS_CPUFREQ && CPU_FREQ && (CPU_FREQ_SA1100 || CPU_FREQ_SA1110)]
>      default [CPU_FREQ_DEFAULT_GOV_PERFORMANCE] if [ARCH_HAS_CPUFREQ && CPU_FREQ]
>      config CPU_FREQ_DEFAULT_GOV_PERFORMANCE boolean {
>       prompt "performance" if [<choice>]
>       select CPU_FREQ_GOV_PERFORMANCE if [<choice>]
>       inherited [<choice>]
>      }
>      config CPU_FREQ_DEFAULT_GOV_POWERSAVE boolean {
>       prompt "powersave" if [<choice> && EMBEDDED]
>       depends on [EMBEDDED]
>       select CPU_FREQ_GOV_POWERSAVE if [<choice> && EMBEDDED]
>       inherited [<choice> && EMBEDDED]
>      }
>      config CPU_FREQ_DEFAULT_GOV_USERSPACE boolean {
>       prompt "userspace" if [<choice>]
>       select CPU_FREQ_GOV_USERSPACE if [<choice>]
>       inherited [<choice>]
>      }
>      config CPU_FREQ_DEFAULT_GOV_ONDEMAND boolean {
>       prompt "ondemand" if [<choice>]
>       select CPU_FREQ_GOV_ONDEMAND if [<choice>]
>       select CPU_FREQ_GOV_PERFORMANCE if [<choice>]
>       inherited [<choice>]
>      }
>      config CPU_FREQ_DEFAULT_GOV_CONSERVATIVE boolean {
>       prompt "conservative" if [<choice>]
>       select CPU_FREQ_GOV_CONSERVATIVE if [<choice>]
>       select CPU_FREQ_GOV_PERFORMANCE if [<choice>]
>       inherited [<choice>]
>      }
>     }
>     config CPU_FREQ_GOV_PERFORMANCE tristate {
>      prompt "'performance' governor" if [ARCH_HAS_CPUFREQ && CPU_FREQ]
>      inherited [ARCH_HAS_CPUFREQ && CPU_FREQ]
>     }
>     config CPU_FREQ_GOV_POWERSAVE tristate {
>      prompt "'powersave' governor" if [ARCH_HAS_CPUFREQ && CPU_FREQ]
>      inherited [ARCH_HAS_CPUFREQ && CPU_FREQ]
>     }
>     config CPU_FREQ_GOV_USERSPACE tristate {
>      prompt "'userspace' governor for userspace frequency scaling" if [ARCH_HAS_CPUFREQ && CPU_FREQ]
>      inherited [ARCH_HAS_CPUFREQ && CPU_FREQ]
>     }
>     config CPU_FREQ_GOV_ONDEMAND tristate {
>      prompt "'ondemand' cpufreq policy governor" if [ARCH_HAS_CPUFREQ && CPU_FREQ]
>      select CPU_FREQ_TABLE if [ARCH_HAS_CPUFREQ && CPU_FREQ]
>      inherited [ARCH_HAS_CPUFREQ && CPU_FREQ]
>     }
>     config CPU_FREQ_GOV_CONSERVATIVE tristate {
>      prompt "'conservative' cpufreq governor" if [ARCH_HAS_CPUFREQ && CPU_FREQ]
>      depends on [CPU_FREQ]
>      inherited [ARCH_HAS_CPUFREQ && CPU_FREQ]
>     }
3498a6850,6947
>   config CPU_FREQ_SA1100 boolean {
>    inherited [ARCH_HAS_CPUFREQ]
>   }
>   config CPU_FREQ_SA1110 boolean {
>    inherited [ARCH_HAS_CPUFREQ]
>   }
>   config CPU_FREQ_INTEGRATOR tristate {
>    prompt "CPUfreq driver for ARM Integrator CPUs" if [ARCH_HAS_CPUFREQ && ARCH_INTEGRATOR && CPU_FREQ]
>    depends on [ARCH_INTEGRATOR && CPU_FREQ]
>    default [y] if [ARCH_HAS_CPUFREQ && ARCH_INTEGRATOR && CPU_FREQ]
>    inherited [ARCH_HAS_CPUFREQ && ARCH_INTEGRATOR && CPU_FREQ]
>   }
>   config CPU_FREQ_PXA boolean {
>    depends on [CPU_FREQ && ARCH_PXA && PXA25x]
>    default [y] if [ARCH_HAS_CPUFREQ && CPU_FREQ && ARCH_PXA && PXA25x]
>    select CPU_FREQ_DEFAULT_GOV_USERSPACE if [ARCH_HAS_CPUFREQ && CPU_FREQ && ARCH_PXA && PXA25x]
>    inherited [ARCH_HAS_CPUFREQ && CPU_FREQ && ARCH_PXA && PXA25x]
>   }
>   config CPU_FREQ_S3C64XX boolean {
>    prompt "CPUfreq support for Samsung S3C64XX CPUs" if [ARCH_HAS_CPUFREQ && CPU_FREQ && CPU_S3C6410]
>    depends on [CPU_FREQ && CPU_S3C6410]
>    inherited [ARCH_HAS_CPUFREQ && CPU_FREQ && CPU_S3C6410]
>   }
>   config CPU_FREQ_S3C boolean {
>    inherited [ARCH_HAS_CPUFREQ]
>   }
>   config CPU_FREQ_S3C24XX boolean {
>    prompt "CPUfreq driver for Samsung S3C24XX series CPUs" if [ARCH_HAS_CPUFREQ && ARCH_S3C2410 && CPU_FREQ && EXPERIMENTAL]
>    depends on [ARCH_S3C2410 && CPU_FREQ && EXPERIMENTAL]
>    select CPU_FREQ_S3C if [ARCH_HAS_CPUFREQ && ARCH_S3C2410 && CPU_FREQ && EXPERIMENTAL]
>    inherited [ARCH_HAS_CPUFREQ && ARCH_S3C2410 && CPU_FREQ && EXPERIMENTAL]
>    config CPU_FREQ_S3C24XX_PLL boolean {
>     prompt "Support CPUfreq changing of PLL frequency" if [ARCH_HAS_CPUFREQ && CPU_FREQ_S3C24XX && EXPERIMENTAL]
>     depends on [CPU_FREQ_S3C24XX && EXPERIMENTAL]
>     inherited [ARCH_HAS_CPUFREQ && CPU_FREQ_S3C24XX && EXPERIMENTAL]
>    }
>    config CPU_FREQ_S3C24XX_DEBUG boolean {
>     prompt "Debug CPUfreq Samsung driver core" if [ARCH_HAS_CPUFREQ && CPU_FREQ_S3C24XX]
>     depends on [CPU_FREQ_S3C24XX]
>     inherited [ARCH_HAS_CPUFREQ && CPU_FREQ_S3C24XX]
>    }
>    config CPU_FREQ_S3C24XX_IODEBUG boolean {
>     prompt "Debug CPUfreq Samsung driver IO timing" if [ARCH_HAS_CPUFREQ && CPU_FREQ_S3C24XX]
>     depends on [CPU_FREQ_S3C24XX]
>     inherited [ARCH_HAS_CPUFREQ && CPU_FREQ_S3C24XX]
>    }
>    config CPU_FREQ_S3C24XX_DEBUGFS boolean {
>     prompt "Export debugfs for CPUFreq" if [ARCH_HAS_CPUFREQ && CPU_FREQ_S3C24XX && DEBUG_FS]
>     depends on [CPU_FREQ_S3C24XX && DEBUG_FS]
>     inherited [ARCH_HAS_CPUFREQ && CPU_FREQ_S3C24XX && DEBUG_FS]
>    }
>   }
>  }
>  config CPU_IDLE boolean {
>   prompt "CPU idle PM support" if []
>   default [ACPI] if []
>   config CPU_IDLE_GOV_LADDER boolean {
>    depends on [CPU_IDLE]
>    default [y] if [CPU_IDLE]
>    inherited [CPU_IDLE]
>   }
>   config CPU_IDLE_GOV_MENU boolean {
>    depends on [CPU_IDLE && NO_HZ]
>    default [y] if [CPU_IDLE && NO_HZ]
>    inherited [CPU_IDLE && NO_HZ]
>   }
>  }
> }
> menu "Floating point emulation" {
>  config FPE_NWFPE boolean {
>   prompt "NWFPE math emulation" if [!AEABI || OABI_COMPAT]
>   depends on [!AEABI || OABI_COMPAT]
>   inherited [!AEABI || OABI_COMPAT]
>   config FPE_NWFPE_XP boolean {
>    prompt "Support extended precision" if [FPE_NWFPE]
>    depends on [FPE_NWFPE]
>    inherited [FPE_NWFPE]
>   }
>  }
>  config FPE_FASTFPE boolean {
>   prompt "FastFPE math emulation (EXPERIMENTAL)" if [(!AEABI || OABI_COMPAT) && !CPU_32v3 && EXPERIMENTAL]
>   depends on [(!AEABI || OABI_COMPAT) && !CPU_32v3 && EXPERIMENTAL]
>   inherited [(!AEABI || OABI_COMPAT) && !CPU_32v3 && EXPERIMENTAL]
>  }
>  config VFP boolean {
>   prompt "VFP-format floating point maths" if [CPU_V6 || CPU_ARM926T || CPU_V7 || CPU_FEROCEON]
>   depends on [CPU_V6 || CPU_ARM926T || CPU_V7 || CPU_FEROCEON]
>   inherited [CPU_V6 || CPU_ARM926T || CPU_V7 || CPU_FEROCEON]
>   config VFPv3 boolean {
>    depends on [VFP]
>    default [y] if [VFP && CPU_V7]
>    inherited [VFP]
>   }
>   config NEON boolean {
>    prompt "Advanced SIMD (NEON) Extension support" if [VFPv3 && CPU_V7]
>    depends on [VFPv3 && CPU_V7]
>    inherited [VFPv3 && CPU_V7]
>   }
3501c6950
< menu "Executable file formats / Emulations" {
---
> menu "Userspace binary formats" {
3566,3596c7015,7109
<  config IA32_EMULATION boolean {
<   prompt "IA32 Emulation" if [X86_64]
<   depends on [X86_64]
<   select COMPAT_BINFMT_ELF if [X86_64]
<   inherited [X86_64]
<   config IA32_AOUT tristate {
<    prompt "IA32 a.out support" if [IA32_EMULATION]
<    depends on [IA32_EMULATION]
<    inherited [IA32_EMULATION]
<   }
<   config COMPAT boolean {
<    default [y] if [IA32_EMULATION]
<    depends on [IA32_EMULATION]
<    inherited [IA32_EMULATION]
<   }
<  }
<  config COMPAT_FOR_U64_ALIGNMENT boolean {
<   default [COMPAT] if [X86_64]
<   depends on [X86_64]
<   inherited [X86_64]
<  }
<  config SYSVIPC_COMPAT boolean {
<   default [y] if [COMPAT && SYSVIPC]
<   depends on [COMPAT && SYSVIPC]
<   inherited [COMPAT && SYSVIPC]
<  }
< }
< config HAVE_ATOMIC_IOMAP boolean {
<  default [y] if [X86_32]
<  depends on [X86_32]
<  inherited [X86_32]
---
>  config ARTHUR tristate {
>   prompt "RISC OS personality" if [!AEABI]
>   depends on [!AEABI]
>   inherited [!AEABI]
>  }
> }
> menu "Power management options" {
>  config PM boolean {
>   prompt "Power Management support" if [!IA64_HP_SIM]
>   depends on [!IA64_HP_SIM]
>   inherited [!IA64_HP_SIM]
>   config PM_DEBUG boolean {
>    prompt "Power Management Debug Support" if [PM]
>    depends on [PM]
>    inherited [PM]
>    config PM_VERBOSE boolean {
>     prompt "Verbose Power Management debugging" if [PM_DEBUG]
>     depends on [PM_DEBUG]
>     default [n] if [PM_DEBUG]
>     inherited [PM_DEBUG]
>    }
>    config CAN_PM_TRACE boolean {
>     default [y] if [PM_DEBUG && PM_SLEEP && EXPERIMENTAL]
>     depends on [PM_DEBUG && PM_SLEEP && EXPERIMENTAL]
>     inherited [PM_DEBUG && PM_SLEEP && EXPERIMENTAL]
>    }
>   }
>  }
>  config PM_TRACE boolean {
>  }
>  config PM_TRACE_RTC boolean {
>   prompt "Suspend/resume event tracing" if [CAN_PM_TRACE && X86]
>   depends on [CAN_PM_TRACE]
>   depends on [X86]
>   select PM_TRACE if [CAN_PM_TRACE && X86]
>   default [n] if [CAN_PM_TRACE && X86]
>   inherited [CAN_PM_TRACE && X86]
>  }
>  config PM_SLEEP_SMP boolean {
>   depends on [SMP]
>   depends on [ARCH_SUSPEND_POSSIBLE || ARCH_HIBERNATION_POSSIBLE]
>   depends on [PM_SLEEP]
>   select HOTPLUG_CPU if [SMP && (ARCH_SUSPEND_POSSIBLE || ARCH_HIBERNATION_POSSIBLE) && PM_SLEEP]
>   default [y] if [SMP && (ARCH_SUSPEND_POSSIBLE || ARCH_HIBERNATION_POSSIBLE) && PM_SLEEP]
>   inherited [SMP && (ARCH_SUSPEND_POSSIBLE || ARCH_HIBERNATION_POSSIBLE) && PM_SLEEP]
>  }
>  config PM_SLEEP boolean {
>   depends on [SUSPEND || HIBERNATION || XEN_SAVE_RESTORE]
>   default [y] if [SUSPEND || HIBERNATION || XEN_SAVE_RESTORE]
>   inherited [SUSPEND || HIBERNATION || XEN_SAVE_RESTORE]
>  }
>  config SUSPEND boolean {
>   prompt "Suspend to RAM and standby" if [PM && ARCH_SUSPEND_POSSIBLE]
>   depends on [PM && ARCH_SUSPEND_POSSIBLE]
>   default [y] if [PM && ARCH_SUSPEND_POSSIBLE]
>   inherited [PM && ARCH_SUSPEND_POSSIBLE]
>   config PM_TEST_SUSPEND boolean {
>    prompt "Test suspend/resume and wakealarm during bootup" if [SUSPEND && PM_DEBUG && RTC_CLASS="y"]
>    depends on [SUSPEND && PM_DEBUG && RTC_CLASS="y"]
>    inherited [SUSPEND && PM_DEBUG && RTC_CLASS="y"]
>   }
>   config SUSPEND_FREEZER boolean {
>    prompt "Enable freezer for suspend to RAM/standby" if [SUSPEND && (ARCH_WANTS_FREEZER_CONTROL || BROKEN)]
>    depends on [SUSPEND]
>    default [y] if [SUSPEND]
>    inherited [SUSPEND]
>   }
>  }
>  config HIBERNATION_NVS boolean {
>  }
>  config HIBERNATION boolean {
>   prompt "Hibernation (aka 'suspend to disk')" if [PM && SWAP && ARCH_HIBERNATION_POSSIBLE]
>   depends on [PM && SWAP && ARCH_HIBERNATION_POSSIBLE]
>   select HIBERNATION_NVS if [PM && SWAP && ARCH_HIBERNATION_POSSIBLE && HAS_IOMEM]
>   inherited [PM && SWAP && ARCH_HIBERNATION_POSSIBLE]
>   config PM_STD_PARTITION string {
>    prompt "Default resume partition" if [HIBERNATION]
>    depends on [HIBERNATION]
>    default [""] if [HIBERNATION]
>    inherited [HIBERNATION]
>   }
>  }
>  config APM_EMULATION tristate {
>   prompt "Advanced Power Management Emulation" if [PM && SYS_SUPPORTS_APM_EMULATION]
>   depends on [PM && SYS_SUPPORTS_APM_EMULATION]
>   inherited [PM && SYS_SUPPORTS_APM_EMULATION]
>  }
>  config PM_RUNTIME boolean {
>   prompt "Run-time PM core functionality" if [PM]
>   depends on [PM]
>   inherited [PM]
>  }
>  config ARCH_SUSPEND_POSSIBLE boolean {
>   default [y] if []
>  }
32051,32108d35563
< menu "Firmware Drivers" {
<  config EDD tristate {
<   prompt "BIOS Enhanced Disk Drive calls determine boot disk" if [X86]
<   depends on [X86]
<   inherited [X86]
<   config EDD_OFF boolean {
<    prompt "Sets default behavior for EDD detection to off" if [EDD]
<    depends on [EDD]
<    default [n] if [EDD]
<    inherited [EDD]
<   }
<  }
<  config FIRMWARE_MEMMAP boolean {
<   prompt "Add firmware-provided memory map to sysfs" if [EMBEDDED]
<   default [X86] if []
<  }
<  config EFI_VARS tristate {
<   prompt "EFI Variable Support via sysfs" if [EFI]
<   depends on [EFI]
<   default [n] if [EFI]
<   inherited [EFI]
<  }
<  config EFI_PCDP boolean {
<   prompt "Console device selection via EFI PCDP or HCDP table" if [ACPI && EFI && IA64]
<   depends on [ACPI && EFI && IA64]
<   default [y] if [ACPI && EFI && IA64]
<   inherited [ACPI && EFI && IA64]
<  }
<  config DELL_RBU tristate {
<   prompt "BIOS update support for DELL systems via sysfs" if [X86]
<   depends on [X86]
<   select FW_LOADER if [X86]
<   inherited [X86]
<  }
<  config DCDBAS tristate {
<   prompt "Dell Systems Management Base Driver" if [X86]
<   depends on [X86]
<   inherited [X86]
<  }
<  config DMIID boolean {
<   prompt "Export DMI identification via sysfs to userspace" if [DMI]
<   depends on [DMI]
<   default [y] if [DMI]
<   inherited [DMI]
<  }
<  config ISCSI_IBFT_FIND boolean {
<   prompt "iSCSI Boot Firmware Table Attributes" if [X86]
<   depends on [X86]
<   default [n] if [X86]
<   inherited [X86]
<   config ISCSI_IBFT tristate {
<    prompt "iSCSI Boot Firmware Table Attributes module" if [ISCSI_IBFT_FIND]
<    depends on [ISCSI_IBFT_FIND]
<    default [n] if [ISCSI_IBFT_FIND]
<    inherited [ISCSI_IBFT_FIND]
<   }
<  }
< }
33578,33580d37032
<  config TRACE_IRQFLAGS_SUPPORT boolean {
<   default [y] if []
<  }
33927a37380,37381
>   depends on [!THUMB2_KERNEL]
>   default [y] if [!THUMB2_KERNEL && !ARM_UNWIND]
34492,34497c37946,37958
<  config STRICT_DEVMEM boolean {
<   prompt "Filter access to /dev/mem" if []
<  }
<  config X86_VERBOSE_BOOTUP boolean {
<   prompt "Enable verbose x86 bootup info messages" if []
<   default [y] if []
---
>  config FRAME_POINTER boolean {
>   prompt "Compile the kernel with frame pointers" if [DEBUG_KERNEL && (CRIS || M68K || M68KNOMMU || FRV || UML || AVR32 || SUPERH || BLACKFIN || MN10300) || ARCH_WANT_FRAME_POINTERS]
>   depends on [DEBUG_KERNEL && (CRIS || M68K || M68KNOMMU || FRV || UML || AVR32 || SUPERH || BLACKFIN || MN10300) || ARCH_WANT_FRAME_POINTERS]
>   default [y] if [(DEBUG_KERNEL && (CRIS || M68K || M68KNOMMU || FRV || UML || AVR32 || SUPERH || BLACKFIN || MN10300) || ARCH_WANT_FRAME_POINTERS) && (DEBUG_INFO && UML || ARCH_WANT_FRAME_POINTERS)]
>   depends on [!THUMB2_KERNEL]
>   default [y] if [!THUMB2_KERNEL && !ARM_UNWIND]
>   inherited [!THUMB2_KERNEL]
>  }
>  config ARM_UNWIND boolean {
>   prompt "Enable stack unwinding support" if [AEABI && EXPERIMENTAL]
>   depends on [AEABI && EXPERIMENTAL]
>   default [y] if [AEABI && EXPERIMENTAL]
>   inherited [AEABI && EXPERIMENTAL]
34499,34507c37960,37961
<  config EARLY_PRINTK boolean {
<   prompt "Early printk" if [EMBEDDED]
<   default [y] if []
<   config EARLY_PRINTK_DBGP boolean {
<    prompt "Early printk via EHCI debug port" if [EARLY_PRINTK && PCI]
<    default [n] if [EARLY_PRINTK && PCI]
<    depends on [EARLY_PRINTK && PCI]
<    inherited [EARLY_PRINTK && PCI]
<   }
---
>  config DEBUG_USER boolean {
>   prompt "Verbose user fault messages" if []
34509,34510c37963,37964
<  config DEBUG_STACKOVERFLOW boolean {
<   prompt "Check for stack overflows" if [DEBUG_KERNEL]
---
>  config DEBUG_ERRORS boolean {
>   prompt "Verbose kernel error messages" if [DEBUG_KERNEL]
34515,34527c37969
<   prompt "Stack utilization instrumentation" if [DEBUG_KERNEL]
<   depends on [DEBUG_KERNEL]
<   inherited [DEBUG_KERNEL]
<  }
<  config DEBUG_PER_CPU_MAPS boolean {
<   prompt "Debug access to per_cpu maps" if [DEBUG_KERNEL && SMP]
<   depends on [DEBUG_KERNEL]
<   depends on [SMP]
<   default [n] if [DEBUG_KERNEL && SMP]
<   inherited [DEBUG_KERNEL && SMP]
<  }
<  config X86_PTDUMP boolean {
<   prompt "Export kernel pagetable layout to userspace via debugfs" if [DEBUG_KERNEL]
---
>   prompt "Enable stack utilization instrumentation" if [DEBUG_KERNEL]
34529d37970
<   select DEBUG_FS if [DEBUG_KERNEL]
34532,34664c37973,37974
<  config DEBUG_RODATA boolean {
<   prompt "Write protect kernel read-only data structures" if [DEBUG_KERNEL]
<   default [y] if [DEBUG_KERNEL]
<   depends on [DEBUG_KERNEL]
<   inherited [DEBUG_KERNEL]
<   config DEBUG_RODATA_TEST boolean {
<    prompt "Testcase for the DEBUG_RODATA feature" if [DEBUG_RODATA]
<    depends on [DEBUG_RODATA]
<    default [y] if [DEBUG_RODATA]
<    inherited [DEBUG_RODATA]
<   }
<  }
<  config DEBUG_NX_TEST tristate {
<   prompt "Testcase for the NX non-executable stack feature" if [DEBUG_KERNEL && m && <choice>]
<   depends on [DEBUG_KERNEL && m]
<   inherited [DEBUG_KERNEL && m && <choice>]
<  }
<  config 4KSTACKS boolean {
<   prompt "Use 4Kb for kernel stacks instead of 8Kb" if [X86_32]
<   depends on [X86_32]
<   inherited [X86_32]
<  }
<  config DOUBLEFAULT boolean {
<   default [y] if [X86_32]
<   prompt "Enable doublefault exception handler" if [X86_32 && EMBEDDED]
<   depends on [X86_32]
<   inherited [X86_32]
<  }
<  config IOMMU_DEBUG boolean {
<   prompt "Enable IOMMU debugging" if [GART_IOMMU && DEBUG_KERNEL && X86_64]
<   depends on [GART_IOMMU && DEBUG_KERNEL]
<   depends on [X86_64]
<   inherited [GART_IOMMU && DEBUG_KERNEL && X86_64]
<  }
<  config IOMMU_STRESS boolean {
<   prompt "Enable IOMMU stress-test mode" if []
<  }
<  config IOMMU_LEAK boolean {
<   prompt "IOMMU leak tracing" if [IOMMU_DEBUG && DMA_API_DEBUG]
<   depends on [IOMMU_DEBUG && DMA_API_DEBUG]
<   inherited [IOMMU_DEBUG && DMA_API_DEBUG]
<  }
<  config X86_DS_SELFTEST boolean {
<   prompt "DS selftest" if [DEBUG_KERNEL && X86_DS]
<   default [y] if [DEBUG_KERNEL && X86_DS]
<   depends on [DEBUG_KERNEL]
<   depends on [X86_DS]
<   inherited [DEBUG_KERNEL && X86_DS]
<  }
<  config HAVE_MMIOTRACE_SUPPORT boolean {
<   default [y] if []
<  }
<  config X86_DECODER_SELFTEST boolean {
<   prompt "x86 instruction decoder selftest" if [DEBUG_KERNEL && KPROBES]
<   depends on [DEBUG_KERNEL && KPROBES]
<   inherited [DEBUG_KERNEL && KPROBES]
<  }
<  config IO_DELAY_TYPE_0X80 integer {
<   default [0] if []
<  }
<  config IO_DELAY_TYPE_0XED integer {
<   default [1] if []
<  }
<  config IO_DELAY_TYPE_UDELAY integer {
<   default [2] if []
<  }
<  config IO_DELAY_TYPE_NONE integer {
<   default [3] if []
<  }
<  choice boolean {
<   prompt "IO delay type" if []
<   default [IO_DELAY_0X80] if []
<   config IO_DELAY_0X80 boolean {
<    prompt "port 0x80 based port-IO delay [recommended]" if [<choice>]
<    inherited [<choice>]
<   }
<   config IO_DELAY_0XED boolean {
<    prompt "port 0xed based port-IO delay" if [<choice>]
<    inherited [<choice>]
<   }
<   config IO_DELAY_UDELAY boolean {
<    prompt "udelay based port-IO delay" if [<choice>]
<    inherited [<choice>]
<   }
<   config IO_DELAY_NONE boolean {
<    prompt "no port-IO delay" if [<choice>]
<    inherited [<choice>]
<   }
<  }
<  if [IO_DELAY_0X80] {
<   config DEFAULT_IO_DELAY_TYPE integer {
<    default [IO_DELAY_TYPE_0X80] if [IO_DELAY_0X80]
<    default [IO_DELAY_TYPE_0XED] if [IO_DELAY_0XED]
<    default [IO_DELAY_TYPE_UDELAY] if [IO_DELAY_UDELAY]
<    default [IO_DELAY_TYPE_NONE] if [IO_DELAY_NONE]
<    inherited [IO_DELAY_0X80]
<   }
<  }
<  if [IO_DELAY_0XED] {
<   config DEFAULT_IO_DELAY_TYPE integer {
<    default [IO_DELAY_TYPE_0X80] if [IO_DELAY_0X80]
<    default [IO_DELAY_TYPE_0XED] if [IO_DELAY_0XED]
<    default [IO_DELAY_TYPE_UDELAY] if [IO_DELAY_UDELAY]
<    default [IO_DELAY_TYPE_NONE] if [IO_DELAY_NONE]
<    inherited [IO_DELAY_0XED]
<   }
<  }
<  if [IO_DELAY_UDELAY] {
<   config DEFAULT_IO_DELAY_TYPE integer {
<    default [IO_DELAY_TYPE_0X80] if [IO_DELAY_0X80]
<    default [IO_DELAY_TYPE_0XED] if [IO_DELAY_0XED]
<    default [IO_DELAY_TYPE_UDELAY] if [IO_DELAY_UDELAY]
<    default [IO_DELAY_TYPE_NONE] if [IO_DELAY_NONE]
<    inherited [IO_DELAY_UDELAY]
<   }
<  }
<  if [IO_DELAY_NONE] {
<   config DEFAULT_IO_DELAY_TYPE integer {
<    default [IO_DELAY_TYPE_0X80] if [IO_DELAY_0X80]
<    default [IO_DELAY_TYPE_0XED] if [IO_DELAY_0XED]
<    default [IO_DELAY_TYPE_UDELAY] if [IO_DELAY_UDELAY]
<    default [IO_DELAY_TYPE_NONE] if [IO_DELAY_NONE]
<    inherited [IO_DELAY_NONE]
<   }
<  }
<  config DEBUG_BOOT_PARAMS boolean {
<   prompt "Debug boot parameters" if [DEBUG_KERNEL && DEBUG_FS]
<   depends on [DEBUG_KERNEL]
<   depends on [DEBUG_FS]
<   inherited [DEBUG_KERNEL && DEBUG_FS]
<  }
<  config CPA_DEBUG boolean {
<   prompt "CPA self-test code" if [DEBUG_KERNEL]
---
>  config DEBUG_LL boolean {
>   prompt "Kernel low-level debugging functions" if [DEBUG_KERNEL]
34667,34674c37977,38006
<  }
<  config OPTIMIZE_INLINING boolean {
<   prompt "Allow gcc to uninline functions marked 'inline'" if []
<  }
<  config DEBUG_STRICT_USER_COPY_CHECKS boolean {
<   prompt "Strict copy size checks" if [DEBUG_KERNEL && !TRACE_BRANCH_PROFILING]
<   depends on [DEBUG_KERNEL && !TRACE_BRANCH_PROFILING]
<   inherited [DEBUG_KERNEL && !TRACE_BRANCH_PROFILING]
---
>   config EARLY_PRINTK boolean {
>    prompt "Early printk" if [DEBUG_LL]
>    depends on [DEBUG_LL]
>    inherited [DEBUG_LL]
>   }
>   config DEBUG_ICEDCC boolean {
>    prompt "Kernel low-level debugging via EmbeddedICE DCC channel" if [DEBUG_LL]
>    depends on [DEBUG_LL]
>    inherited [DEBUG_LL]
>   }
>  }
>  config OC_ETM boolean {
>   prompt "On-chip ETM and ETB" if []
>   select ARM_AMBA if []
>  }
>  config DEBUG_DC21285_PORT boolean {
>   prompt "Kernel low-level debugging messages via footbridge serial port" if [DEBUG_LL && FOOTBRIDGE]
>   depends on [DEBUG_LL && FOOTBRIDGE]
>   inherited [DEBUG_LL && FOOTBRIDGE]
>  }
>  config DEBUG_CLPS711X_UART2 boolean {
>   prompt "Kernel low-level debugging messages via UART2" if [DEBUG_LL && ARCH_CLPS711X]
>   depends on [DEBUG_LL && ARCH_CLPS711X]
>   inherited [DEBUG_LL && ARCH_CLPS711X]
>  }
>  config DEBUG_S3C_UART integer {
>   depends on [PLAT_S3C]
>   prompt "S3C UART to use for low-level debug" if [PLAT_S3C]
>   default [0] if [PLAT_S3C]
>   inherited [PLAT_S3C]
35450,35515d38781
<   }
<  }
< }
< config HAVE_KVM boolean {
< }
< config HAVE_KVM_IRQCHIP boolean {
< }
< config HAVE_KVM_EVENTFD boolean {
<  select EVENTFD if []
< }
< config KVM_APIC_ARCHITECTURE boolean {
< }
< menuconfig VIRTUALIZATION boolean {
<  prompt "Virtualization" if [HAVE_KVM || X86]
<  depends on [HAVE_KVM || X86]
<  default [y] if [HAVE_KVM || X86]
<  inherited [HAVE_KVM || X86]
<  if [VIRTUALIZATION] {
<   config KVM tristate {
<    prompt "Kernel-based Virtual Machine (KVM) support" if [VIRTUALIZATION && HAVE_KVM && PCI]
<    depends on [HAVE_KVM]
<    depends on [PCI]
<    select PREEMPT_NOTIFIERS if [VIRTUALIZATION && HAVE_KVM && PCI]
<    select MMU_NOTIFIER if [VIRTUALIZATION && HAVE_KVM && PCI]
<    select ANON_INODES if [VIRTUALIZATION && HAVE_KVM && PCI]
<    select HAVE_KVM_IRQCHIP if [VIRTUALIZATION && HAVE_KVM && PCI]
<    select HAVE_KVM_EVENTFD if [VIRTUALIZATION && HAVE_KVM && PCI]
<    select KVM_APIC_ARCHITECTURE if [VIRTUALIZATION && HAVE_KVM && PCI]
<    select USER_RETURN_NOTIFIER if [VIRTUALIZATION && HAVE_KVM && PCI]
<    inherited [VIRTUALIZATION && HAVE_KVM && PCI]
<    config KVM_INTEL tristate {
<     prompt "KVM for Intel processors support" if [VIRTUALIZATION && KVM]
<     depends on [KVM]
<     inherited [VIRTUALIZATION && KVM]
<    }
<    config KVM_AMD tristate {
<     prompt "KVM for AMD processors support" if [VIRTUALIZATION && KVM]
<     depends on [KVM]
<     inherited [VIRTUALIZATION && KVM]
<    }
<   }
<   config LGUEST tristate {
<    prompt "Linux hypervisor example code" if [VIRTUALIZATION && X86_32 && EXPERIMENTAL && EVENTFD]
<    depends on [X86_32 && EXPERIMENTAL && EVENTFD]
<    select HVC_DRIVER if [VIRTUALIZATION && X86_32 && EXPERIMENTAL && EVENTFD]
<    inherited [VIRTUALIZATION && X86_32 && EXPERIMENTAL && EVENTFD]
<   }
<   config VIRTIO tristate {
<    inherited [VIRTUALIZATION]
<   }
<   config VIRTIO_RING tristate {
<    depends on [VIRTIO]
<    inherited [VIRTUALIZATION && VIRTIO]
<   }
<   config VIRTIO_PCI tristate {
<    prompt "PCI driver for virtio devices (EXPERIMENTAL)" if [VIRTUALIZATION && PCI && EXPERIMENTAL]
<    depends on [PCI && EXPERIMENTAL]
<    select VIRTIO if [VIRTUALIZATION && PCI && EXPERIMENTAL]
<    select VIRTIO_RING if [VIRTUALIZATION && PCI && EXPERIMENTAL]
<    inherited [VIRTUALIZATION && PCI && EXPERIMENTAL]
<   }
<   config VIRTIO_BALLOON tristate {
<    prompt "Virtio balloon driver (EXPERIMENTAL)" if [VIRTUALIZATION]
<    select VIRTIO if [VIRTUALIZATION]
<    select VIRTIO_RING if [VIRTUALIZATION]
<    inherited [VIRTUALIZATION]
